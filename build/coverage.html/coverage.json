{"/home/travis/build/npmtest/node-npmtest-jhipster-uml/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_jhipster_uml */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/lib.npmtest_jhipster_uml.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/lib.npmtest_jhipster_uml.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":57}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":63}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_jhipster_uml */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_jhipster_uml = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_jhipster_uml = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":56}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":70},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-jhipster-uml && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_jhipster_uml */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_jhipster_uml","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_jhipster_uml.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_jhipster_uml.rollup.js'] =","            local.assetsDict['/assets.npmtest_jhipster_uml.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_jhipster_uml.__dirname + '/lib.npmtest_jhipster_uml.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/module/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/module/index.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":7,"column":56}},"2":{"start":{"line":9,"column":0},"end":{"line":16,"column":2}}},"branchMap":{},"code":["'use strict';","","const Editors = require('../lib/editors/editors'),","    createParser = require('../lib/editors/parser_factory').createParser,","    generateEntities = require('../lib/entity_generator').generateEntities,","    createEntities = require('../lib/entitiescreator').createEntities,","    JDLExporter = require('../lib/export/jdl_exporter');","","module.exports = {","  Editors: Editors,","  createParser: createParser,","  createEntities: createEntities,","  generateEntities: generateEntities,","  toJDL: JDLExporter.toJDL,","  toJDLString: JDLExporter.toJDLString","};",""],"l":{"3":1,"9":1}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/editors/editors.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/editors/editors.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":56}},"2":{"start":{"line":7,"column":0},"end":{"line":19,"column":2}}},"branchMap":{},"code":["'use strict';","","const ModelioParser = require('./modelio_parser'),","    GenMyModelParser = require('./genmymodel_parser'),","    UMLDesignerParser = require('./umldesigner_parser');","","module.exports = {","  MODELIO: 'modelio',","  UMLDESIGNER: 'umldesigner',","  GENMYMODEL: 'genmymodel',","  Parsers: {","    modelio: ModelioParser,","    umldesigner: UMLDesignerParser,","    genmymodel: GenMyModelParser","  },","  UndetectedEditors: [","    'umldesigner'","  ]","};",""],"l":{"3":1,"7":1}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/editors/modelio_parser.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/editors/modelio_parser.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1,"101":0,"102":0,"103":1,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":1,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":1,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":1,"154":0,"155":0,"156":1,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0],"35":[0,0,0],"36":[0,0],"37":[0,0,0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"parse","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":21}}},"2":{"name":"initParser","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":26}}},"3":{"name":"findElements","line":54,"loc":{"start":{"line":54,"column":0},"end":{"line":54,"column":24}}},"4":{"name":"findElementsInNode","line":58,"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":40}}},"5":{"name":"findConstraints","line":84,"loc":{"start":{"line":84,"column":0},"end":{"line":84,"column":27}}},"6":{"name":"fillTypes","line":96,"loc":{"start":{"line":96,"column":0},"end":{"line":96,"column":21}}},"7":{"name":"addType","line":102,"loc":{"start":{"line":102,"column":0},"end":{"line":102,"column":30}}},"8":{"name":"fillEnums","line":119,"loc":{"start":{"line":119,"column":0},"end":{"line":119,"column":21}}},"9":{"name":"addEnum","line":125,"loc":{"start":{"line":125,"column":0},"end":{"line":125,"column":30}}},"10":{"name":"getEnumValues","line":139,"loc":{"start":{"line":139,"column":0},"end":{"line":139,"column":36}}},"11":{"name":"fillAssociations","line":153,"loc":{"start":{"line":153,"column":0},"end":{"line":153,"column":28}}},"12":{"name":"addAssociation","line":159,"loc":{"start":{"line":159,"column":0},"end":{"line":159,"column":44}}},"13":{"name":"fillClassesAndFields","line":182,"loc":{"start":{"line":182,"column":0},"end":{"line":182,"column":32}}},"14":{"name":"addClassAndFields","line":188,"loc":{"start":{"line":188,"column":0},"end":{"line":188,"column":41}}},"15":{"name":"checkForUserClass","line":201,"loc":{"start":{"line":201,"column":0},"end":{"line":201,"column":41}}},"16":{"name":"handleAttributes","line":207,"loc":{"start":{"line":207,"column":0},"end":{"line":207,"column":40}}},"17":{"name":"addClass","line":221,"loc":{"start":{"line":221,"column":0},"end":{"line":221,"column":32}}},"18":{"name":"addField","line":245,"loc":{"start":{"line":245,"column":0},"end":{"line":245,"column":36}}},"19":{"name":"addRegularField","line":253,"loc":{"start":{"line":253,"column":0},"end":{"line":253,"column":43}}},"20":{"name":"completeAssociation","line":277,"loc":{"start":{"line":277,"column":0},"end":{"line":277,"column":51}}},"21":{"name":"fillConstraints","line":307,"loc":{"start":{"line":307,"column":0},"end":{"line":307,"column":27}}},"22":{"name":"addConstraint","line":313,"loc":{"start":{"line":313,"column":0},"end":{"line":313,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":11,"column":71}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":9}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":18}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":15}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":15}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":21}},"7":{"start":{"line":19,"column":0},"end":{"line":21,"column":2}},"8":{"start":{"line":23,"column":0},"end":{"line":32,"column":1}},"9":{"start":{"line":24,"column":2},"end":{"line":24,"column":19}},"10":{"start":{"line":25,"column":2},"end":{"line":25,"column":17}},"11":{"start":{"line":26,"column":2},"end":{"line":26,"column":14}},"12":{"start":{"line":27,"column":2},"end":{"line":27,"column":14}},"13":{"start":{"line":28,"column":2},"end":{"line":28,"column":21}},"14":{"start":{"line":29,"column":2},"end":{"line":29,"column":25}},"15":{"start":{"line":30,"column":2},"end":{"line":30,"column":20}},"16":{"start":{"line":31,"column":2},"end":{"line":31,"column":20}},"17":{"start":{"line":34,"column":0},"end":{"line":51,"column":1}},"18":{"start":{"line":35,"column":2},"end":{"line":39,"column":3}},"19":{"start":{"line":36,"column":4},"end":{"line":38,"column":64}},"20":{"start":{"line":40,"column":2},"end":{"line":40,"column":19}},"21":{"start":{"line":41,"column":2},"end":{"line":41,"column":37}},"22":{"start":{"line":42,"column":2},"end":{"line":42,"column":52}},"23":{"start":{"line":43,"column":2},"end":{"line":49,"column":4}},"24":{"start":{"line":50,"column":2},"end":{"line":50,"column":32}},"25":{"start":{"line":54,"column":0},"end":{"line":56,"column":1}},"26":{"start":{"line":55,"column":2},"end":{"line":55,"column":31}},"27":{"start":{"line":58,"column":0},"end":{"line":82,"column":1}},"28":{"start":{"line":59,"column":2},"end":{"line":80,"column":3}},"29":{"start":{"line":60,"column":4},"end":{"line":60,"column":42}},"30":{"start":{"line":61,"column":4},"end":{"line":61,"column":43}},"31":{"start":{"line":62,"column":4},"end":{"line":79,"column":5}},"32":{"start":{"line":64,"column":6},"end":{"line":64,"column":49}},"33":{"start":{"line":65,"column":6},"end":{"line":65,"column":12}},"34":{"start":{"line":67,"column":6},"end":{"line":67,"column":49}},"35":{"start":{"line":68,"column":6},"end":{"line":68,"column":12}},"36":{"start":{"line":70,"column":6},"end":{"line":70,"column":51}},"37":{"start":{"line":71,"column":6},"end":{"line":71,"column":12}},"38":{"start":{"line":73,"column":6},"end":{"line":73,"column":56}},"39":{"start":{"line":74,"column":6},"end":{"line":74,"column":12}},"40":{"start":{"line":76,"column":6},"end":{"line":76,"column":53}},"41":{"start":{"line":77,"column":6},"end":{"line":77,"column":12}},"42":{"start":{"line":81,"column":2},"end":{"line":81,"column":20}},"43":{"start":{"line":84,"column":0},"end":{"line":94,"column":1}},"44":{"start":{"line":85,"column":2},"end":{"line":87,"column":3}},"45":{"start":{"line":86,"column":4},"end":{"line":86,"column":11}},"46":{"start":{"line":88,"column":2},"end":{"line":93,"column":3}},"47":{"start":{"line":89,"column":4},"end":{"line":89,"column":36}},"48":{"start":{"line":90,"column":4},"end":{"line":92,"column":5}},"49":{"start":{"line":91,"column":6},"end":{"line":91,"column":51}},"50":{"start":{"line":96,"column":0},"end":{"line":100,"column":1}},"51":{"start":{"line":97,"column":2},"end":{"line":99,"column":3}},"52":{"start":{"line":98,"column":4},"end":{"line":98,"column":92}},"53":{"start":{"line":102,"column":0},"end":{"line":117,"column":1}},"54":{"start":{"line":103,"column":2},"end":{"line":110,"column":3}},"55":{"start":{"line":104,"column":4},"end":{"line":109,"column":6}},"56":{"start":{"line":111,"column":2},"end":{"line":115,"column":3}},"57":{"start":{"line":112,"column":4},"end":{"line":114,"column":73}},"58":{"start":{"line":116,"column":2},"end":{"line":116,"column":88}},"59":{"start":{"line":119,"column":0},"end":{"line":123,"column":1}},"60":{"start":{"line":120,"column":2},"end":{"line":122,"column":3}},"61":{"start":{"line":121,"column":4},"end":{"line":121,"column":92}},"62":{"start":{"line":125,"column":0},"end":{"line":137,"column":1}},"63":{"start":{"line":126,"column":2},"end":{"line":129,"column":3}},"64":{"start":{"line":127,"column":4},"end":{"line":128,"column":73}},"65":{"start":{"line":130,"column":2},"end":{"line":130,"column":18}},"66":{"start":{"line":131,"column":2},"end":{"line":133,"column":3}},"67":{"start":{"line":132,"column":4},"end":{"line":132,"column":40}},"68":{"start":{"line":134,"column":2},"end":{"line":136,"column":48}},"69":{"start":{"line":139,"column":0},"end":{"line":151,"column":1}},"70":{"start":{"line":140,"column":2},"end":{"line":140,"column":18}},"71":{"start":{"line":141,"column":2},"end":{"line":149,"column":3}},"72":{"start":{"line":142,"column":4},"end":{"line":142,"column":51}},"73":{"start":{"line":143,"column":4},"end":{"line":147,"column":5}},"74":{"start":{"line":144,"column":6},"end":{"line":146,"column":51}},"75":{"start":{"line":148,"column":4},"end":{"line":148,"column":51}},"76":{"start":{"line":150,"column":2},"end":{"line":150,"column":16}},"77":{"start":{"line":153,"column":0},"end":{"line":157,"column":1}},"78":{"start":{"line":154,"column":2},"end":{"line":156,"column":3}},"79":{"start":{"line":155,"column":4},"end":{"line":155,"column":106}},"80":{"start":{"line":159,"column":0},"end":{"line":180,"column":1}},"81":{"start":{"line":160,"column":2},"end":{"line":163,"column":4}},"82":{"start":{"line":164,"column":2},"end":{"line":166,"column":3}},"83":{"start":{"line":165,"column":4},"end":{"line":165,"column":57}},"84":{"start":{"line":167,"column":2},"end":{"line":175,"column":3}},"85":{"start":{"line":169,"column":4},"end":{"line":172,"column":6}},"86":{"start":{"line":174,"column":4},"end":{"line":174,"column":53}},"87":{"start":{"line":176,"column":2},"end":{"line":178,"column":3}},"88":{"start":{"line":177,"column":4},"end":{"line":177,"column":89}},"89":{"start":{"line":179,"column":2},"end":{"line":179,"column":77}},"90":{"start":{"line":182,"column":0},"end":{"line":186,"column":1}},"91":{"start":{"line":183,"column":2},"end":{"line":185,"column":3}},"92":{"start":{"line":184,"column":4},"end":{"line":184,"column":104}},"93":{"start":{"line":188,"column":0},"end":{"line":199,"column":1}},"94":{"start":{"line":189,"column":2},"end":{"line":192,"column":3}},"95":{"start":{"line":190,"column":4},"end":{"line":191,"column":61}},"96":{"start":{"line":193,"column":2},"end":{"line":193,"column":34}},"97":{"start":{"line":194,"column":2},"end":{"line":194,"column":25}},"98":{"start":{"line":196,"column":2},"end":{"line":198,"column":3}},"99":{"start":{"line":197,"column":4},"end":{"line":197,"column":35}},"100":{"start":{"line":201,"column":0},"end":{"line":205,"column":1}},"101":{"start":{"line":202,"column":2},"end":{"line":204,"column":3}},"102":{"start":{"line":203,"column":4},"end":{"line":203,"column":54}},"103":{"start":{"line":207,"column":0},"end":{"line":219,"column":1}},"104":{"start":{"line":208,"column":2},"end":{"line":218,"column":3}},"105":{"start":{"line":209,"column":4},"end":{"line":209,"column":51}},"106":{"start":{"line":210,"column":4},"end":{"line":214,"column":5}},"107":{"start":{"line":211,"column":6},"end":{"line":213,"column":91}},"108":{"start":{"line":215,"column":4},"end":{"line":217,"column":5}},"109":{"start":{"line":216,"column":6},"end":{"line":216,"column":52}},"110":{"start":{"line":221,"column":0},"end":{"line":243,"column":1}},"111":{"start":{"line":222,"column":2},"end":{"line":222,"column":66}},"112":{"start":{"line":223,"column":2},"end":{"line":226,"column":4}},"113":{"start":{"line":227,"column":2},"end":{"line":230,"column":5}},"114":{"start":{"line":231,"column":2},"end":{"line":238,"column":3}},"115":{"start":{"line":233,"column":4},"end":{"line":237,"column":7}},"116":{"start":{"line":239,"column":2},"end":{"line":241,"column":3}},"117":{"start":{"line":240,"column":4},"end":{"line":240,"column":61}},"118":{"start":{"line":242,"column":2},"end":{"line":242,"column":59}},"119":{"start":{"line":245,"column":0},"end":{"line":251,"column":1}},"120":{"start":{"line":246,"column":2},"end":{"line":250,"column":3}},"121":{"start":{"line":247,"column":4},"end":{"line":247,"column":83}},"122":{"start":{"line":249,"column":4},"end":{"line":249,"column":38}},"123":{"start":{"line":253,"column":0},"end":{"line":275,"column":1}},"124":{"start":{"line":254,"column":2},"end":{"line":258,"column":5}},"125":{"start":{"line":259,"column":2},"end":{"line":259,"column":55}},"126":{"start":{"line":260,"column":2},"end":{"line":270,"column":3}},"127":{"start":{"line":261,"column":4},"end":{"line":261,"column":36}},"128":{"start":{"line":262,"column":9},"end":{"line":270,"column":3}},"129":{"start":{"line":263,"column":4},"end":{"line":265,"column":68}},"130":{"start":{"line":267,"column":4},"end":{"line":267,"column":90}},"131":{"start":{"line":268,"column":4},"end":{"line":268,"column":32}},"132":{"start":{"line":269,"column":4},"end":{"line":269,"column":30}},"133":{"start":{"line":271,"column":2},"end":{"line":273,"column":3}},"134":{"start":{"line":272,"column":4},"end":{"line":272,"column":56}},"135":{"start":{"line":274,"column":2},"end":{"line":274,"column":63}},"136":{"start":{"line":277,"column":0},"end":{"line":305,"column":1}},"137":{"start":{"line":278,"column":2},"end":{"line":296,"column":3}},"138":{"start":{"line":280,"column":4},"end":{"line":284,"column":5}},"139":{"start":{"line":281,"column":6},"end":{"line":281,"column":51}},"140":{"start":{"line":283,"column":6},"end":{"line":283,"column":50}},"141":{"start":{"line":285,"column":4},"end":{"line":285,"column":10}},"142":{"start":{"line":287,"column":4},"end":{"line":293,"column":5}},"143":{"start":{"line":289,"column":6},"end":{"line":289,"column":52}},"144":{"start":{"line":290,"column":11},"end":{"line":293,"column":5}},"145":{"start":{"line":292,"column":6},"end":{"line":292,"column":51}},"146":{"start":{"line":294,"column":4},"end":{"line":294,"column":10}},"147":{"start":{"line":297,"column":2},"end":{"line":297,"column":34}},"148":{"start":{"line":298,"column":2},"end":{"line":298,"column":51}},"149":{"start":{"line":299,"column":2},"end":{"line":301,"column":3}},"150":{"start":{"line":300,"column":4},"end":{"line":300,"column":51}},"151":{"start":{"line":302,"column":2},"end":{"line":304,"column":3}},"152":{"start":{"line":303,"column":4},"end":{"line":303,"column":64}},"153":{"start":{"line":307,"column":0},"end":{"line":311,"column":1}},"154":{"start":{"line":308,"column":2},"end":{"line":310,"column":3}},"155":{"start":{"line":309,"column":4},"end":{"line":309,"column":75}},"156":{"start":{"line":313,"column":0},"end":{"line":336,"column":1}},"157":{"start":{"line":314,"column":2},"end":{"line":317,"column":3}},"158":{"start":{"line":315,"column":4},"end":{"line":316,"column":67}},"159":{"start":{"line":318,"column":2},"end":{"line":318,"column":38}},"160":{"start":{"line":319,"column":2},"end":{"line":319,"column":98}},"161":{"start":{"line":320,"column":2},"end":{"line":320,"column":102}},"162":{"start":{"line":322,"column":2},"end":{"line":328,"column":3}},"163":{"start":{"line":324,"column":4},"end":{"line":327,"column":103}},"164":{"start":{"line":330,"column":2},"end":{"line":330,"column":57}},"165":{"start":{"line":331,"column":2},"end":{"line":335,"column":4}}},"branchMap":{"1":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"2":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":6},"end":{"line":35,"column":16}},{"start":{"line":35,"column":20},"end":{"line":35,"column":39}}]},"3":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":21},"end":{"line":42,"column":42}},{"start":{"line":42,"column":46},"end":{"line":42,"column":51}}]},"4":{"line":62,"type":"switch","locations":[{"start":{"line":63,"column":4},"end":{"line":65,"column":12}},{"start":{"line":66,"column":4},"end":{"line":68,"column":12}},{"start":{"line":69,"column":4},"end":{"line":71,"column":12}},{"start":{"line":72,"column":4},"end":{"line":74,"column":12}},{"start":{"line":75,"column":4},"end":{"line":77,"column":12}},{"start":{"line":78,"column":4},"end":{"line":78,"column":12}}]},"5":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":2},"end":{"line":85,"column":2}},{"start":{"line":85,"column":2},"end":{"line":85,"column":2}}]},"6":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":4}},{"start":{"line":90,"column":4},"end":{"line":90,"column":4}}]},"7":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":2},"end":{"line":103,"column":2}},{"start":{"line":103,"column":2},"end":{"line":103,"column":2}}]},"8":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":2},"end":{"line":111,"column":2}},{"start":{"line":111,"column":2},"end":{"line":111,"column":2}}]},"9":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":2},"end":{"line":126,"column":2}},{"start":{"line":126,"column":2},"end":{"line":126,"column":2}}]},"10":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":2},"end":{"line":131,"column":2}},{"start":{"line":131,"column":2},"end":{"line":131,"column":2}}]},"11":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":143,"column":4}},{"start":{"line":143,"column":4},"end":{"line":143,"column":4}}]},"12":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":2},"end":{"line":164,"column":2}},{"start":{"line":164,"column":2},"end":{"line":164,"column":2}}]},"13":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":167,"column":2}},{"start":{"line":167,"column":2},"end":{"line":167,"column":2}}]},"14":{"line":167,"type":"binary-expr","locations":[{"start":{"line":167,"column":6},"end":{"line":167,"column":47}},{"start":{"line":168,"column":9},"end":{"line":168,"column":69}}]},"15":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":2},"end":{"line":176,"column":2}},{"start":{"line":176,"column":2},"end":{"line":176,"column":2}}]},"16":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":6},"end":{"line":176,"column":36}},{"start":{"line":176,"column":40},"end":{"line":176,"column":83}}]},"17":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":2},"end":{"line":189,"column":2}},{"start":{"line":189,"column":2},"end":{"line":189,"column":2}}]},"18":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":2},"end":{"line":196,"column":2}},{"start":{"line":196,"column":2},"end":{"line":196,"column":2}}]},"19":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":2},"end":{"line":202,"column":2}},{"start":{"line":202,"column":2},"end":{"line":202,"column":2}}]},"20":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":6},"end":{"line":202,"column":29}},{"start":{"line":202,"column":33},"end":{"line":202,"column":77}}]},"21":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":4},"end":{"line":210,"column":4}},{"start":{"line":210,"column":4},"end":{"line":210,"column":4}}]},"22":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":4},"end":{"line":215,"column":4}},{"start":{"line":215,"column":4},"end":{"line":215,"column":4}}]},"23":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":2},"end":{"line":231,"column":2}},{"start":{"line":231,"column":2},"end":{"line":231,"column":2}}]},"24":{"line":231,"type":"binary-expr","locations":[{"start":{"line":231,"column":6},"end":{"line":231,"column":50}},{"start":{"line":232,"column":10},"end":{"line":232,"column":54}},{"start":{"line":232,"column":58},"end":{"line":232,"column":75}}]},"25":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":2},"end":{"line":239,"column":2}},{"start":{"line":239,"column":2},"end":{"line":239,"column":2}}]},"26":{"line":239,"type":"binary-expr","locations":[{"start":{"line":239,"column":6},"end":{"line":239,"column":31}},{"start":{"line":239,"column":35},"end":{"line":239,"column":68}}]},"27":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":2},"end":{"line":246,"column":2}},{"start":{"line":246,"column":2},"end":{"line":246,"column":2}}]},"28":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":2},"end":{"line":260,"column":2}},{"start":{"line":260,"column":2},"end":{"line":260,"column":2}}]},"29":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":9},"end":{"line":262,"column":9}},{"start":{"line":262,"column":9},"end":{"line":262,"column":9}}]},"30":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":2},"end":{"line":271,"column":2}},{"start":{"line":271,"column":2},"end":{"line":271,"column":2}}]},"31":{"line":271,"type":"binary-expr","locations":[{"start":{"line":271,"column":6},"end":{"line":271,"column":26}},{"start":{"line":271,"column":30},"end":{"line":271,"column":58}}]},"32":{"line":278,"type":"switch","locations":[{"start":{"line":279,"column":2},"end":{"line":285,"column":10}},{"start":{"line":286,"column":2},"end":{"line":294,"column":10}},{"start":{"line":295,"column":2},"end":{"line":295,"column":10}}]},"33":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":4},"end":{"line":280,"column":4}},{"start":{"line":280,"column":4},"end":{"line":280,"column":4}}]},"34":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":4},"end":{"line":287,"column":4}},{"start":{"line":287,"column":4},"end":{"line":287,"column":4}}]},"35":{"line":287,"type":"binary-expr","locations":[{"start":{"line":287,"column":8},"end":{"line":287,"column":26}},{"start":{"line":287,"column":30},"end":{"line":287,"column":67}},{"start":{"line":288,"column":11},"end":{"line":288,"column":58}}]},"36":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":11},"end":{"line":290,"column":11}},{"start":{"line":290,"column":11},"end":{"line":290,"column":11}}]},"37":{"line":290,"type":"binary-expr","locations":[{"start":{"line":290,"column":15},"end":{"line":290,"column":34}},{"start":{"line":290,"column":39},"end":{"line":290,"column":60}},{"start":{"line":290,"column":64},"end":{"line":290,"column":101}},{"start":{"line":291,"column":11},"end":{"line":291,"column":57}}]},"38":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":2},"end":{"line":299,"column":2}},{"start":{"line":299,"column":2},"end":{"line":299,"column":2}}]},"39":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":2},"end":{"line":302,"column":2}},{"start":{"line":302,"column":2},"end":{"line":302,"column":2}}]},"40":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":6},"end":{"line":302,"column":26}},{"start":{"line":302,"column":30},"end":{"line":302,"column":53}}]},"41":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":2},"end":{"line":314,"column":2}},{"start":{"line":314,"column":2},"end":{"line":314,"column":2}}]},"42":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":2},"end":{"line":322,"column":2}},{"start":{"line":322,"column":2},"end":{"line":322,"column":2}}]},"43":{"line":322,"type":"binary-expr","locations":[{"start":{"line":322,"column":7},"end":{"line":322,"column":11}},{"start":{"line":322,"column":15},"end":{"line":322,"column":75}},{"start":{"line":323,"column":10},"end":{"line":323,"column":18}},{"start":{"line":323,"column":22},"end":{"line":323,"column":79}}]}},"code":["'use strict';","","const _ = require('lodash'),","    ParsedData = require('../data/parsed_data'),","    parser_helper = require('./parser_helper'),","    cardinalities = require('../cardinalities'),","    checkForReservedClassName = require('../utils/jhipster_utils').checkForReservedClassName,","    checkForReservedTableName = require('../utils/jhipster_utils').checkForReservedTableName,","    checkForReservedFieldName = require('../utils/jhipster_utils').checkForReservedFieldName,","    buildException = require('../exceptions/exception_factory').buildException,","    exceptions = require('../exceptions/exception_factory').exceptions;","","var root;","var databaseTypes;","var rawObjects;","var parsedData;","var noUserManagement;","","module.exports = {","  parse: parse","};","","function parse(args) {","  initParser(args);","  findElements();","  fillTypes();","  fillEnums();","  fillAssociations();","  fillClassesAndFields();","  fillConstraints();","  return parsedData;","}","","function initParser(args) {","  if (!args.root || !args.databaseTypes) {","    throw new buildException(","      exceptions.NullPointer,","      'The root object and the database types must be passed.');","  }","  root = args.root;","  databaseTypes = args.databaseTypes;","  noUserManagement = args.noUserManagement || false;","  rawObjects = {","    rawTypesIndexes: [],","    rawEnumsIndexes: [],","    rawClassesIndexes: [],","    rawAssociationsIndexes: [],","    rawValidationRulesIndexes: [],","  };","  parsedData = new ParsedData();","}","","","function findElements() {","  findElementsInNode(root, []);","}","","function findElementsInNode(node, path) {","  for (let i = 0; i < node.packagedElement.length; i++) {","    let element = node.packagedElement[i];","    let indexInfo = {index: i, path: path};","    switch (element.$['xmi:type']) {","    case 'uml:PrimitiveType':","      rawObjects.rawTypesIndexes.push(indexInfo);","      break;","    case 'uml:Enumeration':","      rawObjects.rawEnumsIndexes.push(indexInfo);","      break;","    case 'uml:Class':","      rawObjects.rawClassesIndexes.push(indexInfo);","      break;","    case 'uml:Association':","      rawObjects.rawAssociationsIndexes.push(indexInfo);","      break;","    case 'uml:Package':","      findElementsInNode(element, _.concat(path, i));","      break;","    default:","    }","  }","  findConstraints();","}","","function findConstraints() {","  if (!root.ownedRule) {","    return;","  }","  for (let i = 0; i < root.ownedRule.length; i++) {","    let element = root.ownedRule[i];","    if (element.$['xmi:type'] === 'uml:Constraint') {","      rawObjects.rawValidationRulesIndexes.push(i);","    }","  }","}","","function fillTypes() {","  for (let i = 0; i < rawObjects.rawTypesIndexes.length; i++) {","    addType(parser_helper.getXmlElementFromRawIndexes(root, rawObjects.rawTypesIndexes[i]));","  }","}","","function addType(typeElement) {","  if (!typeElement.$) {","    typeElement = {","      $: {","        'xmi:id': typeElement,","        name: typeElement","      }","    };","  }","  if (!databaseTypes.contains(_.upperFirst(typeElement.$.name))) {","    throw new buildException(","        exceptions.WrongType,","        `The type '${typeElement.$.name}' isn't supported by JHipster.`);","  }","  parsedData.addType(typeElement.$['xmi:id'], {name: _.upperFirst(typeElement.$.name)});","}","","function fillEnums() {","  for (let i = 0; i < rawObjects.rawEnumsIndexes.length; i++) {","    addEnum(parser_helper.getXmlElementFromRawIndexes(root, rawObjects.rawEnumsIndexes[i]));","  }","}","","function addEnum(enumElement) {","  if (!enumElement.$.name) {","    throw new buildException(","        exceptions.NullPointer, \"The enumeration's name can't be null.\");","  }","  let values = [];","  if (enumElement.ownedLiteral) {","    values = getEnumValues(enumElement);","  }","  parsedData.addEnum(","    enumElement.$['xmi:id'],","    {name: enumElement.$.name, values: values});","}","","function getEnumValues(enumElement) {","  var values = [];","  for (let i = 0; i < enumElement.ownedLiteral.length; i++) {","    let ownedLiteral = enumElement.ownedLiteral[i];","    if (!ownedLiteral.$.name.toUpperCase()) {","      throw new buildException(","          exceptions.NullPointer,","          \"An enumeration's value can't be null.\");","    }","    values.push(ownedLiteral.$.name.toUpperCase());","  }","  return values;","}","","function fillAssociations() {","  for (let i = 0; i < rawObjects.rawAssociationsIndexes.length; i++) {","    addAssociation(parser_helper.getXmlElementFromRawIndexes(root, rawObjects.rawAssociationsIndexes[i]));","  }","}","","function addAssociation(associationElement) {","  var associationData = {","    from: associationElement.ownedEnd[0].$.type,","    injectedFieldInTo: associationElement.ownedEnd[0].$.name","  };","  if (!associationElement.ownedEnd[0].lowerValue) {","    associationData.isInjectedFieldInFromRequired = true;","  }","  if (associationElement.ownedEnd[0].upperValue","      && associationElement.ownedEnd[0].upperValue[0].$.value === '*') {","    associationData.type = {","      MANY_TO_ONE: null,","      MANY_TO_MANY: null","    }; // to be determined later","  } else {","    associationData.type = cardinalities.ONE_TO_MANY;","  }","  if (associationElement.ownedEnd[0] && associationElement.ownedEnd[0].ownedComment) {","    associationData.commentInTo = associationElement.ownedEnd[0].ownedComment[0].body[0];","  }","  parsedData.addAssociation(associationElement.$['xmi:id'], associationData);","}","","function fillClassesAndFields() {","  for (let i = 0; i < rawObjects.rawClassesIndexes.length; i++) {","    addClassAndFields(parser_helper.getXmlElementFromRawIndexes(root, rawObjects.rawClassesIndexes[i]));","  }","}","","function addClassAndFields(classElement) {","  if (!classElement.$.name) {","    throw new buildException(","        exceptions.NullPointer, 'Classes must have a name.');","  }","  checkForUserClass(classElement);","  addClass(classElement);","","  if (classElement.ownedAttribute) {","    handleAttributes(classElement);","  }","}","","function checkForUserClass(classElement) {","  if (!parsedData.userClassId && classElement.$.name.toLowerCase() === 'user') {","    parsedData.userClassId = classElement.$['xmi:id'];","  }","}","","function handleAttributes(classElement) {","  for (let i = 0; i < classElement.ownedAttribute.length; i++) {","    let attribute = classElement.ownedAttribute[i];","    if (!attribute.$.name) {","      throw new buildException(","          exceptions.NullPointer,","          `No name is defined for the passed attribute, for class '${attribute.$.name}'.`);","    }","    if (!parser_helper.isAnId(attribute.$.name)) {","      addField(attribute, classElement.$['xmi:id']);","    }","  }","}","","function addClass(classElement) {","  var names = parser_helper.extractClassName(classElement.$.name);","  var classData = {","    name: _.upperFirst(names.entityName),","    tableName: names.tableName","  };","  checkForReservedClassName({","    name: classData.name,","    shouldThrow: true","  });","  if (classData.tableName.toLowerCase() !== 'user'","      || (classData.tableName.toLowerCase() === 'user' && !noUserManagement)) {","    checkForReservedTableName({","      name: classData.tableName,","      databaseTypeName: databaseTypes.getName(),","      shouldThrow: true","    });","  }","  if (classElement.ownedComment && classElement.ownedComment[0].body) {","    classData.comment = classElement.ownedComment[0].body[0];","  }","  parsedData.addClass(classElement.$['xmi:id'], classData);","}","","function addField(element, classId) {","  if (element.$.association) {","    completeAssociation(parsedData.getAssociation(element.$.association), element);","  } else {","    addRegularField(element, classId);","  }","}","","function addRegularField(element, classId) {","  checkForReservedFieldName({","    name: element.$.name,","    databaseTypeName: databaseTypes.getName(),","    shouldThrow: true","  });","  var fieldData = {name: _.lowerFirst(element.$.name)};","  if (element.$.type) {","    fieldData.type = element.$.type;","  } else if (!element.type) {","    throw new buildException(","        exceptions.WrongField,","        `The field '${element.$.name}' does not possess any type.`);","  } else {","    var typeName = _.upperFirst(parser_helper.getTypeNameFromURL(element.type[0].$.href));","    addType(typeName, typeName); // id = name","    fieldData.type = typeName;","  }","  if (element.ownedComment && element.ownedComment[0].body) {","    fieldData.comment = element.ownedComment[0].body[0];","  }","  parsedData.addField(classId, element.$['xmi:id'], fieldData);","}","","function completeAssociation(association, element) {","  switch (element.$.aggregation) {","  case 'composite':","    if (association.type.hasOwnProperty('MANY_TO_ONE')) {","      association.type = cardinalities.MANY_TO_ONE;","    } else {","      association.type = cardinalities.ONE_TO_ONE;","    }","    break;","  case 'shared':","    if (element.upperValue && element.upperValue[0].$.value === '*'","        && association.type.hasOwnProperty('MANY_TO_MANY')) {","      association.type = cardinalities.MANY_TO_MANY;","    } else if (!element.upperValue || (element.upperValue[0] && element.upperValue[0].$.value !== '*')","        && association.type.hasOwnProperty('MANY_TO_ONE')) {","      association.type = cardinalities.MANY_TO_ONE;","    }","    break;","  default:","  }","  association.to = element.$.type;","  association.injectedFieldInFrom = element.$.name;","  if (!element.lowerValue) {","    association.isInjectedFieldInToRequired = true;","  }","  if (element.ownedComment && element.ownedComment[0]) {","    association.commentInFrom = element.ownedComment[0].body[0];","  }","}","","function fillConstraints() {","  for (let i = 0; i < rawObjects.rawValidationRulesIndexes.length; i++) {","    addConstraint(root.ownedRule[rawObjects.rawValidationRulesIndexes[i]]);","  }","}","","function addConstraint(constraintElement) {","  if (!constraintElement.$.name) {","    throw new buildException(","        exceptions.WrongValidation, 'The validation has no name.');","  }","  var name = constraintElement.$.name;","  var type = parsedData.getType(parsedData.getField(constraintElement.$.constrainedElement).type);","  var enumType = parsedData.getEnum(parsedData.getField(constraintElement.$.constrainedElement).type);","","  if ((type && !databaseTypes.isValidationSupportedForType(type.name, name))","      || (enumType && !databaseTypes.isValidationSupportedForType('Enum', name))) {","    throw new buildException(","        exceptions.WrongValidation,","        `The validation '${name}' isn't supported for the type '`","        + `${parsedData.getType(parsedData.getField(constraintElement.$.constrainedElement).type)}'.`);","  }","  // not nil, but ''","  var value = constraintElement.specification[0].$.value;","  parsedData.addValidationToField(","      constraintElement.$.constrainedElement,","      constraintElement.$['xmi:id'],","      {name: name, value: value}","  );","}",""],"l":{"3":1,"13":1,"14":1,"15":1,"16":1,"17":1,"19":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"34":1,"35":0,"36":0,"40":0,"41":0,"42":0,"43":0,"50":0,"54":1,"55":0,"58":1,"59":0,"60":0,"61":0,"62":0,"64":0,"65":0,"67":0,"68":0,"70":0,"71":0,"73":0,"74":0,"76":0,"77":0,"81":0,"84":1,"85":0,"86":0,"88":0,"89":0,"90":0,"91":0,"96":1,"97":0,"98":0,"102":1,"103":0,"104":0,"111":0,"112":0,"116":0,"119":1,"120":0,"121":0,"125":1,"126":0,"127":0,"130":0,"131":0,"132":0,"134":0,"139":1,"140":0,"141":0,"142":0,"143":0,"144":0,"148":0,"150":0,"153":1,"154":0,"155":0,"159":1,"160":0,"164":0,"165":0,"167":0,"169":0,"174":0,"176":0,"177":0,"179":0,"182":1,"183":0,"184":0,"188":1,"189":0,"190":0,"193":0,"194":0,"196":0,"197":0,"201":1,"202":0,"203":0,"207":1,"208":0,"209":0,"210":0,"211":0,"215":0,"216":0,"221":1,"222":0,"223":0,"227":0,"231":0,"233":0,"239":0,"240":0,"242":0,"245":1,"246":0,"247":0,"249":0,"253":1,"254":0,"259":0,"260":0,"261":0,"262":0,"263":0,"267":0,"268":0,"269":0,"271":0,"272":0,"274":0,"277":1,"278":0,"280":0,"281":0,"283":0,"285":0,"287":0,"289":0,"290":0,"292":0,"294":0,"297":0,"298":0,"299":0,"300":0,"302":0,"303":0,"307":1,"308":0,"309":0,"313":1,"314":0,"315":0,"318":0,"319":0,"320":0,"322":0,"324":0,"330":0,"331":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/data/parsed_data.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/data/parsed_data.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":13},"end":{"line":14,"column":16}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":10},"end":{"line":30,"column":21}}},"3":{"name":"(anonymous_3)","line":41,"loc":{"start":{"line":41,"column":10},"end":{"line":41,"column":35}}},"4":{"name":"(anonymous_4)","line":52,"loc":{"start":{"line":52,"column":22},"end":{"line":52,"column":52}}},"5":{"name":"(anonymous_5)","line":62,"loc":{"start":{"line":62,"column":15},"end":{"line":62,"column":30}}},"6":{"name":"(anonymous_6)","line":71,"loc":{"start":{"line":71,"column":16},"end":{"line":71,"column":27}}},"7":{"name":"(anonymous_7)","line":80,"loc":{"start":{"line":80,"column":9},"end":{"line":80,"column":20}}},"8":{"name":"(anonymous_8)","line":89,"loc":{"start":{"line":89,"column":9},"end":{"line":89,"column":20}}},"9":{"name":"(anonymous_9)","line":98,"loc":{"start":{"line":98,"column":9},"end":{"line":98,"column":14}}},"10":{"name":"(anonymous_10)","line":107,"loc":{"start":{"line":107,"column":10},"end":{"line":107,"column":15}}},"11":{"name":"(anonymous_11)","line":116,"loc":{"start":{"line":116,"column":10},"end":{"line":116,"column":15}}},"12":{"name":"(anonymous_12)","line":125,"loc":{"start":{"line":125,"column":16},"end":{"line":125,"column":21}}},"13":{"name":"(anonymous_13)","line":134,"loc":{"start":{"line":134,"column":9},"end":{"line":134,"column":14}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":8,"column":50}},"2":{"start":{"line":15,"column":4},"end":{"line":15,"column":22}},"3":{"start":{"line":16,"column":4},"end":{"line":16,"column":25}},"4":{"start":{"line":17,"column":4},"end":{"line":17,"column":21}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":27}},"6":{"start":{"line":19,"column":4},"end":{"line":19,"column":20}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":20}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":26}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":28}},"10":{"start":{"line":31,"column":4},"end":{"line":31,"column":43}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":36}},"12":{"start":{"line":42,"column":4},"end":{"line":42,"column":47}},"13":{"start":{"line":43,"column":4},"end":{"line":43,"column":44}},"14":{"start":{"line":53,"column":4},"end":{"line":53,"column":62}},"15":{"start":{"line":54,"column":4},"end":{"line":54,"column":53}},"16":{"start":{"line":63,"column":4},"end":{"line":63,"column":42}},"17":{"start":{"line":72,"column":4},"end":{"line":72,"column":54}},"18":{"start":{"line":81,"column":4},"end":{"line":81,"column":40}},"19":{"start":{"line":90,"column":4},"end":{"line":90,"column":40}},"20":{"start":{"line":99,"column":4},"end":{"line":99,"column":26}},"21":{"start":{"line":108,"column":4},"end":{"line":108,"column":28}},"22":{"start":{"line":117,"column":4},"end":{"line":117,"column":27}},"23":{"start":{"line":126,"column":4},"end":{"line":126,"column":33}},"24":{"start":{"line":135,"column":4},"end":{"line":135,"column":26}},"25":{"start":{"line":139,"column":0},"end":{"line":139,"column":28}}},"branchMap":{},"code":["'use strict';","","const ClassData = require('./class_data'),","    FieldData = require('./field_data'),","    TypeData = require('./type_data'),","    EnumData = require('./enum_data'),","    AssociationData = require('./association_data'),","    ValidationData = require('./validation_data');","","/**"," * The parsed data class holds the various information taken from the UML file."," */","class ParsedData {","  constructor() {","    this.classes = {};","    this.classNames = [];","    this.fields = {};","    this.associations = {};","    this.types = {};","    this.enums = {};","    this.validations = {};","    this.userClassId = null;","  }","","  /**","   * Adds a new class.","   * @param id its id.","   * @param data the class data.","   */","  addClass(id, data) {","    this.classes[id] = new ClassData(data);","    this.classNames.push(data.name);","  }","","  /**","   * Adds a new field.","   * @param classId the class' id.","   * @param fieldId its id.","   * @param data the field data.","   */","  addField(classId, fieldId, data) {","    this.fields[fieldId] = new FieldData(data);","    this.classes[classId].addField(fieldId);","  }","","  /**","   * Adds a validation to a field.","   * @param fieldId the field's id.","   * @param validationId the validation's id.","   * @param data the validation data.","   */","  addValidationToField(fieldId, validationId, data) {","    this.validations[validationId] = new ValidationData(data);","    this.fields[fieldId].addValidation(validationId);","  }","","  /**","   * Gets a validation.","   * @param validationId he validation's id.","   * @returns {Object} the validation data.","   */","  getValidation(validationId) {","    return this.validations[validationId];","  }","","  /**","   * Adds a new association.","   * @param id its id.","   * @param data the association data.","   */","  addAssociation(id, data) {","    this.associations[id] = new AssociationData(data);","  }","","  /**","   * Adds a new type.","   * @param id its id.","   * @param data the type data.","   */","  addType(id, data) {","    this.types[id] = new TypeData(data);","  }","","  /**","   * Adds a new enum.","   * @param id its id.","   * @param data the enum data.","   */","  addEnum(id, data) {","    this.enums[id] = new EnumData(data);","  }","","  /**","   * Gets a type by its id.","   * @param id the id.","   * @returns {TypeData} the type.","   */","  getType(id) {","    return this.types[id];","  }","","  /**","   * Gets a class by its id.","   * @param id the id.","   * @returns {ClassData} the class.","   */","  getClass(id) {","    return this.classes[id];","  }","","  /**","   * Gets a field by its id.","   * @param id the id.","   * @returns {FieldData} the field.","   */","  getField(id) {","    return this.fields[id];","  }","","  /**","   * Gets an association by its id.","   * @param id the id.","   * @return {AssociationData} the association.","   */","  getAssociation(id) {","    return this.associations[id];","  }","","  /**","   * Gets an enum by its id.","   * @param id the id.","   * @returns {EnumData} the enumeration.","   */","  getEnum(id) {","    return this.enums[id];","  }","}","","module.exports = ParsedData;",""],"l":{"3":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"31":0,"32":0,"42":0,"43":0,"53":0,"54":0,"63":0,"72":0,"81":0,"90":0,"99":0,"108":0,"117":0,"126":0,"135":0,"139":1}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/data/class_data.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/data/class_data.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":1,"20":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":13},"end":{"line":11,"column":22}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":10},"end":{"line":35,"column":18}}},"3":{"name":"defaults","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":20}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":93}},"2":{"start":{"line":12,"column":4},"end":{"line":12,"column":43}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":70}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":76}},"5":{"start":{"line":15,"column":4},"end":{"line":15,"column":28}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":51}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":32}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":34}},"9":{"start":{"line":19,"column":4},"end":{"line":19,"column":26}},"10":{"start":{"line":20,"column":4},"end":{"line":20,"column":40}},"11":{"start":{"line":21,"column":4},"end":{"line":21,"column":34}},"12":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"13":{"start":{"line":23,"column":6},"end":{"line":23,"column":54}},"14":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"15":{"start":{"line":26,"column":6},"end":{"line":26,"column":46}},"16":{"start":{"line":36,"column":4},"end":{"line":36,"column":28}},"17":{"start":{"line":37,"column":4},"end":{"line":37,"column":16}},"18":{"start":{"line":41,"column":0},"end":{"line":41,"column":27}},"19":{"start":{"line":43,"column":0},"end":{"line":53,"column":1}},"20":{"start":{"line":44,"column":2},"end":{"line":52,"column":4}}},"branchMap":{"1":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":21},"end":{"line":16,"column":37}},{"start":{"line":16,"column":41},"end":{"line":16,"column":50}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]}},"code":["'use strict';","","const merge = require('../utils/object_utils').merge,","    checkForReservedClassName = require('../utils/jhipster_utils').checkForReservedClassName,","    checkForReservedTableName = require('../utils/jhipster_utils').checkForReservedTableName;","","/**"," * The class holding class data."," */","class ClassData {","  constructor(values) {","    var merged = merge(defaults(), values);","    checkForReservedClassName({name: merged.name, shouldThrow: true});","    checkForReservedTableName({name: merged.tableName, shouldThrow: false});","    this.name = merged.name;","    this.tableName = merged.tableName || this.name;","    this.fields = merged.fields;","    this.comment = merged.comment;","    this.dto = merged.dto;","    this.pagination = merged.pagination;","    this.service = merged.service;","    if (merged.microserviceName) {","      this.microserviceName = merged.microserviceName;","    }","    if (merged.searchEngine) {","      this.searchEngine = merged.searchEngine;","    }","  }","","  /**","   * Adds a field to the class.","   * @param {Object} field the field to add.","   * @return {ClassData} this modified class.","   */","  addField(field) {","    this.fields.push(field);","    return this;","  }","}","","module.exports = ClassData;","","function defaults() {","  return {","    name: '',","    tableName: '',","    fields: [],","    comment: '',","    dto: 'no',","    pagination: 'no',","    service: 'no'","  };","}",""],"l":{"3":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"25":0,"26":0,"36":0,"37":0,"41":1,"43":1,"44":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/utils/object_utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/utils/object_utils.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":4,"16":0,"17":4,"18":4,"19":7,"20":4},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,4]},"f":{"1":0,"2":4},"fnMap":{"1":{"name":"merge","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":33}}},"2":{"name":"values","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":71}},"2":{"start":{"line":6,"column":0},"end":{"line":9,"column":2}},"3":{"start":{"line":19,"column":0},"end":{"line":34,"column":1}},"4":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"5":{"start":{"line":21,"column":4},"end":{"line":21,"column":19}},"6":{"start":{"line":23,"column":2},"end":{"line":25,"column":3}},"7":{"start":{"line":24,"column":4},"end":{"line":24,"column":19}},"8":{"start":{"line":26,"column":2},"end":{"line":26,"column":18}},"9":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"10":{"start":{"line":28,"column":4},"end":{"line":28,"column":31}},"11":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"12":{"start":{"line":31,"column":4},"end":{"line":31,"column":31}},"13":{"start":{"line":33,"column":2},"end":{"line":33,"column":16}},"14":{"start":{"line":36,"column":0},"end":{"line":45,"column":1}},"15":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"16":{"start":{"line":38,"column":4},"end":{"line":38,"column":91}},"17":{"start":{"line":40,"column":2},"end":{"line":40,"column":18}},"18":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"19":{"start":{"line":42,"column":4},"end":{"line":42,"column":33}},"20":{"start":{"line":44,"column":2},"end":{"line":44,"column":16}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":14}},{"start":{"line":20,"column":18},"end":{"line":20,"column":51}}]},"3":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"4":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":6},"end":{"line":23,"column":14}},{"start":{"line":23,"column":18},"end":{"line":23,"column":51}}]},"5":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]}},"code":["'use strict';","","const buildException = require('../exceptions/exception_factory').buildException,","    exceptions = require('../exceptions/exception_factory').exceptions;","","module.exports = {","  merge: merge,","  values: values","};","","/**"," * Merge two objects."," * The order is important here: o1.merge(o2) means that the keys values of o2"," * will replace those identical to o1."," * The keys that don't belong to the other object will be added."," * @param object2 the object to be merged with."," * @returns {Object} the object result of the merge"," */","function merge(object1, object2) {","  if (!object1 || Object.keys(object1).length === 0) {","    return object2;","  }","  if (!object2 || Object.keys(object2).length === 0) {","    return object1;","  }","  var merged = {};","  for (let key in object1) {","    merged[key] = object1[key];","  }","  for (let key in object2) {","    merged[key] = object2[key];","  }","  return merged;","}","","function values(object) {","  if (object == null) {","    throw new buildException(exceptions.NullPointer, 'The passed object must not be nil.');","  }","  var values = [];","  for (let i = 0, keys = Object.keys(object); i < keys.length; i++) {","    values.push(object[keys[i]]);","  }","  return values;","}",""],"l":{"3":1,"6":1,"19":1,"20":0,"21":0,"23":0,"24":0,"26":0,"27":0,"28":0,"30":0,"31":0,"33":0,"36":1,"37":4,"38":0,"40":4,"41":4,"42":7,"44":4}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/exceptions/exception_factory.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/exceptions/exception_factory.js","s":{"1":1,"2":1,"3":17,"4":1,"5":1,"6":3,"7":3,"8":3},"b":{"1":[3,0],"2":[3,0]},"f":{"1":3},"fnMap":{"1":{"name":"buildException","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":39}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":26,"column":2}},"2":{"start":{"line":28,"column":0},"end":{"line":30,"column":1}},"3":{"start":{"line":29,"column":2},"end":{"line":29,"column":24}},"4":{"start":{"line":32,"column":0},"end":{"line":35,"column":2}},"5":{"start":{"line":37,"column":0},"end":{"line":44,"column":1}},"6":{"start":{"line":38,"column":2},"end":{"line":41,"column":4}},"7":{"start":{"line":42,"column":2},"end":{"line":42,"column":36}},"8":{"start":{"line":43,"column":2},"end":{"line":43,"column":19}}},"branchMap":{"1":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":17},"end":{"line":39,"column":35}},{"start":{"line":39,"column":38},"end":{"line":39,"column":49}}]},"2":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":14},"end":{"line":40,"column":21}},{"start":{"line":40,"column":25},"end":{"line":40,"column":27}}]}},"code":["'use strict';","","/**"," * This constant is where all the error cases go."," * No need to assign anything to the keys, the following loop will take care of"," * that."," */","const EXCEPTIONS = {","  IllegalArgument: null,","  IllegalName: null,","  IllegalState: null,","  MalformedAssociation: null,","  NoRoot: null,","  NoSQLModeling: null,","  NullPointer: null,","  UndeclaredEntity: null,","  UndetectedEditor: null,","  UnimplementedOperation: null,","  WrongAssociation: null,","  WrongCall: null,","  WrongDatabaseType: null,","  WrongField: null,","  WrongFile: null,","  WrongType: null,","  WrongValidation: null","};","","for (let key in EXCEPTIONS) {","  EXCEPTIONS[key] = key;","}","","module.exports = {","  exceptions: EXCEPTIONS,","  buildException: buildException","};","","function buildException(name, message) {","  var exception = {","    name: name ? `${name}Exception` : 'Exception',","    message: (message || '')","  };","  exception.prototype = new Error();","  return exception;","}",""],"l":{"8":1,"28":1,"29":17,"32":1,"37":1,"38":3,"42":3,"43":3}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/utils/jhipster_utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/utils/jhipster_utils.js","s":{"1":1,"2":1,"3":1,"4":6,"5":6,"6":0,"7":6,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":6,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"isYoRcFilePresent","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":29}}},"2":{"name":"readJSONFiles","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":36}}},"3":{"name":"checkForReservedClassName","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":41}}},"4":{"name":"checkForReservedTableName","line":70,"loc":{"start":{"line":70,"column":0},"end":{"line":70,"column":41}}},"5":{"name":"checkTableName","line":83,"loc":{"start":{"line":83,"column":0},"end":{"line":83,"column":61}}},"6":{"name":"checkForReservedFieldName","line":101,"loc":{"start":{"line":101,"column":0},"end":{"line":101,"column":41}}},"7":{"name":"checkFieldName","line":114,"loc":{"start":{"line":114,"column":0},"end":{"line":114,"column":61}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":10,"column":71}},"2":{"start":{"line":12,"column":0},"end":{"line":18,"column":2}},"3":{"start":{"line":20,"column":0},"end":{"line":27,"column":1}},"4":{"start":{"line":21,"column":2},"end":{"line":26,"column":3}},"5":{"start":{"line":22,"column":4},"end":{"line":22,"column":42}},"6":{"start":{"line":23,"column":4},"end":{"line":23,"column":16}},"7":{"start":{"line":25,"column":4},"end":{"line":25,"column":17}},"8":{"start":{"line":29,"column":0},"end":{"line":43,"column":1}},"9":{"start":{"line":30,"column":2},"end":{"line":34,"column":3}},"10":{"start":{"line":31,"column":4},"end":{"line":33,"column":61}},"11":{"start":{"line":35,"column":2},"end":{"line":35,"column":21}},"12":{"start":{"line":36,"column":2},"end":{"line":41,"column":3}},"13":{"start":{"line":37,"column":4},"end":{"line":37,"column":50}},"14":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"15":{"start":{"line":39,"column":6},"end":{"line":39,"column":76}},"16":{"start":{"line":42,"column":2},"end":{"line":42,"column":19}},"17":{"start":{"line":49,"column":0},"end":{"line":64,"column":1}},"18":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"19":{"start":{"line":51,"column":4},"end":{"line":51,"column":11}},"20":{"start":{"line":53,"column":2},"end":{"line":63,"column":3}},"21":{"start":{"line":54,"column":4},"end":{"line":62,"column":5}},"22":{"start":{"line":55,"column":6},"end":{"line":57,"column":63}},"23":{"start":{"line":59,"column":6},"end":{"line":61,"column":69}},"24":{"start":{"line":70,"column":0},"end":{"line":81,"column":1}},"25":{"start":{"line":71,"column":2},"end":{"line":73,"column":3}},"26":{"start":{"line":72,"column":4},"end":{"line":72,"column":11}},"27":{"start":{"line":74,"column":2},"end":{"line":80,"column":3}},"28":{"start":{"line":75,"column":4},"end":{"line":75,"column":71}},"29":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"30":{"start":{"line":78,"column":6},"end":{"line":78,"column":75}},"31":{"start":{"line":83,"column":0},"end":{"line":95,"column":1}},"32":{"start":{"line":84,"column":2},"end":{"line":94,"column":3}},"33":{"start":{"line":85,"column":4},"end":{"line":93,"column":5}},"34":{"start":{"line":86,"column":6},"end":{"line":88,"column":82}},"35":{"start":{"line":90,"column":6},"end":{"line":92,"column":87}},"36":{"start":{"line":101,"column":0},"end":{"line":112,"column":1}},"37":{"start":{"line":102,"column":2},"end":{"line":104,"column":3}},"38":{"start":{"line":103,"column":4},"end":{"line":103,"column":11}},"39":{"start":{"line":105,"column":2},"end":{"line":111,"column":3}},"40":{"start":{"line":106,"column":4},"end":{"line":106,"column":71}},"41":{"start":{"line":108,"column":4},"end":{"line":110,"column":5}},"42":{"start":{"line":109,"column":6},"end":{"line":109,"column":75}},"43":{"start":{"line":114,"column":0},"end":{"line":126,"column":1}},"44":{"start":{"line":115,"column":2},"end":{"line":125,"column":3}},"45":{"start":{"line":116,"column":4},"end":{"line":124,"column":5}},"46":{"start":{"line":117,"column":6},"end":{"line":119,"column":82}},"47":{"start":{"line":121,"column":6},"end":{"line":123,"column":87}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"3":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"5":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"6":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]},"7":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"8":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]},"9":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":4}},{"start":{"line":85,"column":4},"end":{"line":85,"column":4}}]},"10":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":2},"end":{"line":102,"column":2}},{"start":{"line":102,"column":2},"end":{"line":102,"column":2}}]},"11":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":2}},{"start":{"line":105,"column":2},"end":{"line":105,"column":2}}]},"12":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":115,"column":2}},{"start":{"line":115,"column":2},"end":{"line":115,"column":2}}]},"13":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":116,"column":4}},{"start":{"line":116,"column":4},"end":{"line":116,"column":4}}]}},"code":["'use strict';","","const fs = require('fs'),","    chalk = require('chalk'),","    isReservedClassName = require('jhipster-core').isReservedClassName,","    isReservedTableName = require('jhipster-core').isReservedTableName,","    isReservedFieldName = require('jhipster-core').isReservedFieldName,","    DatabaseTypes = require('jhipster-core').JHipsterDatabaseTypes.Types,","    buildException = require('../exceptions/exception_factory').buildException,","    exceptions = require('../exceptions/exception_factory').exceptions;","","module.exports = {","  isYoRcFilePresent: isYoRcFilePresent,","  readJSONFiles: readJSONFiles,","  checkForReservedClassName: checkForReservedClassName,","  checkForReservedTableName: checkForReservedTableName,","  checkForReservedFieldName: checkForReservedFieldName","};","","function isYoRcFilePresent() {","  try {","    fs.statSync('./.yo-rc.json').isFile();","    return true;","  } catch (error) {","    return false;","  }","}","","function readJSONFiles(entityNames) {","  if (!entityNames) {","    throw new buildException(","        exceptions.IllegalArgument,","        'The entity to read from the files must be passed.');","  }","  var readFiles = {};","  for (let i = 0; i < entityNames.length; i++) {","    let file = `.jhipster/${entityNames[i]}.json`;","    if (fs.existsSync(file)) {","      readFiles[entityNames[i]] = JSON.parse(fs.readFileSync(file, 'utf8'));","    }","  }","  return readFiles;","}","","/**"," * Checks for reserved class name."," * @param args an object having as keys: name and shouldThrow"," */","function checkForReservedClassName(args) {","  if (!args) {","    return;","  }","  if (isReservedClassName(args.name)) {","    if (args.shouldThrow) {","      throw new buildException(","          exceptions.IllegalName,","          `The passed class name '${args.name}' is reserved.`);","    } else {","      console.warn(","          chalk.yellow(","              `The passed class name '${args.name}' is reserved .`));","    }","  }","}","","/**"," * Checks for reserved table name."," * @param args an object having as keys: name, databaseTypeName and shouldThrow"," */","function checkForReservedTableName(args) {","  if (!args) {","    return;","  }","  if (args.databaseTypeName) {","    checkTableName(args.name, args.databaseTypeName, args.shouldThrow);","  } else {","    for (let i = 0, types = Object.keys(DatabaseTypes); i < types.length; i++) {","      checkTableName(args.name, DatabaseTypes[types[i]], args.shouldThrow);","    }","  }","}","","function checkTableName(name, databaseTypeName, shouldThrow) {","  if (isReservedTableName(name, databaseTypeName)) {","    if (shouldThrow) {","      throw new buildException(","          exceptions.IllegalName,","          `The passed table name '${name}' is reserved for ${databaseTypeName}.`);","    } else {","      console.warn(","          chalk.yellow(","              `The passed table name '${name}' is reserved for ${databaseTypeName}.`));","    }","  }","}","","/**"," * Checks for reserved field name."," * @param args an object having as keys: name, databaseTypeName and shouldThrow"," */","function checkForReservedFieldName(args) {","  if (!args) {","    return;","  }","  if (args.databaseTypeName) {","    checkFieldName(args.name, args.databaseTypeName, args.shouldThrow);","  } else {","    for (let i = 0, types = Object.keys(DatabaseTypes); i < types.length; i++) {","      checkFieldName(args.name, DatabaseTypes[types[i]], args.shouldThrow);","    }","  }","}","","function checkFieldName(name, databaseTypeName, shouldThrow) {","  if (isReservedFieldName(name, databaseTypeName)) {","    if (shouldThrow) {","      throw new buildException(","          exceptions.IllegalName,","          `The passed field name '${name}' is reserved for ${databaseTypeName}.`);","    } else {","      console.warn(","          chalk.yellow(","              `The passed field name '${name}' is reserved for ${databaseTypeName}.`));","    }","  }","}",""],"l":{"3":1,"12":1,"20":1,"21":6,"22":6,"23":0,"25":6,"29":1,"30":0,"31":0,"35":0,"36":0,"37":0,"38":0,"39":0,"42":0,"49":1,"50":0,"51":0,"53":0,"54":0,"55":0,"59":0,"70":1,"71":0,"72":0,"74":0,"75":0,"77":0,"78":0,"83":1,"84":0,"85":0,"86":0,"90":0,"101":1,"102":0,"103":0,"105":0,"106":0,"108":0,"109":0,"114":1,"115":0,"116":0,"117":0,"121":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/data/field_data.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/data/field_data.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":13},"end":{"line":10,"column":22}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":15},"end":{"line":24,"column":28}}},"3":{"name":"defaults","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":20}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":93}},"2":{"start":{"line":11,"column":4},"end":{"line":11,"column":43}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":71}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":28}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":28}},"6":{"start":{"line":15,"column":4},"end":{"line":15,"column":34}},"7":{"start":{"line":16,"column":4},"end":{"line":16,"column":42}},"8":{"start":{"line":25,"column":4},"end":{"line":25,"column":38}},"9":{"start":{"line":26,"column":4},"end":{"line":26,"column":16}},"10":{"start":{"line":30,"column":0},"end":{"line":30,"column":27}},"11":{"start":{"line":32,"column":0},"end":{"line":39,"column":1}},"12":{"start":{"line":33,"column":2},"end":{"line":38,"column":4}}},"branchMap":{},"code":["'use strict';","","const merge = require('../utils/object_utils').merge,","    checkForReservedFieldName = require('../utils/jhipster_utils').checkForReservedFieldName;","","/**"," * The class holding field data."," */","class FieldData {","  constructor(values) {","    var merged = merge(defaults(), values);","    checkForReservedFieldName({name: merged.name, shouldThrow: false});","    this.name = merged.name;","    this.type = merged.type;","    this.comment = merged.comment;","    this.validations = merged.validations;","  }","","  /**","   * Adds a validation to the field.","   * @param {Object} validation the validation to add.","   * @return {FieldData} this modified class.","   */","  addValidation(validation) {","    this.validations.push(validation);","    return this;","  }","}","","module.exports = FieldData;","","function defaults() {","  return {","    name: '',","    type: '',","    comment: '',","    validations: []","  };","}",""],"l":{"3":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"25":0,"26":0,"30":1,"32":1,"33":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/data/type_data.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/data/type_data.js","s":{"1":1,"2":0,"3":0,"4":1,"5":1,"6":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":13},"end":{"line":9,"column":22}}},"2":{"name":"defaults","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":20}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":53}},"2":{"start":{"line":10,"column":4},"end":{"line":10,"column":43}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":28}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":26}},"5":{"start":{"line":17,"column":0},"end":{"line":21,"column":1}},"6":{"start":{"line":18,"column":2},"end":{"line":20,"column":4}}},"branchMap":{},"code":["'use strict';","","const merge = require('../utils/object_utils').merge;","","/**"," * The class holding type data."," */","class TypeData {","  constructor(values) {","    var merged = merge(defaults(), values);","    this.name = merged.name;","  }","}","","module.exports = TypeData;","","function defaults() {","  return {","    name: ''","  };","}",""],"l":{"3":1,"10":0,"11":0,"15":1,"17":1,"18":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/data/enum_data.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/data/enum_data.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":1,"7":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":13},"end":{"line":9,"column":22}}},"2":{"name":"defaults","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":20}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":53}},"2":{"start":{"line":10,"column":4},"end":{"line":10,"column":43}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":28}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":32}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":26}},"6":{"start":{"line":18,"column":0},"end":{"line":23,"column":1}},"7":{"start":{"line":19,"column":2},"end":{"line":22,"column":4}}},"branchMap":{},"code":["'use strict';","","const merge = require('../utils/object_utils').merge;","","/**"," * The class holding enumeration data."," */","class EnumData {","  constructor(values) {","    var merged = merge(defaults(), values);","    this.name = merged.name;","    this.values = merged.values;","  }","}","","module.exports = EnumData;","","function defaults() {","  return {","    name: '',","    values: []","  };","}"],"l":{"3":1,"10":0,"11":0,"12":0,"16":1,"18":1,"19":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/data/association_data.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/data/association_data.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":13},"end":{"line":9,"column":22}}},"2":{"name":"defaults","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":20}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":53}},"2":{"start":{"line":10,"column":4},"end":{"line":10,"column":43}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":28}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":24}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":28}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":58}},"7":{"start":{"line":15,"column":4},"end":{"line":15,"column":54}},"8":{"start":{"line":16,"column":4},"end":{"line":16,"column":78}},"9":{"start":{"line":17,"column":4},"end":{"line":17,"column":74}},"10":{"start":{"line":18,"column":4},"end":{"line":18,"column":46}},"11":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"12":{"start":{"line":23,"column":0},"end":{"line":23,"column":33}},"13":{"start":{"line":25,"column":0},"end":{"line":37,"column":1}},"14":{"start":{"line":26,"column":2},"end":{"line":36,"column":4}}},"branchMap":{},"code":["'use strict';","","const merge = require('../utils/object_utils').merge;","","/**"," * The class holding association data."," */","class AssociationData {","  constructor(values) {","    var merged = merge(defaults(), values);","    this.from = merged.from;","    this.to = merged.to;","    this.type = merged.type;","    this.injectedFieldInFrom = merged.injectedFieldInFrom;","    this.injectedFieldInTo = merged.injectedFieldInTo;","    this.isInjectedFieldInFromRequired = merged.isInjectedFieldInFromRequired;","    this.isInjectedFieldInToRequired = merged.isInjectedFieldInToRequired;","    this.commentInFrom = merged.commentInFrom;","    this.commentInTo = merged.commentInTo;","  }","}","","module.exports = AssociationData;","","function defaults() {","  return {","    from: null,","    to: null,","    type: '',","    injectedFieldInFrom: null,","    injectedFieldInTo: null,","    isInjectedFieldInFromRequired: false,","    isInjectedFieldInToRequired: false,","    commentInFrom: '',","    commentInTo: ''","  };","}",""],"l":{"3":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"23":1,"25":1,"26":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/data/validation_data.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/data/validation_data.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":1,"7":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":13},"end":{"line":9,"column":22}}},"2":{"name":"defaults","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":20}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":53}},"2":{"start":{"line":10,"column":4},"end":{"line":10,"column":43}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":28}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":30}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":32}},"6":{"start":{"line":18,"column":0},"end":{"line":23,"column":1}},"7":{"start":{"line":19,"column":2},"end":{"line":22,"column":4}}},"branchMap":{},"code":["'use strict';","","const merge = require('../utils/object_utils').merge;","","/**"," * The class holding validation data."," */","class ValidationData {","  constructor(values) {","    var merged = merge(defaults(), values);","    this.name = merged.name;","    this.value = merged.value;","  }","}","","module.exports = ValidationData;","","function defaults() {","  return {","    name: '',","    value: null","  };","}",""],"l":{"3":1,"10":0,"11":0,"12":0,"16":1,"18":1,"19":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/editors/parser_helper.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/editors/parser_helper.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"isAnId","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":22}}},"2":{"name":"getTypeNameFromURL","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":33}}},"3":{"name":"extractClassName","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":32}}},"4":{"name":"getXmlElementFromRawIndexes","line":58,"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":54}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":5,"column":0},"end":{"line":10,"column":2}},"3":{"start":{"line":19,"column":0},"end":{"line":21,"column":1}},"4":{"start":{"line":20,"column":2},"end":{"line":20,"column":41}},"5":{"start":{"line":28,"column":0},"end":{"line":30,"column":1}},"6":{"start":{"line":29,"column":2},"end":{"line":29,"column":36}},"7":{"start":{"line":39,"column":0},"end":{"line":50,"column":1}},"8":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"9":{"start":{"line":41,"column":4},"end":{"line":41,"column":76}},"10":{"start":{"line":43,"column":2},"end":{"line":43,"column":30}},"11":{"start":{"line":44,"column":2},"end":{"line":49,"column":4}},"12":{"start":{"line":58,"column":0},"end":{"line":64,"column":1}},"13":{"start":{"line":59,"column":2},"end":{"line":59,"column":27}},"14":{"start":{"line":60,"column":2},"end":{"line":62,"column":3}},"15":{"start":{"line":61,"column":4},"end":{"line":61,"column":69}},"16":{"start":{"line":63,"column":2},"end":{"line":63,"column":56}}},"branchMap":{"1":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]}},"code":["'use strict';","","const _ = require('lodash');","","module.exports = {","  isAnId: isAnId,","  getTypeNameFromURL: getTypeNameFromURL,","  extractClassName: extractClassName,","  getXmlElementFromRawIndexes : getXmlElementFromRawIndexes","};","","","","/**"," * Checks whether the passed name is an id."," * @param {string} name the field's name."," * @return {boolean} whether the field is an id."," */","function isAnId(name) {","  return /^id$/.test(name.toLowerCase());","}","","/**"," * Extracts a type's name from a URI (URL or path)."," * @param {string} uri the string containing the type."," * @return {string} the type's name."," */","function getTypeNameFromURL(uri) {","  return /\\W([A-z]*)$/.exec(uri)[1];","}","","/**"," * Extracts the entity name and the table name from the name parsed from"," * the XMI file."," *"," * @param name the name from the XMI file."," * @return {Object} the object containing the entity name and the table name."," */","function extractClassName(name) {","  if (name.indexOf('(') === -1) {","    return { entityName: name, tableName: _.snakeCase(name).toLowerCase() };","  }","  var split = name.split('(');","  return {","    entityName: split[0].trim(),","    tableName: _.snakeCase(","      split[1].slice(0, split[1].length - 1).trim()","    ).toLowerCase()","  };","}","","/**"," * Extract indexInfo in rawIndexes array and use it to get the referenced element"," * @param root the root document"," * @param indexInfo the index info element"," * @returns {Object} the xml element"," */","function getXmlElementFromRawIndexes(root, indexInfo) {","  var parentPackage = root;","  for (let j = 0; j < indexInfo.path.length; j++) {","    parentPackage = parentPackage.packagedElement[indexInfo.path[j]];","  }","  return parentPackage.packagedElement[indexInfo.index];","}",""],"l":{"3":1,"5":1,"19":1,"20":0,"28":1,"29":0,"39":1,"40":0,"41":0,"43":0,"44":0,"58":1,"59":0,"60":0,"61":0,"63":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/cardinalities.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/cardinalities.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":83}},"2":{"start":{"line":6,"column":0},"end":{"line":11,"column":2}}},"branchMap":{},"code":["'use strict';","","const _ = require('lodash'),","    JHipsterRelationshipTypes = require('jhipster-core').JHipsterRelationshipTypes;","","module.exports = {","  ONE_TO_ONE: _.kebabCase(JHipsterRelationshipTypes.RELATIONSHIP_TYPES.ONE_TO_ONE),","  ONE_TO_MANY: _.kebabCase(JHipsterRelationshipTypes.RELATIONSHIP_TYPES.ONE_TO_MANY),","  MANY_TO_ONE: _.kebabCase(JHipsterRelationshipTypes.RELATIONSHIP_TYPES.MANY_TO_ONE),","  MANY_TO_MANY: _.kebabCase(JHipsterRelationshipTypes.RELATIONSHIP_TYPES.MANY_TO_MANY)","};",""],"l":{"3":1,"6":1}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/editors/genmymodel_parser.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/editors/genmymodel_parser.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":1,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":0,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":1,"135":0,"136":1,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0,0],"30":[0,0],"31":[0,0,0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"parse","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":21}}},"2":{"name":"initParser","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":26}}},"3":{"name":"findElements","line":53,"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":24}}},"4":{"name":"findElementsInNode","line":57,"loc":{"start":{"line":57,"column":0},"end":{"line":57,"column":40}}},"5":{"name":"fillTypes","line":83,"loc":{"start":{"line":83,"column":0},"end":{"line":83,"column":21}}},"6":{"name":"addType","line":89,"loc":{"start":{"line":89,"column":0},"end":{"line":89,"column":30}}},"7":{"name":"fillEnums","line":106,"loc":{"start":{"line":106,"column":0},"end":{"line":106,"column":21}}},"8":{"name":"addEnum","line":112,"loc":{"start":{"line":112,"column":0},"end":{"line":112,"column":30}}},"9":{"name":"getEnumValues","line":126,"loc":{"start":{"line":126,"column":0},"end":{"line":126,"column":36}}},"10":{"name":"fillAssociations","line":140,"loc":{"start":{"line":140,"column":0},"end":{"line":140,"column":28}}},"11":{"name":"addAssociation","line":146,"loc":{"start":{"line":146,"column":0},"end":{"line":146,"column":44}}},"12":{"name":"getAssociationEnds","line":155,"loc":{"start":{"line":155,"column":0},"end":{"line":155,"column":41}}},"13":{"name":"getAssociationType","line":173,"loc":{"start":{"line":173,"column":0},"end":{"line":173,"column":41}}},"14":{"name":"getAssociationComments","line":187,"loc":{"start":{"line":187,"column":0},"end":{"line":187,"column":45}}},"15":{"name":"getComment","line":199,"loc":{"start":{"line":199,"column":0},"end":{"line":199,"column":30}}},"16":{"name":"fillClassesAndFields","line":211,"loc":{"start":{"line":211,"column":0},"end":{"line":211,"column":32}}},"17":{"name":"addClassAndFields","line":217,"loc":{"start":{"line":217,"column":0},"end":{"line":217,"column":41}}},"18":{"name":"checkForUserClass","line":229,"loc":{"start":{"line":229,"column":0},"end":{"line":229,"column":36}}},"19":{"name":"addClass","line":235,"loc":{"start":{"line":235,"column":0},"end":{"line":235,"column":27}}},"20":{"name":"handleAttributes","line":262,"loc":{"start":{"line":262,"column":0},"end":{"line":262,"column":35}}},"21":{"name":"addField","line":276,"loc":{"start":{"line":276,"column":0},"end":{"line":276,"column":36}}},"22":{"name":"addRegularField","line":280,"loc":{"start":{"line":280,"column":0},"end":{"line":280,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":11,"column":71}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":9}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":18}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":15}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":15}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":21}},"7":{"start":{"line":19,"column":0},"end":{"line":21,"column":2}},"8":{"start":{"line":23,"column":0},"end":{"line":31,"column":1}},"9":{"start":{"line":24,"column":2},"end":{"line":24,"column":19}},"10":{"start":{"line":25,"column":2},"end":{"line":25,"column":17}},"11":{"start":{"line":26,"column":2},"end":{"line":26,"column":14}},"12":{"start":{"line":27,"column":2},"end":{"line":27,"column":14}},"13":{"start":{"line":28,"column":2},"end":{"line":28,"column":21}},"14":{"start":{"line":29,"column":2},"end":{"line":29,"column":25}},"15":{"start":{"line":30,"column":2},"end":{"line":30,"column":20}},"16":{"start":{"line":33,"column":0},"end":{"line":50,"column":1}},"17":{"start":{"line":34,"column":2},"end":{"line":38,"column":3}},"18":{"start":{"line":35,"column":4},"end":{"line":37,"column":64}},"19":{"start":{"line":39,"column":2},"end":{"line":39,"column":19}},"20":{"start":{"line":40,"column":2},"end":{"line":40,"column":37}},"21":{"start":{"line":41,"column":2},"end":{"line":41,"column":52}},"22":{"start":{"line":42,"column":2},"end":{"line":48,"column":4}},"23":{"start":{"line":49,"column":2},"end":{"line":49,"column":32}},"24":{"start":{"line":53,"column":0},"end":{"line":55,"column":1}},"25":{"start":{"line":54,"column":2},"end":{"line":54,"column":31}},"26":{"start":{"line":57,"column":0},"end":{"line":81,"column":1}},"27":{"start":{"line":58,"column":2},"end":{"line":80,"column":3}},"28":{"start":{"line":59,"column":4},"end":{"line":59,"column":42}},"29":{"start":{"line":60,"column":4},"end":{"line":60,"column":43}},"30":{"start":{"line":61,"column":4},"end":{"line":79,"column":5}},"31":{"start":{"line":64,"column":6},"end":{"line":64,"column":49}},"32":{"start":{"line":65,"column":6},"end":{"line":65,"column":12}},"33":{"start":{"line":67,"column":6},"end":{"line":67,"column":49}},"34":{"start":{"line":68,"column":6},"end":{"line":68,"column":12}},"35":{"start":{"line":70,"column":6},"end":{"line":70,"column":51}},"36":{"start":{"line":71,"column":6},"end":{"line":71,"column":12}},"37":{"start":{"line":73,"column":6},"end":{"line":73,"column":56}},"38":{"start":{"line":74,"column":6},"end":{"line":74,"column":12}},"39":{"start":{"line":76,"column":6},"end":{"line":76,"column":52}},"40":{"start":{"line":77,"column":6},"end":{"line":77,"column":12}},"41":{"start":{"line":83,"column":0},"end":{"line":87,"column":1}},"42":{"start":{"line":84,"column":2},"end":{"line":86,"column":3}},"43":{"start":{"line":85,"column":4},"end":{"line":85,"column":92}},"44":{"start":{"line":89,"column":0},"end":{"line":104,"column":1}},"45":{"start":{"line":90,"column":2},"end":{"line":97,"column":3}},"46":{"start":{"line":91,"column":4},"end":{"line":96,"column":6}},"47":{"start":{"line":98,"column":2},"end":{"line":102,"column":3}},"48":{"start":{"line":99,"column":4},"end":{"line":101,"column":73}},"49":{"start":{"line":103,"column":2},"end":{"line":103,"column":88}},"50":{"start":{"line":106,"column":0},"end":{"line":110,"column":1}},"51":{"start":{"line":107,"column":2},"end":{"line":109,"column":3}},"52":{"start":{"line":108,"column":4},"end":{"line":108,"column":92}},"53":{"start":{"line":112,"column":0},"end":{"line":124,"column":1}},"54":{"start":{"line":113,"column":2},"end":{"line":116,"column":3}},"55":{"start":{"line":114,"column":4},"end":{"line":115,"column":73}},"56":{"start":{"line":117,"column":2},"end":{"line":117,"column":18}},"57":{"start":{"line":118,"column":2},"end":{"line":120,"column":3}},"58":{"start":{"line":119,"column":4},"end":{"line":119,"column":40}},"59":{"start":{"line":121,"column":2},"end":{"line":123,"column":48}},"60":{"start":{"line":126,"column":0},"end":{"line":138,"column":1}},"61":{"start":{"line":127,"column":2},"end":{"line":127,"column":18}},"62":{"start":{"line":128,"column":2},"end":{"line":136,"column":3}},"63":{"start":{"line":129,"column":4},"end":{"line":129,"column":51}},"64":{"start":{"line":130,"column":4},"end":{"line":134,"column":5}},"65":{"start":{"line":131,"column":6},"end":{"line":133,"column":51}},"66":{"start":{"line":135,"column":4},"end":{"line":135,"column":51}},"67":{"start":{"line":137,"column":2},"end":{"line":137,"column":16}},"68":{"start":{"line":140,"column":0},"end":{"line":144,"column":1}},"69":{"start":{"line":141,"column":2},"end":{"line":143,"column":3}},"70":{"start":{"line":142,"column":4},"end":{"line":142,"column":106}},"71":{"start":{"line":146,"column":0},"end":{"line":153,"column":1}},"72":{"start":{"line":147,"column":2},"end":{"line":147,"column":63}},"73":{"start":{"line":148,"column":2},"end":{"line":148,"column":64}},"74":{"start":{"line":149,"column":2},"end":{"line":149,"column":60}},"75":{"start":{"line":150,"column":2},"end":{"line":150,"column":57}},"76":{"start":{"line":151,"column":2},"end":{"line":151,"column":53}},"77":{"start":{"line":152,"column":2},"end":{"line":152,"column":77}},"78":{"start":{"line":155,"column":0},"end":{"line":171,"column":1}},"79":{"start":{"line":156,"column":2},"end":{"line":161,"column":4}},"80":{"start":{"line":162,"column":2},"end":{"line":165,"column":3}},"81":{"start":{"line":164,"column":4},"end":{"line":164,"column":46}},"82":{"start":{"line":166,"column":2},"end":{"line":169,"column":3}},"83":{"start":{"line":168,"column":4},"end":{"line":168,"column":44}},"84":{"start":{"line":170,"column":2},"end":{"line":170,"column":14}},"85":{"start":{"line":173,"column":0},"end":{"line":185,"column":1}},"86":{"start":{"line":174,"column":2},"end":{"line":183,"column":3}},"87":{"start":{"line":176,"column":4},"end":{"line":176,"column":38}},"88":{"start":{"line":177,"column":9},"end":{"line":183,"column":3}},"89":{"start":{"line":179,"column":4},"end":{"line":179,"column":37}},"90":{"start":{"line":180,"column":9},"end":{"line":183,"column":3}},"91":{"start":{"line":182,"column":4},"end":{"line":182,"column":37}},"92":{"start":{"line":184,"column":2},"end":{"line":184,"column":34}},"93":{"start":{"line":187,"column":0},"end":{"line":197,"column":1}},"94":{"start":{"line":188,"column":2},"end":{"line":191,"column":4}},"95":{"start":{"line":192,"column":2},"end":{"line":195,"column":3}},"96":{"start":{"line":193,"column":4},"end":{"line":194,"column":42}},"97":{"start":{"line":196,"column":2},"end":{"line":196,"column":18}},"98":{"start":{"line":199,"column":0},"end":{"line":209,"column":1}},"99":{"start":{"line":200,"column":2},"end":{"line":207,"column":3}},"100":{"start":{"line":201,"column":4},"end":{"line":206,"column":5}},"101":{"start":{"line":202,"column":6},"end":{"line":202,"column":56}},"102":{"start":{"line":203,"column":6},"end":{"line":205,"column":7}},"103":{"start":{"line":204,"column":8},"end":{"line":204,"column":31}},"104":{"start":{"line":208,"column":2},"end":{"line":208,"column":12}},"105":{"start":{"line":211,"column":0},"end":{"line":215,"column":1}},"106":{"start":{"line":212,"column":2},"end":{"line":214,"column":3}},"107":{"start":{"line":213,"column":4},"end":{"line":213,"column":104}},"108":{"start":{"line":217,"column":0},"end":{"line":227,"column":1}},"109":{"start":{"line":218,"column":2},"end":{"line":220,"column":3}},"110":{"start":{"line":219,"column":4},"end":{"line":219,"column":82}},"111":{"start":{"line":221,"column":2},"end":{"line":221,"column":34}},"112":{"start":{"line":222,"column":2},"end":{"line":222,"column":25}},"113":{"start":{"line":224,"column":2},"end":{"line":226,"column":3}},"114":{"start":{"line":225,"column":4},"end":{"line":225,"column":35}},"115":{"start":{"line":229,"column":0},"end":{"line":233,"column":1}},"116":{"start":{"line":230,"column":2},"end":{"line":232,"column":3}},"117":{"start":{"line":231,"column":4},"end":{"line":231,"column":49}},"118":{"start":{"line":235,"column":0},"end":{"line":260,"column":1}},"119":{"start":{"line":236,"column":2},"end":{"line":236,"column":61}},"120":{"start":{"line":237,"column":2},"end":{"line":240,"column":4}},"121":{"start":{"line":241,"column":2},"end":{"line":244,"column":5}},"122":{"start":{"line":245,"column":2},"end":{"line":252,"column":3}},"123":{"start":{"line":247,"column":4},"end":{"line":251,"column":7}},"124":{"start":{"line":253,"column":2},"end":{"line":257,"column":3}},"125":{"start":{"line":256,"column":4},"end":{"line":256,"column":67}},"126":{"start":{"line":259,"column":2},"end":{"line":259,"column":54}},"127":{"start":{"line":262,"column":0},"end":{"line":274,"column":1}},"128":{"start":{"line":263,"column":2},"end":{"line":273,"column":3}},"129":{"start":{"line":264,"column":4},"end":{"line":264,"column":46}},"130":{"start":{"line":265,"column":4},"end":{"line":269,"column":5}},"131":{"start":{"line":266,"column":6},"end":{"line":268,"column":89}},"132":{"start":{"line":270,"column":4},"end":{"line":272,"column":5}},"133":{"start":{"line":271,"column":6},"end":{"line":271,"column":47}},"134":{"start":{"line":276,"column":0},"end":{"line":278,"column":1}},"135":{"start":{"line":277,"column":2},"end":{"line":277,"column":36}},"136":{"start":{"line":280,"column":0},"end":{"line":308,"column":1}},"137":{"start":{"line":281,"column":2},"end":{"line":285,"column":5}},"138":{"start":{"line":286,"column":2},"end":{"line":286,"column":55}},"139":{"start":{"line":288,"column":2},"end":{"line":299,"column":3}},"140":{"start":{"line":289,"column":4},"end":{"line":289,"column":36}},"141":{"start":{"line":290,"column":9},"end":{"line":299,"column":3}},"142":{"start":{"line":291,"column":4},"end":{"line":293,"column":68}},"143":{"start":{"line":295,"column":4},"end":{"line":296,"column":79}},"144":{"start":{"line":297,"column":4},"end":{"line":297,"column":32}},"145":{"start":{"line":298,"column":4},"end":{"line":298,"column":30}},"146":{"start":{"line":301,"column":2},"end":{"line":305,"column":3}},"147":{"start":{"line":304,"column":4},"end":{"line":304,"column":67}},"148":{"start":{"line":307,"column":2},"end":{"line":307,"column":63}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":16}},{"start":{"line":34,"column":20},"end":{"line":34,"column":39}}]},"3":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":21},"end":{"line":41,"column":42}},{"start":{"line":41,"column":46},"end":{"line":41,"column":51}}]},"4":{"line":61,"type":"switch","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":29}},{"start":{"line":63,"column":4},"end":{"line":65,"column":12}},{"start":{"line":66,"column":4},"end":{"line":68,"column":12}},{"start":{"line":69,"column":4},"end":{"line":71,"column":12}},{"start":{"line":72,"column":4},"end":{"line":74,"column":12}},{"start":{"line":75,"column":4},"end":{"line":77,"column":12}},{"start":{"line":78,"column":4},"end":{"line":78,"column":12}}]},"5":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"6":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":2},"end":{"line":98,"column":2}},{"start":{"line":98,"column":2},"end":{"line":98,"column":2}}]},"7":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":2},"end":{"line":113,"column":2}},{"start":{"line":113,"column":2},"end":{"line":113,"column":2}}]},"8":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":2},"end":{"line":118,"column":2}},{"start":{"line":118,"column":2},"end":{"line":118,"column":2}}]},"9":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":4},"end":{"line":130,"column":4}},{"start":{"line":130,"column":4},"end":{"line":130,"column":4}}]},"10":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"11":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":6},"end":{"line":162,"column":59}},{"start":{"line":163,"column":9},"end":{"line":163,"column":62}}]},"12":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":2},"end":{"line":166,"column":2}},{"start":{"line":166,"column":2},"end":{"line":166,"column":2}}]},"13":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":6},"end":{"line":166,"column":59}},{"start":{"line":167,"column":9},"end":{"line":167,"column":62}}]},"14":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":2},"end":{"line":174,"column":2}},{"start":{"line":174,"column":2},"end":{"line":174,"column":2}}]},"15":{"line":174,"type":"binary-expr","locations":[{"start":{"line":174,"column":6},"end":{"line":174,"column":59}},{"start":{"line":175,"column":9},"end":{"line":175,"column":62}}]},"16":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":9},"end":{"line":177,"column":9}},{"start":{"line":177,"column":9},"end":{"line":177,"column":9}}]},"17":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":13},"end":{"line":177,"column":66}},{"start":{"line":178,"column":9},"end":{"line":178,"column":62}}]},"18":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":9},"end":{"line":180,"column":9}},{"start":{"line":180,"column":9},"end":{"line":180,"column":9}}]},"19":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":13},"end":{"line":180,"column":66}},{"start":{"line":181,"column":9},"end":{"line":181,"column":62}}]},"20":{"line":193,"type":"cond-expr","locations":[{"start":{"line":193,"column":25},"end":{"line":193,"column":38}},{"start":{"line":193,"column":41},"end":{"line":193,"column":56}}]},"21":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":2},"end":{"line":200,"column":2}},{"start":{"line":200,"column":2},"end":{"line":200,"column":2}}]},"22":{"line":200,"type":"binary-expr","locations":[{"start":{"line":200,"column":6},"end":{"line":200,"column":27}},{"start":{"line":200,"column":31},"end":{"line":200,"column":63}}]},"23":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":6},"end":{"line":203,"column":6}},{"start":{"line":203,"column":6},"end":{"line":203,"column":6}}]},"24":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":2},"end":{"line":218,"column":2}},{"start":{"line":218,"column":2},"end":{"line":218,"column":2}}]},"25":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":2},"end":{"line":224,"column":2}},{"start":{"line":224,"column":2},"end":{"line":224,"column":2}}]},"26":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":2},"end":{"line":230,"column":2}},{"start":{"line":230,"column":2},"end":{"line":230,"column":2}}]},"27":{"line":230,"type":"binary-expr","locations":[{"start":{"line":230,"column":6},"end":{"line":230,"column":29}},{"start":{"line":230,"column":33},"end":{"line":230,"column":72}}]},"28":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":2},"end":{"line":245,"column":2}},{"start":{"line":245,"column":2},"end":{"line":245,"column":2}}]},"29":{"line":245,"type":"binary-expr","locations":[{"start":{"line":245,"column":6},"end":{"line":245,"column":50}},{"start":{"line":246,"column":10},"end":{"line":246,"column":54}},{"start":{"line":246,"column":58},"end":{"line":246,"column":75}}]},"30":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":2},"end":{"line":253,"column":2}},{"start":{"line":253,"column":2},"end":{"line":253,"column":2}}]},"31":{"line":253,"type":"binary-expr","locations":[{"start":{"line":253,"column":6},"end":{"line":253,"column":26}},{"start":{"line":253,"column":30},"end":{"line":253,"column":61}},{"start":{"line":254,"column":9},"end":{"line":254,"column":51}},{"start":{"line":255,"column":9},"end":{"line":255,"column":73}}]},"32":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":4},"end":{"line":265,"column":4}},{"start":{"line":265,"column":4},"end":{"line":265,"column":4}}]},"33":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":4},"end":{"line":270,"column":4}},{"start":{"line":270,"column":4},"end":{"line":270,"column":4}}]},"34":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":2},"end":{"line":288,"column":2}},{"start":{"line":288,"column":2},"end":{"line":288,"column":2}}]},"35":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":9},"end":{"line":290,"column":9}},{"start":{"line":290,"column":9},"end":{"line":290,"column":9}}]},"36":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":2},"end":{"line":301,"column":2}},{"start":{"line":301,"column":2},"end":{"line":301,"column":2}}]},"37":{"line":301,"type":"binary-expr","locations":[{"start":{"line":301,"column":6},"end":{"line":301,"column":26}},{"start":{"line":301,"column":30},"end":{"line":301,"column":61}},{"start":{"line":302,"column":9},"end":{"line":302,"column":51}},{"start":{"line":303,"column":9},"end":{"line":303,"column":73}}]}},"code":["'use strict';","","const _ = require('lodash'),","    ParsedData = require('../data/parsed_data'),","    parser_helper = require('./parser_helper'),","    cardinalities = require('../cardinalities'),","    checkForReservedClassName = require('../utils/jhipster_utils').checkForReservedClassName,","    checkForReservedTableName = require('../utils/jhipster_utils').checkForReservedTableName,","    checkForReservedFieldName = require('../utils/jhipster_utils').checkForReservedFieldName,","    buildException = require('../exceptions/exception_factory').buildException,","    exceptions = require('../exceptions/exception_factory').exceptions;","","var root;","var databaseTypes;","var rawObjects;","var parsedData;","var noUserManagement;","","module.exports = {","  parse: parse","};","","function parse(args) {","  initParser(args);","  findElements();","  fillTypes();","  fillEnums();","  fillAssociations();","  fillClassesAndFields();","  return parsedData;","}","","function initParser(args) {","  if (!args.root || !args.databaseTypes) {","    throw new buildException(","      exceptions.NullPointer,","      'The root object and the database types must be passed.');","  }","  root = args.root;","  databaseTypes = args.databaseTypes;","  noUserManagement = args.noUserManagement || false;","  rawObjects = {","    rawTypesIndexes: [],","    rawEnumsIndexes: [],","    rawClassesIndexes: [],","    rawAssociationsIndexes: [],","    rawPackagesIndexes: []","  };","  parsedData = new ParsedData();","}","","","function findElements() {","  findElementsInNode(root, []);","}","","function findElementsInNode(node, path) {","  for (let i = 0; i < node.packagedElement.length; i++) {","    let element = node.packagedElement[i];","    let indexInfo = {index: i, path: path};","    switch (element.$['xsi:type']) {","    case 'uml:PrimitiveType':","    case 'uml:DataType':","      rawObjects.rawTypesIndexes.push(indexInfo);","      break;","    case 'uml:Enumeration':","      rawObjects.rawEnumsIndexes.push(indexInfo);","      break;","    case 'uml:Class':","      rawObjects.rawClassesIndexes.push(indexInfo);","      break;","    case 'uml:Association':","      rawObjects.rawAssociationsIndexes.push(indexInfo);","      break;","    case 'uml:Package':","      findElementsInNode(element, _.concat(path,i));","      break;","    default:","    }","  }","}","","function fillTypes() {","  for (let i = 0; i < rawObjects.rawTypesIndexes.length; i++) {","    addType(parser_helper.getXmlElementFromRawIndexes(root, rawObjects.rawTypesIndexes[i]));","  }","}","","function addType(typeElement) {","  if (!typeElement.$) {","    typeElement = {","      $: {","        'xmi:id': typeElement,","        name: typeElement","      }","    };","  }","  if (!databaseTypes.contains(_.upperFirst(typeElement.$.name))) {","    throw new buildException(","        exceptions.WrongType,","        `The type '${typeElement.$.name}' isn't supported by JHipster.`);","  }","  parsedData.addType(typeElement.$['xmi:id'], {name: _.upperFirst(typeElement.$.name)});","}","","function fillEnums() {","  for (let i = 0; i < rawObjects.rawEnumsIndexes.length; i++) {","    addEnum(parser_helper.getXmlElementFromRawIndexes(root, rawObjects.rawEnumsIndexes[i]));","  }","}","","function addEnum(enumElement) {","  if (!enumElement.$.name) {","    throw new buildException(","        exceptions.NullPointer, \"The enumeration's name can't be null.\");","  }","  let values = [];","  if (enumElement.ownedLiteral) {","    values = getEnumValues(enumElement);","  }","  parsedData.addEnum(","    enumElement.$['xmi:id'],","    {name: enumElement.$.name, values: values});","}","","function getEnumValues(enumElement) {","  var values = [];","  for (let i = 0; i < enumElement.ownedLiteral.length; i++) {","    let ownedLiteral = enumElement.ownedLiteral[i];","    if (!ownedLiteral.$.name.toUpperCase()) {","      throw new buildException(","          exceptions.NullPointer,","          \"An enumeration's value can't be null.\");","    }","    values.push(ownedLiteral.$.name.toUpperCase());","  }","  return values;","}","","function fillAssociations() {","  for (let i = 0; i < rawObjects.rawAssociationsIndexes.length; i++) {","    addAssociation(parser_helper.getXmlElementFromRawIndexes(root, rawObjects.rawAssociationsIndexes[i]));","  }","}","","function addAssociation(associationElement) {","  var associationData = getAssociationEnds(associationElement);","  associationData.type = getAssociationType(associationElement);","  var comments = getAssociationComments(associationElement);","  associationData.commentInFrom = comments.commentInFrom;","  associationData.commentInTo = comments.commentInTo;","  parsedData.addAssociation(associationElement.$['xmi:id'], associationData);","}","","function getAssociationEnds(association) {","  var data = {","    from: association.ownedEnd[1].$.type,","    to: association.ownedEnd[0].$.type,","    injectedFieldInFrom: association.ownedEnd[0].$.name,","    injectedFieldInTo: association.ownedEnd[1].$.name","  };","  if (association.ownedEnd[0].lowerValue[0].$.value === '1'","      || association.ownedEnd[0].lowerValue[0].$.value === '*') {","    data.isInjectedFieldInFromRequired = true;","  }","  if (association.ownedEnd[1].lowerValue[0].$.value === '1'","      || association.ownedEnd[1].lowerValue[0].$.value === '*') {","    data.isInjectedFieldInToRequired = true;","  }","  return data;","}","","function getAssociationType(association) {","  if (association.ownedEnd[0].upperValue[0].$.value === '*'","      && association.ownedEnd[1].upperValue[0].$.value === '*') {","    return cardinalities.MANY_TO_MANY;","  } else if (association.ownedEnd[0].upperValue[0].$.value === '*'","      && association.ownedEnd[1].upperValue[0].$.value !== '*') {","    return cardinalities.ONE_TO_MANY;","  } else if (association.ownedEnd[0].upperValue[0].$.value !== '*'","      && association.ownedEnd[1].upperValue[0].$.value === '*') {","    return cardinalities.MANY_TO_ONE;","  }","  return cardinalities.ONE_TO_ONE;","}","","function getAssociationComments(association) {","  var comments = {","    commentInFrom: '',","    commentInTo: ''","  };","  for (let i = 0; i < association.ownedEnd.length; i++) {","    comments[(i === 0) ? 'commentInTo' : 'commentInFrom'] =","      getComment(association.ownedEnd[i]);","  }","  return comments;","}","","function getComment(ownedEnd) {","  if (ownedEnd.eAnnotations && ownedEnd.eAnnotations[0].details) {","    for (let i = 0; i < ownedEnd.eAnnotations[0].details.length; i++) {","      let element = ownedEnd.eAnnotations[0].details[i];","      if (element.$.key === 'gmm-documentation') {","        return element.$.value;","      }","    }","  }","  return '';","}","","function fillClassesAndFields() {","  for (let i = 0; i < rawObjects.rawClassesIndexes.length; i++) {","    addClassAndFields(parser_helper.getXmlElementFromRawIndexes(root, rawObjects.rawClassesIndexes[i]));","  }","}","","function addClassAndFields(classElement) {","  if (!classElement.$.name) {","    throw new buildException(exceptions.NullPointer, 'Classes must have a name.');","  }","  checkForUserClass(classElement);","  addClass(classElement);","","  if (classElement.ownedAttribute) {","    handleAttributes(classElement);","  }","}","","function checkForUserClass(element) {","  if (!parsedData.userClassId && element.$.name.toLowerCase() === 'user') {","    parsedData.userClassId = element.$['xmi:id'];","  }","}","","function addClass(element) {","  var names = parser_helper.extractClassName(element.$.name);","  var classData = {","    name: _.upperFirst(names.entityName),","    tableName: names.tableName","  };","  checkForReservedClassName({","    name: classData.name,","    shouldThrow: true","  });","  if (classData.tableName.toLowerCase() !== 'user'","      || (classData.tableName.toLowerCase() === 'user' && !noUserManagement)) {","    checkForReservedTableName({","      name: classData.tableName,","      databaseTypeName: databaseTypes.getName(),","      shouldThrow: true","    });","  }","  if (element.eAnnotations && element.eAnnotations[0].details","      && element.eAnnotations[0].details.length > 1","      && element.eAnnotations[0].details[1].$.key === 'gmm-documentation') {","    classData.comment = element.eAnnotations[0].details[1].$.value;","  }","","  parsedData.addClass(element.$['xmi:id'], classData);","}","","function handleAttributes(element) {","  for (let i = 0; i < element.ownedAttribute.length; i++) {","    let attribute = element.ownedAttribute[i];","    if (!attribute.$.name) {","      throw new buildException(","          exceptions.NullPointer,","          `No name is defined for the passed attribute, for class '${element.$.name}'.`);","    }","    if (!parser_helper.isAnId(attribute.$.name)) {","      addField(attribute, element.$['xmi:id']);","    }","  }","}","","function addField(element, classId) {","  addRegularField(element, classId);","}","","function addRegularField(element, classId) {","  checkForReservedFieldName({","    name: element.$.name,","    databaseTypeName: databaseTypes.getName(),","    shouldThrow: true","  });","  var fieldData = {name: _.lowerFirst(element.$.name)};","","  if (element.$.type) {","    fieldData.type = element.$.type;","  } else if (!element.type) {","    throw new buildException(","        exceptions.WrongField,","        `The field '${element.$.name}' does not possess any type.`);","  } else {","    var typeName =","        _.upperFirst(parser_helper.getTypeNameFromURL(element.type[0].$.href));","    addType(typeName, typeName); // id = name","    fieldData.type = typeName;","  }","","  if (element.eAnnotations && element.eAnnotations[0].details","      && element.eAnnotations[0].details.length > 1","      && element.eAnnotations[0].details[1].$.key === 'gmm-documentation') {","    fieldData.comment = element.eAnnotations[0].details[1].$.value;","  }","","  parsedData.addField(classId, element.$['xmi:id'], fieldData);","}",""],"l":{"3":1,"13":1,"14":1,"15":1,"16":1,"17":1,"19":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"33":1,"34":0,"35":0,"39":0,"40":0,"41":0,"42":0,"49":0,"53":1,"54":0,"57":1,"58":0,"59":0,"60":0,"61":0,"64":0,"65":0,"67":0,"68":0,"70":0,"71":0,"73":0,"74":0,"76":0,"77":0,"83":1,"84":0,"85":0,"89":1,"90":0,"91":0,"98":0,"99":0,"103":0,"106":1,"107":0,"108":0,"112":1,"113":0,"114":0,"117":0,"118":0,"119":0,"121":0,"126":1,"127":0,"128":0,"129":0,"130":0,"131":0,"135":0,"137":0,"140":1,"141":0,"142":0,"146":1,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"155":1,"156":0,"162":0,"164":0,"166":0,"168":0,"170":0,"173":1,"174":0,"176":0,"177":0,"179":0,"180":0,"182":0,"184":0,"187":1,"188":0,"192":0,"193":0,"196":0,"199":1,"200":0,"201":0,"202":0,"203":0,"204":0,"208":0,"211":1,"212":0,"213":0,"217":1,"218":0,"219":0,"221":0,"222":0,"224":0,"225":0,"229":1,"230":0,"231":0,"235":1,"236":0,"237":0,"241":0,"245":0,"247":0,"253":0,"256":0,"259":0,"262":1,"263":0,"264":0,"265":0,"266":0,"270":0,"271":0,"276":1,"277":0,"280":1,"281":0,"286":0,"288":0,"289":0,"290":0,"291":0,"295":0,"297":0,"298":0,"301":0,"304":0,"307":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/editors/umldesigner_parser.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/editors/umldesigner_parser.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":1,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":0,"114":0,"115":1,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":1,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":1,"138":0,"139":0,"140":0,"141":0,"142":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"parse","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":21}}},"2":{"name":"initParser","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":26}}},"3":{"name":"findElements","line":51,"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":24}}},"4":{"name":"findElementsInNode","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":40}}},"5":{"name":"fillTypes","line":81,"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":21}}},"6":{"name":"addType","line":87,"loc":{"start":{"line":87,"column":0},"end":{"line":87,"column":30}}},"7":{"name":"fillEnums","line":104,"loc":{"start":{"line":104,"column":0},"end":{"line":104,"column":21}}},"8":{"name":"addEnum","line":110,"loc":{"start":{"line":110,"column":0},"end":{"line":110,"column":30}}},"9":{"name":"getEnumValues","line":124,"loc":{"start":{"line":124,"column":0},"end":{"line":124,"column":36}}},"10":{"name":"fillClassesAndFields","line":138,"loc":{"start":{"line":138,"column":0},"end":{"line":138,"column":32}}},"11":{"name":"addClassAndFields","line":144,"loc":{"start":{"line":144,"column":0},"end":{"line":144,"column":41}}},"12":{"name":"checkForUserClass","line":156,"loc":{"start":{"line":156,"column":0},"end":{"line":156,"column":36}}},"13":{"name":"addClass","line":162,"loc":{"start":{"line":162,"column":0},"end":{"line":162,"column":27}}},"14":{"name":"handleAttributes","line":186,"loc":{"start":{"line":186,"column":0},"end":{"line":186,"column":35}}},"15":{"name":"addField","line":200,"loc":{"start":{"line":200,"column":0},"end":{"line":200,"column":36}}},"16":{"name":"addRegularField","line":204,"loc":{"start":{"line":204,"column":0},"end":{"line":204,"column":43}}},"17":{"name":"fillAssociations","line":232,"loc":{"start":{"line":232,"column":0},"end":{"line":232,"column":28}}},"18":{"name":"addAssociation","line":238,"loc":{"start":{"line":238,"column":0},"end":{"line":238,"column":44}}},"19":{"name":"getAssociationEnds","line":247,"loc":{"start":{"line":247,"column":0},"end":{"line":247,"column":41}}},"20":{"name":"getAssociationType","line":263,"loc":{"start":{"line":263,"column":0},"end":{"line":263,"column":41}}},"21":{"name":"getAssociationComments","line":277,"loc":{"start":{"line":277,"column":0},"end":{"line":277,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":11,"column":71}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":9}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":18}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":15}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":15}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":21}},"7":{"start":{"line":19,"column":0},"end":{"line":21,"column":2}},"8":{"start":{"line":23,"column":0},"end":{"line":31,"column":1}},"9":{"start":{"line":24,"column":2},"end":{"line":24,"column":19}},"10":{"start":{"line":25,"column":2},"end":{"line":25,"column":17}},"11":{"start":{"line":26,"column":2},"end":{"line":26,"column":14}},"12":{"start":{"line":27,"column":2},"end":{"line":27,"column":14}},"13":{"start":{"line":28,"column":2},"end":{"line":28,"column":25}},"14":{"start":{"line":29,"column":2},"end":{"line":29,"column":21}},"15":{"start":{"line":30,"column":2},"end":{"line":30,"column":20}},"16":{"start":{"line":33,"column":0},"end":{"line":49,"column":1}},"17":{"start":{"line":34,"column":2},"end":{"line":38,"column":3}},"18":{"start":{"line":35,"column":4},"end":{"line":37,"column":64}},"19":{"start":{"line":39,"column":2},"end":{"line":39,"column":19}},"20":{"start":{"line":40,"column":2},"end":{"line":40,"column":37}},"21":{"start":{"line":41,"column":2},"end":{"line":41,"column":52}},"22":{"start":{"line":42,"column":2},"end":{"line":47,"column":4}},"23":{"start":{"line":48,"column":2},"end":{"line":48,"column":32}},"24":{"start":{"line":51,"column":0},"end":{"line":53,"column":1}},"25":{"start":{"line":52,"column":2},"end":{"line":52,"column":31}},"26":{"start":{"line":55,"column":0},"end":{"line":79,"column":1}},"27":{"start":{"line":56,"column":2},"end":{"line":78,"column":3}},"28":{"start":{"line":57,"column":4},"end":{"line":57,"column":42}},"29":{"start":{"line":58,"column":4},"end":{"line":58,"column":43}},"30":{"start":{"line":59,"column":4},"end":{"line":77,"column":5}},"31":{"start":{"line":62,"column":6},"end":{"line":62,"column":49}},"32":{"start":{"line":63,"column":6},"end":{"line":63,"column":12}},"33":{"start":{"line":65,"column":6},"end":{"line":65,"column":49}},"34":{"start":{"line":66,"column":6},"end":{"line":66,"column":12}},"35":{"start":{"line":68,"column":6},"end":{"line":68,"column":51}},"36":{"start":{"line":69,"column":6},"end":{"line":69,"column":12}},"37":{"start":{"line":71,"column":6},"end":{"line":71,"column":56}},"38":{"start":{"line":72,"column":6},"end":{"line":72,"column":12}},"39":{"start":{"line":74,"column":6},"end":{"line":74,"column":53}},"40":{"start":{"line":75,"column":6},"end":{"line":75,"column":12}},"41":{"start":{"line":81,"column":0},"end":{"line":85,"column":1}},"42":{"start":{"line":82,"column":2},"end":{"line":84,"column":3}},"43":{"start":{"line":83,"column":4},"end":{"line":83,"column":92}},"44":{"start":{"line":87,"column":0},"end":{"line":102,"column":1}},"45":{"start":{"line":88,"column":2},"end":{"line":95,"column":3}},"46":{"start":{"line":89,"column":4},"end":{"line":94,"column":6}},"47":{"start":{"line":96,"column":2},"end":{"line":100,"column":3}},"48":{"start":{"line":97,"column":4},"end":{"line":99,"column":73}},"49":{"start":{"line":101,"column":2},"end":{"line":101,"column":88}},"50":{"start":{"line":104,"column":0},"end":{"line":108,"column":1}},"51":{"start":{"line":105,"column":2},"end":{"line":107,"column":3}},"52":{"start":{"line":106,"column":4},"end":{"line":106,"column":92}},"53":{"start":{"line":110,"column":0},"end":{"line":122,"column":1}},"54":{"start":{"line":111,"column":2},"end":{"line":114,"column":3}},"55":{"start":{"line":112,"column":4},"end":{"line":113,"column":73}},"56":{"start":{"line":115,"column":2},"end":{"line":115,"column":18}},"57":{"start":{"line":116,"column":2},"end":{"line":118,"column":3}},"58":{"start":{"line":117,"column":4},"end":{"line":117,"column":40}},"59":{"start":{"line":119,"column":2},"end":{"line":121,"column":48}},"60":{"start":{"line":124,"column":0},"end":{"line":136,"column":1}},"61":{"start":{"line":125,"column":2},"end":{"line":125,"column":18}},"62":{"start":{"line":126,"column":2},"end":{"line":134,"column":3}},"63":{"start":{"line":127,"column":4},"end":{"line":127,"column":51}},"64":{"start":{"line":128,"column":4},"end":{"line":132,"column":5}},"65":{"start":{"line":129,"column":6},"end":{"line":131,"column":51}},"66":{"start":{"line":133,"column":4},"end":{"line":133,"column":51}},"67":{"start":{"line":135,"column":2},"end":{"line":135,"column":16}},"68":{"start":{"line":138,"column":0},"end":{"line":142,"column":1}},"69":{"start":{"line":139,"column":2},"end":{"line":141,"column":3}},"70":{"start":{"line":140,"column":4},"end":{"line":140,"column":104}},"71":{"start":{"line":144,"column":0},"end":{"line":154,"column":1}},"72":{"start":{"line":145,"column":2},"end":{"line":147,"column":3}},"73":{"start":{"line":146,"column":4},"end":{"line":146,"column":82}},"74":{"start":{"line":148,"column":2},"end":{"line":148,"column":34}},"75":{"start":{"line":149,"column":2},"end":{"line":149,"column":25}},"76":{"start":{"line":151,"column":2},"end":{"line":153,"column":3}},"77":{"start":{"line":152,"column":4},"end":{"line":152,"column":35}},"78":{"start":{"line":156,"column":0},"end":{"line":160,"column":1}},"79":{"start":{"line":157,"column":2},"end":{"line":159,"column":3}},"80":{"start":{"line":158,"column":4},"end":{"line":158,"column":49}},"81":{"start":{"line":162,"column":0},"end":{"line":184,"column":1}},"82":{"start":{"line":163,"column":2},"end":{"line":163,"column":61}},"83":{"start":{"line":164,"column":2},"end":{"line":167,"column":4}},"84":{"start":{"line":168,"column":2},"end":{"line":171,"column":5}},"85":{"start":{"line":172,"column":2},"end":{"line":179,"column":3}},"86":{"start":{"line":174,"column":4},"end":{"line":178,"column":7}},"87":{"start":{"line":180,"column":2},"end":{"line":182,"column":3}},"88":{"start":{"line":181,"column":4},"end":{"line":181,"column":56}},"89":{"start":{"line":183,"column":2},"end":{"line":183,"column":54}},"90":{"start":{"line":186,"column":0},"end":{"line":198,"column":1}},"91":{"start":{"line":187,"column":2},"end":{"line":197,"column":3}},"92":{"start":{"line":188,"column":4},"end":{"line":188,"column":46}},"93":{"start":{"line":189,"column":4},"end":{"line":193,"column":5}},"94":{"start":{"line":190,"column":6},"end":{"line":192,"column":89}},"95":{"start":{"line":194,"column":4},"end":{"line":196,"column":5}},"96":{"start":{"line":195,"column":6},"end":{"line":195,"column":47}},"97":{"start":{"line":200,"column":0},"end":{"line":202,"column":1}},"98":{"start":{"line":201,"column":2},"end":{"line":201,"column":36}},"99":{"start":{"line":204,"column":0},"end":{"line":230,"column":1}},"100":{"start":{"line":205,"column":2},"end":{"line":209,"column":5}},"101":{"start":{"line":210,"column":2},"end":{"line":210,"column":55}},"102":{"start":{"line":212,"column":2},"end":{"line":223,"column":3}},"103":{"start":{"line":213,"column":4},"end":{"line":213,"column":36}},"104":{"start":{"line":214,"column":9},"end":{"line":223,"column":3}},"105":{"start":{"line":215,"column":4},"end":{"line":217,"column":68}},"106":{"start":{"line":219,"column":4},"end":{"line":220,"column":79}},"107":{"start":{"line":221,"column":4},"end":{"line":221,"column":32}},"108":{"start":{"line":222,"column":4},"end":{"line":222,"column":30}},"109":{"start":{"line":225,"column":2},"end":{"line":227,"column":3}},"110":{"start":{"line":226,"column":4},"end":{"line":226,"column":56}},"111":{"start":{"line":229,"column":2},"end":{"line":229,"column":63}},"112":{"start":{"line":232,"column":0},"end":{"line":236,"column":1}},"113":{"start":{"line":233,"column":2},"end":{"line":235,"column":3}},"114":{"start":{"line":234,"column":4},"end":{"line":234,"column":106}},"115":{"start":{"line":238,"column":0},"end":{"line":245,"column":1}},"116":{"start":{"line":239,"column":2},"end":{"line":239,"column":63}},"117":{"start":{"line":240,"column":2},"end":{"line":240,"column":64}},"118":{"start":{"line":241,"column":2},"end":{"line":241,"column":60}},"119":{"start":{"line":242,"column":2},"end":{"line":242,"column":57}},"120":{"start":{"line":243,"column":2},"end":{"line":243,"column":53}},"121":{"start":{"line":244,"column":2},"end":{"line":244,"column":77}},"122":{"start":{"line":247,"column":0},"end":{"line":261,"column":1}},"123":{"start":{"line":248,"column":2},"end":{"line":253,"column":4}},"124":{"start":{"line":254,"column":2},"end":{"line":256,"column":3}},"125":{"start":{"line":255,"column":4},"end":{"line":255,"column":46}},"126":{"start":{"line":257,"column":2},"end":{"line":259,"column":3}},"127":{"start":{"line":258,"column":4},"end":{"line":258,"column":44}},"128":{"start":{"line":260,"column":2},"end":{"line":260,"column":14}},"129":{"start":{"line":263,"column":0},"end":{"line":275,"column":1}},"130":{"start":{"line":264,"column":2},"end":{"line":273,"column":3}},"131":{"start":{"line":266,"column":4},"end":{"line":266,"column":38}},"132":{"start":{"line":267,"column":9},"end":{"line":273,"column":3}},"133":{"start":{"line":269,"column":4},"end":{"line":269,"column":37}},"134":{"start":{"line":270,"column":9},"end":{"line":273,"column":3}},"135":{"start":{"line":272,"column":4},"end":{"line":272,"column":37}},"136":{"start":{"line":274,"column":2},"end":{"line":274,"column":34}},"137":{"start":{"line":277,"column":0},"end":{"line":287,"column":1}},"138":{"start":{"line":278,"column":2},"end":{"line":281,"column":4}},"139":{"start":{"line":282,"column":2},"end":{"line":285,"column":3}},"140":{"start":{"line":283,"column":4},"end":{"line":283,"column":65}},"141":{"start":{"line":284,"column":4},"end":{"line":284,"column":50}},"142":{"start":{"line":286,"column":2},"end":{"line":286,"column":18}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":16}},{"start":{"line":34,"column":20},"end":{"line":34,"column":39}}]},"3":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":21},"end":{"line":41,"column":42}},{"start":{"line":41,"column":46},"end":{"line":41,"column":51}}]},"4":{"line":59,"type":"switch","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":29}},{"start":{"line":61,"column":4},"end":{"line":63,"column":12}},{"start":{"line":64,"column":4},"end":{"line":66,"column":12}},{"start":{"line":67,"column":4},"end":{"line":69,"column":12}},{"start":{"line":70,"column":4},"end":{"line":72,"column":12}},{"start":{"line":73,"column":4},"end":{"line":75,"column":12}},{"start":{"line":76,"column":4},"end":{"line":76,"column":12}}]},"5":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":2},"end":{"line":88,"column":2}},{"start":{"line":88,"column":2},"end":{"line":88,"column":2}}]},"6":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":96,"column":2}},{"start":{"line":96,"column":2},"end":{"line":96,"column":2}}]},"7":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":2},"end":{"line":111,"column":2}},{"start":{"line":111,"column":2},"end":{"line":111,"column":2}}]},"8":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":2},"end":{"line":116,"column":2}},{"start":{"line":116,"column":2},"end":{"line":116,"column":2}}]},"9":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":128,"column":4}},{"start":{"line":128,"column":4},"end":{"line":128,"column":4}}]},"10":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"11":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":2},"end":{"line":151,"column":2}},{"start":{"line":151,"column":2},"end":{"line":151,"column":2}}]},"12":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":2},"end":{"line":157,"column":2}},{"start":{"line":157,"column":2},"end":{"line":157,"column":2}}]},"13":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":6},"end":{"line":157,"column":29}},{"start":{"line":157,"column":33},"end":{"line":157,"column":72}}]},"14":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":172,"column":2}},{"start":{"line":172,"column":2},"end":{"line":172,"column":2}}]},"15":{"line":172,"type":"binary-expr","locations":[{"start":{"line":172,"column":6},"end":{"line":172,"column":50}},{"start":{"line":173,"column":10},"end":{"line":173,"column":54}},{"start":{"line":173,"column":58},"end":{"line":173,"column":75}}]},"16":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":2},"end":{"line":180,"column":2}},{"start":{"line":180,"column":2},"end":{"line":180,"column":2}}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":6},"end":{"line":180,"column":26}},{"start":{"line":180,"column":30},"end":{"line":180,"column":58}}]},"18":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":4},"end":{"line":189,"column":4}},{"start":{"line":189,"column":4},"end":{"line":189,"column":4}}]},"19":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":4},"end":{"line":194,"column":4}},{"start":{"line":194,"column":4},"end":{"line":194,"column":4}}]},"20":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":2},"end":{"line":212,"column":2}},{"start":{"line":212,"column":2},"end":{"line":212,"column":2}}]},"21":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":9},"end":{"line":214,"column":9}},{"start":{"line":214,"column":9},"end":{"line":214,"column":9}}]},"22":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":2},"end":{"line":225,"column":2}},{"start":{"line":225,"column":2},"end":{"line":225,"column":2}}]},"23":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":6},"end":{"line":225,"column":26}},{"start":{"line":225,"column":30},"end":{"line":225,"column":58}}]},"24":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":2},"end":{"line":254,"column":2}},{"start":{"line":254,"column":2},"end":{"line":254,"column":2}}]},"25":{"line":254,"type":"binary-expr","locations":[{"start":{"line":254,"column":6},"end":{"line":254,"column":59}},{"start":{"line":254,"column":63},"end":{"line":254,"column":122}}]},"26":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":2},"end":{"line":257,"column":2}},{"start":{"line":257,"column":2},"end":{"line":257,"column":2}}]},"27":{"line":257,"type":"binary-expr","locations":[{"start":{"line":257,"column":6},"end":{"line":257,"column":59}},{"start":{"line":257,"column":63},"end":{"line":257,"column":122}}]},"28":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":2},"end":{"line":264,"column":2}},{"start":{"line":264,"column":2},"end":{"line":264,"column":2}}]},"29":{"line":264,"type":"binary-expr","locations":[{"start":{"line":264,"column":6},"end":{"line":264,"column":59}},{"start":{"line":265,"column":9},"end":{"line":265,"column":62}}]},"30":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":9},"end":{"line":267,"column":9}},{"start":{"line":267,"column":9},"end":{"line":267,"column":9}}]},"31":{"line":267,"type":"binary-expr","locations":[{"start":{"line":267,"column":13},"end":{"line":267,"column":66}},{"start":{"line":268,"column":9},"end":{"line":268,"column":62}}]},"32":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":9},"end":{"line":270,"column":9}},{"start":{"line":270,"column":9},"end":{"line":270,"column":9}}]},"33":{"line":270,"type":"binary-expr","locations":[{"start":{"line":270,"column":13},"end":{"line":270,"column":66}},{"start":{"line":271,"column":9},"end":{"line":271,"column":62}}]},"34":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":2},"end":{"line":282,"column":2}},{"start":{"line":282,"column":2},"end":{"line":282,"column":2}}]},"35":{"line":282,"type":"binary-expr","locations":[{"start":{"line":282,"column":6},"end":{"line":282,"column":30}},{"start":{"line":282,"column":34},"end":{"line":282,"column":66}}]}},"code":["'use strict';","","const _ = require('lodash'),","    ParsedData = require('../data/parsed_data'),","    parser_helper = require('./parser_helper'),","    cardinalities = require('../cardinalities'),","    checkForReservedClassName = require('../utils/jhipster_utils').checkForReservedClassName,","    checkForReservedTableName = require('../utils/jhipster_utils').checkForReservedTableName,","    checkForReservedFieldName = require('../utils/jhipster_utils').checkForReservedFieldName,","    buildException = require('../exceptions/exception_factory').buildException,","    exceptions = require('../exceptions/exception_factory').exceptions;","","var root;","var databaseTypes;","var rawObjects;","var parsedData;","var noUserManagement;","","module.exports = {","  parse: parse","};","","function parse(args) {","  initParser(args);","  findElements();","  fillTypes();","  fillEnums();","  fillClassesAndFields();","  fillAssociations();","  return parsedData;","}","","function initParser(args) {","  if (!args.root || !args.databaseTypes) {","    throw new buildException(","      exceptions.NullPointer,","      'The root object and the database types must be passed.');","  }","  root = args.root;","  databaseTypes = args.databaseTypes;","  noUserManagement = args.noUserManagement || false;","  rawObjects = {","    rawTypesIndexes: [],","    rawEnumsIndexes: [],","    rawClassesIndexes: [],","    rawAssociationsIndexes: []","  };","  parsedData = new ParsedData();","}","","function findElements() {","  findElementsInNode(root, []);","}","","function findElementsInNode(node, path) {","  for (let i = 0; i < node.packagedElement.length; i++) {","    let element = node.packagedElement[i];","    let indexInfo = {index: i, path: path};","    switch (element.$['xmi:type']) {","    case 'uml:PrimitiveType':","    case 'uml:DataType':","      rawObjects.rawTypesIndexes.push(indexInfo);","      break;","    case 'uml:Enumeration':","      rawObjects.rawEnumsIndexes.push(indexInfo);","      break;","    case 'uml:Class':","      rawObjects.rawClassesIndexes.push(indexInfo);","      break;","    case 'uml:Association':","      rawObjects.rawAssociationsIndexes.push(indexInfo);","      break;","    case 'uml:Package':","      findElementsInNode(element, _.concat(path, i));","      break;","    default:","    }","  }","}","","function fillTypes() {","  for (let i = 0; i < rawObjects.rawTypesIndexes.length; i++) {","    addType(parser_helper.getXmlElementFromRawIndexes(root, rawObjects.rawTypesIndexes[i]));","  }","}","","function addType(typeElement) {","  if (!typeElement.$) {","    typeElement = {","      $: {","        'xmi:id': typeElement,","        name: typeElement","      }","    };","  }","  if (!databaseTypes.contains(_.upperFirst(typeElement.$.name))) {","    throw new buildException(","        exceptions.WrongType,","        `The type '${typeElement.$.name}' isn't supported by JHipster.`);","  }","  parsedData.addType(typeElement.$['xmi:id'], {name: _.upperFirst(typeElement.$.name)});","}","","function fillEnums() {","  for (let i = 0; i < rawObjects.rawEnumsIndexes.length; i++) {","    addEnum(parser_helper.getXmlElementFromRawIndexes(root, rawObjects.rawEnumsIndexes[i]));","  }","}","","function addEnum(enumElement) {","  if (!enumElement.$.name) {","    throw new buildException(","        exceptions.NullPointer, \"The enumeration's name can't be null.\");","  }","  let values = [];","  if (enumElement.ownedLiteral) {","    values = getEnumValues(enumElement);","  }","  parsedData.addEnum(","    enumElement.$['xmi:id'],","    {name: enumElement.$.name, values: values});","}","","function getEnumValues(enumElement) {","  var values = [];","  for (let i = 0; i < enumElement.ownedLiteral.length; i++) {","    let ownedLiteral = enumElement.ownedLiteral[i];","    if (!ownedLiteral.$.name.toUpperCase()) {","      throw new buildException(","          exceptions.NullPointer,","          \"An enumeration's value can't be null.\");","    }","    values.push(ownedLiteral.$.name.toUpperCase());","  }","  return values;","}","","function fillClassesAndFields() {","  for (let i = 0; i < rawObjects.rawClassesIndexes.length; i++) {","    addClassAndFields(parser_helper.getXmlElementFromRawIndexes(root, rawObjects.rawClassesIndexes[i]));","  }","}","","function addClassAndFields(classElement) {","  if (!classElement.$.name) {","    throw new buildException(exceptions.NullPointer, 'Classes must have a name.');","  }","  checkForUserClass(classElement);","  addClass(classElement);","","  if (classElement.ownedAttribute) {","    handleAttributes(classElement);","  }","}","","function checkForUserClass(element) {","  if (!parsedData.userClassId && element.$.name.toLowerCase() === 'user') {","    parsedData.userClassId = element.$['xmi:id'];","  }","}","","function addClass(element) {","  var names = parser_helper.extractClassName(element.$.name);","  var classData = {","    name: _.upperFirst(names.entityName),","    tableName: names.tableName","  };","  checkForReservedClassName({","    name: classData.name,","    shouldThrow: true","  });","  if (classData.tableName.toLowerCase() !== 'user'","      || (classData.tableName.toLowerCase() === 'user' && !noUserManagement)) {","    checkForReservedTableName({","      name: classData.tableName,","      databaseTypeName: databaseTypes.getName(),","      shouldThrow: true","    });","  }","  if (element.ownedComment && element.ownedComment[0].body) {","    classData.comment = element.ownedComment[0].body[0];","  }","  parsedData.addClass(element.$['xmi:id'], classData);","}","","function handleAttributes(element) {","  for (let i = 0; i < element.ownedAttribute.length; i++) {","    let attribute = element.ownedAttribute[i];","    if (!attribute.$.name) {","      throw new buildException(","          exceptions.NullPointer,","          `No name is defined for the passed attribute, for class '${element.$.name}'.`);","    }","    if (!parser_helper.isAnId(attribute.$.name)) {","      addField(attribute, element.$['xmi:id']);","    }","  }","}","","function addField(element, classId) {","  addRegularField(element, classId);","}","","function addRegularField(element, classId) {","  checkForReservedFieldName({","    name: element.$.name,","    databaseTypeName: databaseTypes.getName(),","    shouldThrow: true","  });","  var fieldData = {name: _.lowerFirst(element.$.name)};","","  if (element.$.type) {","    fieldData.type = element.$.type;","  } else if (!element.type) {","    throw new buildException(","        exceptions.WrongField,","        `The field '${element.$.name}' does not possess any type.`);","  } else {","    var typeName =","        _.upperFirst(parser_helper.getTypeNameFromURL(element.type[0].$.href));","    addType(typeName, typeName); // id = name","    fieldData.type = typeName;","  }","","  if (element.ownedComment && element.ownedComment[0].body) {","    fieldData.comment = element.ownedComment[0].body[0];","  }","","  parsedData.addField(classId, element.$['xmi:id'], fieldData);","}","","function fillAssociations() {","  for (let i = 0; i < rawObjects.rawAssociationsIndexes.length; i++) {","    addAssociation(parser_helper.getXmlElementFromRawIndexes(root, rawObjects.rawAssociationsIndexes[i]));","  }","}","","function addAssociation(associationElement) {","  var associationData = getAssociationEnds(associationElement);","  associationData.type = getAssociationType(associationElement);","  var comments = getAssociationComments(associationElement);","  associationData.commentInFrom = comments.commentInFrom;","  associationData.commentInTo = comments.commentInTo;","  parsedData.addAssociation(associationElement.$['xmi:id'], associationData);","}","","function getAssociationEnds(association) {","  var data = {","    from: association.ownedEnd[0].$.type,","    to: association.ownedEnd[1].$.type,","    injectedFieldInFrom: association.ownedEnd[1].$.name,","    injectedFieldInTo: association.ownedEnd[0].$.name","  };","  if (association.ownedEnd[0].lowerValue[0].$.value !== '0' && association.ownedEnd[0].lowerValue[0].$.value !== undefined) {","    data.isInjectedFieldInFromRequired = true;","  }","  if (association.ownedEnd[1].lowerValue[0].$.value !== '0' && association.ownedEnd[1].lowerValue[0].$.value !== undefined) {","    data.isInjectedFieldInToRequired = true;","  }","  return data;","}","","function getAssociationType(association) {","  if (association.ownedEnd[1].upperValue[0].$.value === '*'","      && association.ownedEnd[0].upperValue[0].$.value === '*') {","    return cardinalities.MANY_TO_MANY;","  } else if (association.ownedEnd[1].upperValue[0].$.value === '*'","      && association.ownedEnd[0].upperValue[0].$.value !== '*') {","    return cardinalities.ONE_TO_MANY;","  } else if (association.ownedEnd[1].upperValue[0].$.value !== '*'","      && association.ownedEnd[0].upperValue[0].$.value === '*') {","    return cardinalities.MANY_TO_ONE;","  }","  return cardinalities.ONE_TO_ONE;","}","","function getAssociationComments(association) {","  var comments = {","    commentInFrom: '',","    commentInTo: ''","  };","  if (association.ownedComment && association.ownedComment[0].body) {","    comments.commentInFrom = association.ownedComment[0].body[0];","    comments.commentInTo = comments.commentInFrom;","  }","  return comments;","}",""],"l":{"3":1,"13":1,"14":1,"15":1,"16":1,"17":1,"19":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"33":1,"34":0,"35":0,"39":0,"40":0,"41":0,"42":0,"48":0,"51":1,"52":0,"55":1,"56":0,"57":0,"58":0,"59":0,"62":0,"63":0,"65":0,"66":0,"68":0,"69":0,"71":0,"72":0,"74":0,"75":0,"81":1,"82":0,"83":0,"87":1,"88":0,"89":0,"96":0,"97":0,"101":0,"104":1,"105":0,"106":0,"110":1,"111":0,"112":0,"115":0,"116":0,"117":0,"119":0,"124":1,"125":0,"126":0,"127":0,"128":0,"129":0,"133":0,"135":0,"138":1,"139":0,"140":0,"144":1,"145":0,"146":0,"148":0,"149":0,"151":0,"152":0,"156":1,"157":0,"158":0,"162":1,"163":0,"164":0,"168":0,"172":0,"174":0,"180":0,"181":0,"183":0,"186":1,"187":0,"188":0,"189":0,"190":0,"194":0,"195":0,"200":1,"201":0,"204":1,"205":0,"210":0,"212":0,"213":0,"214":0,"215":0,"219":0,"221":0,"222":0,"225":0,"226":0,"229":0,"232":1,"233":0,"234":0,"238":1,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"247":1,"248":0,"254":0,"255":0,"257":0,"258":0,"260":0,"263":1,"264":0,"266":0,"267":0,"269":0,"270":0,"272":0,"274":0,"277":1,"278":0,"282":0,"283":0,"284":0,"286":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/editors/parser_factory.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/editors/parser_factory.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"createParser","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":28}}},"2":{"name":"getParserForSingleFile","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":63}}},"3":{"name":"getXMIFileParser","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":64}}},"4":{"name":"readFileContent","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":31}}},"5":{"name":"getRootElement","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":33}}},"6":{"name":"(anonymous_6)","line":64,"loc":{"start":{"line":64,"column":30},"end":{"line":64,"column":53}}},"7":{"name":"initDatabaseTypeHolder","line":78,"loc":{"start":{"line":78,"column":0},"end":{"line":78,"column":50}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":12,"column":71}},"2":{"start":{"line":14,"column":0},"end":{"line":16,"column":2}},"3":{"start":{"line":23,"column":0},"end":{"line":31,"column":1}},"4":{"start":{"line":24,"column":2},"end":{"line":28,"column":3}},"5":{"start":{"line":25,"column":4},"end":{"line":27,"column":57}},"6":{"start":{"line":29,"column":2},"end":{"line":29,"column":56}},"7":{"start":{"line":30,"column":2},"end":{"line":30,"column":73}},"8":{"start":{"line":33,"column":0},"end":{"line":35,"column":1}},"9":{"start":{"line":34,"column":2},"end":{"line":34,"column":57}},"10":{"start":{"line":37,"column":0},"end":{"line":48,"column":1}},"11":{"start":{"line":38,"column":2},"end":{"line":38,"column":51}},"12":{"start":{"line":39,"column":2},"end":{"line":39,"column":51}},"13":{"start":{"line":40,"column":2},"end":{"line":47,"column":4}},"14":{"start":{"line":50,"column":0},"end":{"line":59,"column":1}},"15":{"start":{"line":51,"column":2},"end":{"line":57,"column":3}},"16":{"start":{"line":52,"column":4},"end":{"line":52,"column":31}},"17":{"start":{"line":54,"column":4},"end":{"line":56,"column":77}},"18":{"start":{"line":58,"column":2},"end":{"line":58,"column":40}},"19":{"start":{"line":61,"column":0},"end":{"line":76,"column":1}},"20":{"start":{"line":62,"column":2},"end":{"line":62,"column":11}},"21":{"start":{"line":63,"column":2},"end":{"line":63,"column":35}},"22":{"start":{"line":64,"column":2},"end":{"line":74,"column":5}},"23":{"start":{"line":65,"column":4},"end":{"line":73,"column":5}},"24":{"start":{"line":66,"column":6},"end":{"line":66,"column":33}},"25":{"start":{"line":67,"column":11},"end":{"line":73,"column":5}},"26":{"start":{"line":68,"column":6},"end":{"line":68,"column":47}},"27":{"start":{"line":70,"column":6},"end":{"line":72,"column":64}},"28":{"start":{"line":75,"column":2},"end":{"line":75,"column":14}},"29":{"start":{"line":78,"column":0},"end":{"line":92,"column":1}},"30":{"start":{"line":79,"column":2},"end":{"line":91,"column":3}},"31":{"start":{"line":81,"column":4},"end":{"line":81,"column":26}},"32":{"start":{"line":83,"column":4},"end":{"line":83,"column":30}},"33":{"start":{"line":85,"column":4},"end":{"line":85,"column":32}},"34":{"start":{"line":87,"column":4},"end":{"line":90,"column":40}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":11}},{"start":{"line":24,"column":15},"end":{"line":24,"column":25}},{"start":{"line":24,"column":29},"end":{"line":24,"column":47}}]},"3":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"4":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":11},"end":{"line":67,"column":11}},{"start":{"line":67,"column":11},"end":{"line":67,"column":11}}]},"5":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":2},"end":{"line":81,"column":26}},{"start":{"line":82,"column":2},"end":{"line":83,"column":30}},{"start":{"line":84,"column":2},"end":{"line":85,"column":32}},{"start":{"line":86,"column":2},"end":{"line":90,"column":40}}]}},"code":["'use strict';","","const fs = require('fs'),","    xml2js = require('xml2js'),","    DatabaseTypes = require('jhipster-core').JHipsterDatabaseTypes.Types,","    EditorDetector = require('./editor_detector'),","    Editors = require('./editors'),","    SQLTypes = require('../types/sql_types'),","    MongoDBTypes = require('../types/mongodb_types'),","    CassandraTypes = require('../types/cassandra_types'),","    buildException = require('../exceptions/exception_factory').buildException,","    exceptions = require('../exceptions/exception_factory').exceptions;","","module.exports = {","  createParser: createParser","};","","/**"," * Creates a parser."," * @param args {Object} the arguments: file, files, databaseType, and the noUserManagement flag."," * @return {Parser} the created parser."," */","function createParser(args) {","  if (!args || !args.file || !args.databaseType) {","    throw new buildException(","        exceptions.IllegalArgument,","        'The file and the database type must be passed');","  }","  var types = initDatabaseTypeHolder(args.databaseType);","  return getParserForSingleFile(args.file, types, args.noUserManagement);","}","","function getParserForSingleFile(file, types, noUserManagement) {","  return getXMIFileParser(file, types, noUserManagement);","}","","function getXMIFileParser(file, databaseType, noUserManagement) {","  var root = getRootElement(readFileContent(file));","  var detectedEditor = EditorDetector.detect(root);","  return {","    parser: Editors.Parsers[detectedEditor],","    data: {","      root: root,","      databaseTypes: databaseType,","      noUserManagement: noUserManagement","    }","  };","}","","function readFileContent(file) {","  try {","    fs.statSync(file).isFile();","  } catch (error) {","    throw new buildException(","        exceptions.WrongFile,","        `The passed file '${file}' must exist and must not be a directory.`);","  }","  return fs.readFileSync(file, 'utf-8');","}","","function getRootElement(content) {","  var root;","  var parser = new xml2js.Parser();","  parser.parseString(content, function (err, result) {","    if (result.hasOwnProperty('uml:Model')) {","      root = result['uml:Model'];","    } else if (result.hasOwnProperty('xmi:XMI')) {","      root = result['xmi:XMI']['uml:Model'][0];","    } else {","      throw new buildException(","          exceptions.NoRoot,","          'The passed document has no immediate root element.');","    }","  });","  return root;","}","","function initDatabaseTypeHolder(databaseTypeName) {","  switch (databaseTypeName) {","  case DatabaseTypes.sql:","    return new SQLTypes();","  case DatabaseTypes.mongodb:","    return new MongoDBTypes();","  case DatabaseTypes.cassandra:","    return new CassandraTypes();","  default:","    throw new buildException(exceptions.WrongDatabaseType,","        'The passed database type is incorrect. '","        + \"It must either be 'sql', 'mongodb', or 'cassandra'. \"","        + `Got '${databaseTypeName}'.`);","  }","}",""],"l":{"3":1,"14":1,"23":1,"24":0,"25":0,"29":0,"30":0,"33":1,"34":0,"37":1,"38":0,"39":0,"40":0,"50":1,"51":0,"52":0,"54":0,"58":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"70":0,"75":0,"78":1,"79":0,"81":0,"83":0,"85":0,"87":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/editors/editor_detector.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/editors/editor_detector.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"detect","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":22}}},"2":{"name":"askForEditor","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":8,"column":71}},"2":{"start":{"line":10,"column":0},"end":{"line":12,"column":2}},"3":{"start":{"line":19,"column":0},"end":{"line":40,"column":1}},"4":{"start":{"line":20,"column":2},"end":{"line":23,"column":3}},"5":{"start":{"line":21,"column":4},"end":{"line":22,"column":69}},"6":{"start":{"line":24,"column":2},"end":{"line":31,"column":3}},"7":{"start":{"line":25,"column":4},"end":{"line":25,"column":48}},"8":{"start":{"line":26,"column":4},"end":{"line":26,"column":19}},"9":{"start":{"line":27,"column":9},"end":{"line":31,"column":3}},"10":{"start":{"line":29,"column":4},"end":{"line":29,"column":51}},"11":{"start":{"line":30,"column":4},"end":{"line":30,"column":22}},"12":{"start":{"line":33,"column":2},"end":{"line":38,"column":3}},"13":{"start":{"line":35,"column":4},"end":{"line":37,"column":75}},"14":{"start":{"line":39,"column":2},"end":{"line":39,"column":24}},"15":{"start":{"line":42,"column":0},"end":{"line":57,"column":1}},"16":{"start":{"line":43,"column":2},"end":{"line":43,"column":34}},"17":{"start":{"line":44,"column":2},"end":{"line":47,"column":5}},"18":{"start":{"line":48,"column":2},"end":{"line":51,"column":5}},"19":{"start":{"line":52,"column":2},"end":{"line":55,"column":3}},"20":{"start":{"line":53,"column":4},"end":{"line":54,"column":75}},"21":{"start":{"line":56,"column":2},"end":{"line":56,"column":16}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":23}},{"start":{"line":24,"column":27},"end":{"line":24,"column":69}}]},"4":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":9},"end":{"line":27,"column":9}},{"start":{"line":27,"column":9},"end":{"line":27,"column":9}}]},"5":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":13},"end":{"line":27,"column":30}},{"start":{"line":28,"column":9},"end":{"line":28,"column":55}}]},"6":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"7":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]}},"code":["'use strict';","","const modelio = require('./editors').MODELIO,","    genmymodel = require('./editors').GENMYMODEL,","    UndetectedEditors = require('./editors').UndetectedEditors,","    selectMultipleChoices = require('../helpers/question_asker').selectMultipleChoices,","    buildException = require('../exceptions/exception_factory').buildException,","    exceptions = require('../exceptions/exception_factory').exceptions;","","module.exports = {","  detect: detect","};","","/**"," * Detects the editor that made the document represented by its passed root."," * @param root {Object} the document's root."," * @return {string} the editor's name."," */","function detect(root) {","  if (!root) {","    throw new buildException(","        exceptions.NullPointer, 'The root element can not be null.');","  }","  if (root.eAnnotations && root.eAnnotations[0].$.source === 'Objing') {","    console.info('Parser detected: MODELIO.\\n');","    return modelio;","  } else if (root.eAnnotations","      && root.eAnnotations[0].$.source === 'genmymodel') {","    console.info('Parser detected: GENMYMODEL.\\n');","    return genmymodel;","  }","","  if (UndetectedEditors.length === 0) {","    // this should not be happening","    throw new buildException(exceptions.UndetectedEditor,","        'Your editor has not been detected, and this should not be happening.'","        + '\\nPlease report this issue by mentioning what your editor is.');","  }","  return askForEditor();","}","","function askForEditor() {","  var choices = UndetectedEditors;","  choices.push({","    value: 'ERROR',","    name: \"I don't see my editor.\"","  });","  var choice = selectMultipleChoices({","    choices: choices,","    question: 'Please choose between the available editors:'","  });","  if (choice[0] === 'ERROR') {","    throw new buildException(exceptions.UndetectedEditor,","        'You should report this issue by mentioning what your editor is.');","  }","  return choice;","}",""],"l":{"3":1,"10":1,"19":1,"20":0,"21":0,"24":0,"25":0,"26":0,"27":0,"29":0,"30":0,"33":0,"35":0,"39":0,"42":1,"43":0,"44":0,"48":0,"52":0,"53":0,"56":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/helpers/question_asker.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/helpers/question_asker.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":1,"52":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"askForInput","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":27}}},"2":{"name":"(anonymous_2)","line":52,"loc":{"start":{"line":52,"column":16},"end":{"line":52,"column":32}}},"3":{"name":"(anonymous_3)","line":61,"loc":{"start":{"line":61,"column":9},"end":{"line":61,"column":27}}},"4":{"name":"askConfirmation","line":75,"loc":{"start":{"line":75,"column":0},"end":{"line":75,"column":31}}},"5":{"name":"(anonymous_5)","line":86,"loc":{"start":{"line":86,"column":9},"end":{"line":86,"column":27}}},"6":{"name":"selectSingleChoice","line":100,"loc":{"start":{"line":100,"column":0},"end":{"line":100,"column":34}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":10},"end":{"line":112,"column":28}}},"8":{"name":"selectMultipleChoices","line":126,"loc":{"start":{"line":126,"column":0},"end":{"line":126,"column":37}}},"9":{"name":"(anonymous_9)","line":138,"loc":{"start":{"line":138,"column":10},"end":{"line":138,"column":28}}},"10":{"name":"prepareChoices","line":151,"loc":{"start":{"line":151,"column":0},"end":{"line":151,"column":33}}},"11":{"name":"defaultFilterFunction","line":159,"loc":{"start":{"line":159,"column":0},"end":{"line":159,"column":38}}},"12":{"name":"wait","line":163,"loc":{"start":{"line":163,"column":0},"end":{"line":163,"column":20}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":51}},"2":{"start":{"line":7,"column":0},"end":{"line":12,"column":2}},"3":{"start":{"line":14,"column":0},"end":{"line":37,"column":2}},"4":{"start":{"line":44,"column":0},"end":{"line":68,"column":1}},"5":{"start":{"line":45,"column":2},"end":{"line":45,"column":24}},"6":{"start":{"line":46,"column":2},"end":{"line":46,"column":43}},"7":{"start":{"line":47,"column":2},"end":{"line":63,"column":5}},"8":{"start":{"line":53,"column":8},"end":{"line":53,"column":48}},"9":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"10":{"start":{"line":55,"column":10},"end":{"line":55,"column":22}},"11":{"start":{"line":57,"column":8},"end":{"line":57,"column":101}},"12":{"start":{"line":62,"column":4},"end":{"line":62,"column":30}},"13":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"14":{"start":{"line":65,"column":4},"end":{"line":65,"column":14}},"15":{"start":{"line":67,"column":2},"end":{"line":67,"column":20}},"16":{"start":{"line":75,"column":0},"end":{"line":93,"column":1}},"17":{"start":{"line":76,"column":2},"end":{"line":76,"column":31}},"18":{"start":{"line":77,"column":2},"end":{"line":77,"column":51}},"19":{"start":{"line":78,"column":2},"end":{"line":88,"column":5}},"20":{"start":{"line":87,"column":4},"end":{"line":87,"column":31}},"21":{"start":{"line":89,"column":2},"end":{"line":91,"column":3}},"22":{"start":{"line":90,"column":4},"end":{"line":90,"column":14}},"23":{"start":{"line":92,"column":2},"end":{"line":92,"column":20}},"24":{"start":{"line":100,"column":0},"end":{"line":119,"column":1}},"25":{"start":{"line":101,"column":2},"end":{"line":101,"column":62}},"26":{"start":{"line":102,"column":2},"end":{"line":102,"column":52}},"27":{"start":{"line":103,"column":2},"end":{"line":103,"column":20}},"28":{"start":{"line":104,"column":2},"end":{"line":114,"column":5}},"29":{"start":{"line":113,"column":4},"end":{"line":113,"column":28}},"30":{"start":{"line":115,"column":2},"end":{"line":117,"column":3}},"31":{"start":{"line":116,"column":4},"end":{"line":116,"column":14}},"32":{"start":{"line":118,"column":2},"end":{"line":118,"column":16}},"33":{"start":{"line":126,"column":0},"end":{"line":149,"column":1}},"34":{"start":{"line":127,"column":2},"end":{"line":127,"column":62}},"35":{"start":{"line":128,"column":2},"end":{"line":128,"column":54}},"36":{"start":{"line":129,"column":2},"end":{"line":129,"column":20}},"37":{"start":{"line":130,"column":2},"end":{"line":144,"column":5}},"38":{"start":{"line":139,"column":4},"end":{"line":143,"column":5}},"39":{"start":{"line":140,"column":6},"end":{"line":140,"column":32}},"40":{"start":{"line":142,"column":6},"end":{"line":142,"column":30}},"41":{"start":{"line":145,"column":2},"end":{"line":147,"column":3}},"42":{"start":{"line":146,"column":4},"end":{"line":146,"column":14}},"43":{"start":{"line":148,"column":2},"end":{"line":148,"column":16}},"44":{"start":{"line":151,"column":0},"end":{"line":157,"column":1}},"45":{"start":{"line":152,"column":2},"end":{"line":152,"column":19}},"46":{"start":{"line":153,"column":2},"end":{"line":155,"column":3}},"47":{"start":{"line":154,"column":4},"end":{"line":154,"column":40}},"48":{"start":{"line":156,"column":2},"end":{"line":156,"column":17}},"49":{"start":{"line":159,"column":0},"end":{"line":161,"column":1}},"50":{"start":{"line":160,"column":2},"end":{"line":160,"column":15}},"51":{"start":{"line":163,"column":0},"end":{"line":165,"column":1}},"52":{"start":{"line":164,"column":2},"end":{"line":164,"column":22}}},"branchMap":{"1":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":8}},{"start":{"line":54,"column":8},"end":{"line":54,"column":8}}]},"2":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":17},"end":{"line":101,"column":29}},{"start":{"line":101,"column":33},"end":{"line":101,"column":61}}]},"3":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":17},"end":{"line":127,"column":29}},{"start":{"line":127,"column":33},"end":{"line":127,"column":61}}]},"4":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":139,"column":4}},{"start":{"line":139,"column":4},"end":{"line":139,"column":4}}]}},"code":["'use strict';","","const inquirer = require('inquirer'),","    deasync = require('deasync'),","    merge = require('../utils/object_utils').merge;","","module.exports = {","  askConfirmation: askConfirmation,","  selectMultipleChoices: selectMultipleChoices,","  selectSingleChoice: selectSingleChoice,","  askForInput: askForInput","};","","const DEFAULTS = {","  QUESTION_TYPES: {","    CHECKBOX: 'checkbox',","    LIST: 'list',","    CONFIRM: 'confirm',","    INPUT: 'input'","  },","  CONFIRMATIONS: {","    question: 'Confirm?',","    'default': true","  },","  SINGLE_CHOICES: {","    name: 'answer',","    question: 'Choose one among:'","  },","  MULTIPLE_CHOICES: {","    name: 'answer',","    question: 'Choose as many as you want among:'","  },","  INPUT: {","    question: 'Enter the value:'","  },","  NOTHING: []","};","","/**"," * Asks the user for an input."," * @param args {object} keys: question"," * @return {string} the user's answer."," */","function askForInput(args) {","  var userAnswer = null;","  var merged = merge(DEFAULTS.INPUT, args);","  inquirer.prompt([","    {","      type: DEFAULTS.QUESTION_TYPES.INPUT,","      name: 'value',","      message: merged.question,","      validate: function(value) {","        var pass = value.match(/^[A-z0-9-_]+$/);","        if (pass) {","          return true;","        }","        return \"The passed value is invalid, only alphabetical characters, '-' and '_' are allowed.\";","      }","    }","  ]","  ).then(function (answer) {","    userAnswer = answer.value;","  });","  while (!userAnswer) {","    wait(100);","  }","  return userAnswer;","}","","/**"," * Asks the user for confirmation."," * @param args {object} keys: question, defaultValue"," * @return {boolean} the user's answer."," */","function askConfirmation(args) {","  var userAnswer = 'no-answer';","  var merged = merge(DEFAULTS.CONFIRMATIONS, args);","  inquirer.prompt([","    {","      type: DEFAULTS.QUESTION_TYPES.CONFIRM,","      name: 'choice',","      message: merged.question,","      'default': merged.defaultValue","    }","  ]","  ).then(function (answer) {","    userAnswer = answer.choice;","  });","  while (userAnswer === 'no-answer') {","    wait(100);","  }","  return userAnswer;","}","","/**"," * Asks the user for a choice."," * @param args {object} keys: classes, choices, question, filterFunction"," * @return the choice."," */","function selectSingleChoice(args) {","  args.choices = args.choices || prepareChoices(args.classes);","  var merged = merge(DEFAULTS.SINGLE_CHOICES, args);","  var result = null;","  inquirer.prompt([","    {","      type: DEFAULTS.QUESTION_TYPES.LIST,","      name: 'answer',","      message: merged.question,","      choices: merged.choices,","      filter: merged.filterFunction","    }","  ]).then(function(answers) {","    result = answers.answer;","  });","  while (!result) {","    wait(100);","  }","  return result;","}","","/**"," * Asks the user for one, or more choices."," * @param args {object} keys: classes, choices, question, filterFunction"," * @return the choice."," */","function selectMultipleChoices(args) {","  args.choices = args.choices || prepareChoices(args.classes);","  var merged = merge(DEFAULTS.MULTIPLE_CHOICES, args);","  var result = null;","  inquirer.prompt([","    {","      type: DEFAULTS.QUESTION_TYPES.CHECKBOX,","      name: 'answer',","      message: merged.question,","      choices: merged.choices,","      filter: merged.filterFunction","    }","  ]).then(function(answers) {","    if (answers.answer.toString().length === 0) {","      result = DEFAULTS.NOTHING;","    } else {","      result = answers.answer;","    }","  });","  while (!result) {","    wait(100);","  }","  return result;","}","","function prepareChoices(classes) {","  var choices = [];","  for (let classId in classes) {","    choices.push(classes[classId].name);","  }","  return choices;","}","","function defaultFilterFunction(value) {","  return value;","}","","function wait(time) {","  deasync.sleep(time);","}",""],"l":{"3":1,"7":1,"14":1,"44":1,"45":0,"46":0,"47":0,"53":0,"54":0,"55":0,"57":0,"62":0,"64":0,"65":0,"67":0,"75":1,"76":0,"77":0,"78":0,"87":0,"89":0,"90":0,"92":0,"100":1,"101":0,"102":0,"103":0,"104":0,"113":0,"115":0,"116":0,"118":0,"126":1,"127":0,"128":0,"129":0,"130":0,"139":0,"140":0,"142":0,"145":0,"146":0,"148":0,"151":1,"152":0,"153":0,"154":0,"156":0,"159":1,"160":0,"163":1,"164":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/types/sql_types.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/types/sql_types.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":1,"7":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":32},"end":{"line":10,"column":44}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":29},"end":{"line":33,"column":41}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":67}},"2":{"start":{"line":10,"column":0},"end":{"line":27,"column":2}},"3":{"start":{"line":11,"column":2},"end":{"line":26,"column":4}},"4":{"start":{"line":30,"column":0},"end":{"line":30,"column":66}},"5":{"start":{"line":31,"column":0},"end":{"line":31,"column":53}},"6":{"start":{"line":33,"column":0},"end":{"line":35,"column":2}},"7":{"start":{"line":34,"column":2},"end":{"line":34,"column":13}}},"branchMap":{},"code":["'use strict';","","const AbstractMappedTypes = require('./abstract_mapped_types'),","    sql = require('jhipster-core').JHipsterDatabaseTypes.Types.sql;","","/**"," * This class extends the Types interface to provide the SQL types supported"," * by JHipster (for MySQL, PostgreSQL, H2)."," */","var SQLTypes = module.exports = function () {","  this.types = {","    String: ['required', 'minlength', 'maxlength', 'pattern'],","    Integer: ['required', 'min', 'max'],","    Long: ['required', 'min', 'max'],","    BigDecimal: ['required', 'min', 'max'],","    LocalDate: ['required'],","    ZonedDateTime: ['required'],","    Boolean: ['required'],","    Enum: ['required'],","    Blob: ['required', 'minbytes', 'maxbytes'],","    AnyBlob: ['required', 'minbytes', 'maxbytes'],","    ImageBlob: ['required', 'minbytes', 'maxbytes'],","    TextBlob: ['required', 'minbytes', 'maxbytes'],","    Float: ['required', 'min', 'max'],","    Double: ['required', 'min', 'max']","  };","};","","// inheritance stuff","SQLTypes.prototype = Object.create(AbstractMappedTypes.prototype);","SQLTypes.prototype.constructor = AbstractMappedTypes;","","SQLTypes.prototype.getName = function () {","  return sql;","};",""],"l":{"3":1,"10":1,"11":0,"30":1,"31":1,"33":1,"34":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/types/abstract_mapped_types.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/types/abstract_mapped_types.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":0,"9":0,"10":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":43},"end":{"line":7,"column":55}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":41},"end":{"line":17,"column":53}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":54},"end":{"line":24,"column":70}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":71}},"2":{"start":{"line":7,"column":0},"end":{"line":8,"column":2}},"3":{"start":{"line":11,"column":0},"end":{"line":11,"column":63}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":50}},"5":{"start":{"line":17,"column":0},"end":{"line":19,"column":2}},"6":{"start":{"line":18,"column":2},"end":{"line":18,"column":33}},"7":{"start":{"line":24,"column":0},"end":{"line":31,"column":2}},"8":{"start":{"line":25,"column":2},"end":{"line":29,"column":3}},"9":{"start":{"line":26,"column":4},"end":{"line":28,"column":55}},"10":{"start":{"line":30,"column":2},"end":{"line":30,"column":26}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]}},"code":["'use strict';","","const Types = require('./types'),","    buildException = require('../exceptions/exception_factory').buildException,","    exceptions = require('../exceptions/exception_factory').exceptions;","","var AbstractMappedTypes = module.exports = function () {","};","","// inheritance stuff","AbstractMappedTypes.prototype = Object.create(Types.prototype);","AbstractMappedTypes.prototype.constructor = Types;","","/**"," * Method implementation from Type."," */","AbstractMappedTypes.prototype.getTypes = function () {","  return Object.keys(this.types);","};","","/**"," * Method implementation from Type."," */","AbstractMappedTypes.prototype.getValidationsForType = function (type) {","  if (!this.contains(type)) {","    throw new buildException(","        exceptions.WrongDatabaseType,","        `The passed type '${type}' is not supported.`);","  }","  return this.types[type];","};",""],"l":{"3":1,"7":1,"11":1,"12":1,"17":1,"18":0,"24":1,"25":0,"26":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/types/types.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/types/types.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":1,"17":0,"18":1,"19":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":29},"end":{"line":9,"column":41}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":27},"end":{"line":19,"column":39}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":40},"end":{"line":34,"column":56}}},"4":{"name":"(anonymous_4)","line":47,"loc":{"start":{"line":47,"column":41},"end":{"line":47,"column":53}}},"5":{"name":"(anonymous_5)","line":66,"loc":{"start":{"line":66,"column":27},"end":{"line":66,"column":43}}},"6":{"name":"(anonymous_6)","line":77,"loc":{"start":{"line":77,"column":47},"end":{"line":77,"column":75}}},"7":{"name":"(anonymous_7)","line":81,"loc":{"start":{"line":81,"column":26},"end":{"line":81,"column":38}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":71}},"2":{"start":{"line":9,"column":0},"end":{"line":10,"column":2}},"3":{"start":{"line":19,"column":0},"end":{"line":23,"column":2}},"4":{"start":{"line":20,"column":2},"end":{"line":22,"column":69}},"5":{"start":{"line":34,"column":0},"end":{"line":38,"column":2}},"6":{"start":{"line":35,"column":2},"end":{"line":37,"column":69}},"7":{"start":{"line":47,"column":0},"end":{"line":59,"column":2}},"8":{"start":{"line":48,"column":2},"end":{"line":48,"column":17}},"9":{"start":{"line":49,"column":2},"end":{"line":57,"column":3}},"10":{"start":{"line":50,"column":4},"end":{"line":56,"column":5}},"11":{"start":{"line":51,"column":6},"end":{"line":54,"column":8}},"12":{"start":{"line":55,"column":6},"end":{"line":55,"column":25}},"13":{"start":{"line":58,"column":2},"end":{"line":58,"column":15}},"14":{"start":{"line":66,"column":0},"end":{"line":68,"column":2}},"15":{"start":{"line":67,"column":2},"end":{"line":67,"column":46}},"16":{"start":{"line":77,"column":0},"end":{"line":79,"column":2}},"17":{"start":{"line":78,"column":2},"end":{"line":78,"column":69}},"18":{"start":{"line":81,"column":0},"end":{"line":85,"column":2}},"19":{"start":{"line":82,"column":2},"end":{"line":84,"column":69}}},"branchMap":{"1":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]}},"code":["'use strict';","","const buildException = require('../exceptions/exception_factory').buildException,","    exceptions = require('../exceptions/exception_factory').exceptions;","","/**"," * This interface provides base methods for handling the types."," */","var Types = module.exports = function () {","};","","/**"," * Must be implemented by subclasses."," * Returns the type list."," * @return {Array} the type list."," * @throws UnimplementedOperationException if the method has not been"," *                                         implemented by the subclass."," */","Types.prototype.getTypes = function () {","  throw new buildException(","      exceptions.UnimplementedOperation,","      'This method must be implemented by a subclass to be called.');","};","","/**"," * Must be implemented by subclasses."," * Returns the validations for the passed type."," * @param type {string} the type."," * @return {Array} the validation list."," * @throws UnimplementedOperationException if the method has not been"," *                                         implemented by the subclass."," * @throws NoElementFoundException if no type exists for the passed type."," */","Types.prototype.getValidationsForType = function (type) {","  throw new buildException(","      exceptions.UnimplementedOperation,","      'This method must be implemented by a subclass to be called.');","};","","/**"," * This method converts the internal type map into another array."," * Each element is an Object which has a name, and a value."," * By default, the name and the value keys have the same value:"," * [ { name: '1', value: '1' }, { name: '2', value: '2' }, ... ]"," * @return {Array} the new array."," */","Types.prototype.toValueNameObjectArray = function () {","  var array = [];","  for (let key in this.getTypes()) {","    if (this.getTypes().hasOwnProperty(key)) {","      let object = {","        value: this.getTypes()[key],","        name: this.getTypes()[key]","      };","      array.push(object);","    }","  }","  return array;","};","","/**"," * Checks whether the type is contained in the supported types."," * @param {string} type the type to check."," * @return {boolean} whether the type is contained in the supported types."," */","Types.prototype.contains = function (type) {","  return this.getTypes().indexOf(type) !== -1;","};","","/**"," * Checks whether the type possesses the also passed validation."," * @param type {string} the type."," * @param validation {string} the validation to check."," * @return {boolean} whether the type is validated by the validation."," * @throws NoElementFoundException if no type exists for the passed type."," */","Types.prototype.isValidationSupportedForType = function (type, validation) {","  return this.getValidationsForType(type).indexOf(validation) !== -1;","};","","Types.prototype.getName = function () {","  throw new buildException(","      exceptions.UnimplementedOperation,","      'This method must be implemented by a subclass to be called.');","};"],"l":{"3":1,"9":1,"19":1,"20":0,"34":1,"35":0,"47":1,"48":0,"49":0,"50":0,"51":0,"55":0,"58":0,"66":1,"67":0,"77":1,"78":0,"81":1,"82":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/types/mongodb_types.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/types/mongodb_types.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":1,"7":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":36},"end":{"line":10,"column":48}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":33},"end":{"line":33,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":75}},"2":{"start":{"line":10,"column":0},"end":{"line":27,"column":2}},"3":{"start":{"line":11,"column":2},"end":{"line":26,"column":4}},"4":{"start":{"line":30,"column":0},"end":{"line":30,"column":70}},"5":{"start":{"line":31,"column":0},"end":{"line":31,"column":57}},"6":{"start":{"line":33,"column":0},"end":{"line":35,"column":2}},"7":{"start":{"line":34,"column":2},"end":{"line":34,"column":17}}},"branchMap":{},"code":["'use strict';","","const AbstractMappedTypes = require('./abstract_mapped_types'),","    mongodb = require('jhipster-core').JHipsterDatabaseTypes.Types.mongodb;","","/**"," * This class extends the Types interface to provide the MongoDB types"," * supported by JHipster."," */","var MongoDBTypes = module.exports = function () {","  this.types = {","    String: ['required', 'minlength', 'maxlength', 'pattern'],","    Integer: ['required', 'min', 'max'],","    Long: ['required', 'min', 'max'],","    BigDecimal: ['required', 'min', 'max'],","    LocalDate: ['required'],","    ZonedDateTime: ['required'],","    Boolean: ['required'],","    Enum: ['required'],","    Blob: ['required', 'minbytes', 'maxbytes'],","    AnyBlob: ['required', 'minbytes', 'maxbytes'],","    ImageBlob: ['required', 'minbytes', 'maxbytes'],","    TextBlob: ['required', 'minbytes', 'maxbytes'],","    Float: ['required', 'min', 'max'],","    Double: ['required', 'min', 'max']","  };","};","","// inheritance stuff","MongoDBTypes.prototype = Object.create(AbstractMappedTypes.prototype);","MongoDBTypes.prototype.constructor = AbstractMappedTypes;","","MongoDBTypes.prototype.getName = function () {","  return mongodb;","};",""],"l":{"3":1,"10":1,"11":0,"30":1,"31":1,"33":1,"34":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/types/cassandra_types.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/types/cassandra_types.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":1,"7":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":38},"end":{"line":10,"column":50}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":35},"end":{"line":28,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":79}},"2":{"start":{"line":10,"column":0},"end":{"line":22,"column":2}},"3":{"start":{"line":11,"column":2},"end":{"line":21,"column":4}},"4":{"start":{"line":25,"column":0},"end":{"line":25,"column":72}},"5":{"start":{"line":26,"column":0},"end":{"line":26,"column":59}},"6":{"start":{"line":28,"column":0},"end":{"line":30,"column":2}},"7":{"start":{"line":29,"column":2},"end":{"line":29,"column":19}}},"branchMap":{},"code":["'use strict';","","const AbstractMappedTypes = require('./abstract_mapped_types'),","    cassandra = require('jhipster-core').JHipsterDatabaseTypes.Types.cassandra;","","/**"," * This class extends the Types interface to provide the Cassandra types"," * supported by JHipster."," */","var CassandraTypes = module.exports = function () {","  this.types = {","    UUID: ['required'],","    String: ['required', 'minlength', 'maxlength', 'pattern'],","    Integer: ['required', 'min', 'max'],","    Long: ['required', 'min', 'max'],","    BigDecimal: ['required', 'min', 'max'],","    Date: ['required'],","    Boolean: ['required'],","    Float: ['required', 'min', 'max'],","    Double: ['required', 'min', 'max']","  };","};","","// inheritance stuff","CassandraTypes.prototype = Object.create(AbstractMappedTypes.prototype);","CassandraTypes.prototype.constructor = AbstractMappedTypes;","","CassandraTypes.prototype.getName = function () {","  return cassandra;","};",""],"l":{"3":1,"10":1,"11":0,"25":1,"26":1,"28":1,"29":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/entity_generator.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/entity_generator.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"displayEntitiesToGenerate","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":87}}},"2":{"name":"generateEntities","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":87}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":73}},"2":{"start":{"line":7,"column":0},"end":{"line":9,"column":2}},"3":{"start":{"line":11,"column":0},"end":{"line":18,"column":1}},"4":{"start":{"line":12,"column":2},"end":{"line":12,"column":41}},"5":{"start":{"line":13,"column":2},"end":{"line":17,"column":3}},"6":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"7":{"start":{"line":15,"column":6},"end":{"line":15,"column":76}},"8":{"start":{"line":36,"column":0},"end":{"line":81,"column":1}},"9":{"start":{"line":37,"column":2},"end":{"line":41,"column":3}},"10":{"start":{"line":39,"column":4},"end":{"line":39,"column":51}},"11":{"start":{"line":40,"column":4},"end":{"line":40,"column":11}},"12":{"start":{"line":43,"column":2},"end":{"line":43,"column":80}},"13":{"start":{"line":45,"column":2},"end":{"line":80,"column":3}},"14":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"15":{"start":{"line":47,"column":6},"end":{"line":47,"column":15}},"16":{"start":{"line":49,"column":4},"end":{"line":50,"column":54}},"17":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"18":{"start":{"line":52,"column":6},"end":{"line":52,"column":22}},"19":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"20":{"start":{"line":55,"column":6},"end":{"line":55,"column":27}},"21":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"22":{"start":{"line":58,"column":6},"end":{"line":58,"column":27}},"23":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"24":{"start":{"line":61,"column":6},"end":{"line":61,"column":32}},"25":{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},"26":{"start":{"line":64,"column":6},"end":{"line":64,"column":87}},"27":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"28":{"start":{"line":67,"column":6},"end":{"line":67,"column":35}},"29":{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},"30":{"start":{"line":71,"column":6},"end":{"line":71,"column":28}},"31":{"start":{"line":73,"column":4},"end":{"line":73,"column":32}},"32":{"start":{"line":74,"column":4},"end":{"line":78,"column":6}},"33":{"start":{"line":79,"column":4},"end":{"line":79,"column":23}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]},"2":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"3":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":37}},{"start":{"line":37,"column":41},"end":{"line":37,"column":75}},{"start":{"line":38,"column":9},"end":{"line":38,"column":29}}]},"4":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"5":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"6":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"7":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"8":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"9":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"10":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]},"11":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]}},"code":["'use strict';","","const chalk = require('chalk'),","    child_process = require('child_process'),","    JHipsterCommandBuilder = require('./utils/jhipster_command_builder');","","module.exports = {","  generateEntities: generateEntities","};","","function displayEntitiesToGenerate(entityNamesToGenerate, entitiesToGenerate, classes) {","  console.info(chalk.green('Creating:'));","  for (let i = 0; i < entitiesToGenerate.length; i ++) {","    if (entityNamesToGenerate.indexOf(classes[entitiesToGenerate[i]].name) !== -1) {","      console.info(chalk.green(`\\t${classes[entitiesToGenerate[i]].name}`));","    }","  }","}","","/**"," * Generates the entities locally by using JHipster to create the JSON files, and"," * generate the different output files."," * @param entitiesToGenerate {array<String>} the entities to generate."," * @param classes {object} the classes to add."," * @param entityNamesToGenerate {array} the names of the entities to generate."," * @param options {object} an object containing:"," *  - force {boolean} the force flag."," *  - listOfNoClient {array} the array containing the classes that won't"," *                               have any client code."," *  - listOfNoServer {array} the array containing the classes that won't"," *                               have any server code."," *  - angularSuffixes {object} the angular suffixes for each entity."," *  - noFluentMethods {array} the array containing the classes that won't"," *                                have fluent methods."," */","function generateEntities(entitiesToGenerate, classes, entityNamesToGenerate, options) {","  if (entitiesToGenerate.length === 0 || entityNamesToGenerate.length === 0","      || classes.length === 0) {","    console.info('No entity has to be generated.');","    return;","  }","","  displayEntitiesToGenerate(entityNamesToGenerate, entitiesToGenerate, classes);","","  for (let i = 0; i < entitiesToGenerate.length; i ++) {","    if (entityNamesToGenerate.indexOf(classes[entitiesToGenerate[i]].name) === -1) {","      continue;","    }","    let builder = new JHipsterCommandBuilder()","      .className(classes[entitiesToGenerate[i]].name);","    if (options.force) {","      builder.force();","    }","    if (options.listOfNoClient.indexOf(classes[entitiesToGenerate[i]].name) !== -1) {","      builder.skipClient();","    }","    if (options.listOfNoServer.indexOf(classes[entitiesToGenerate[i]].name) !== -1) {","      builder.skipServer();","    }","    if (options.noFluentMethods.indexOf(classes[entitiesToGenerate[i]].name) !== -1) {","      builder.noFluentMethods();","    }","    if (options.angularSuffixes[classes[entitiesToGenerate[i]].name]) {","      builder.angularSuffix(`${angularSuffixes[classes[entitiesToGenerate[i]].name]}`);","    }","    if (options.noUserManagement) {","      builder.skipUserManagement();","    }","    // Run gulp inject just at the end to speed entity creation","    if (i !== entitiesToGenerate.length - 1) {","      builder.skipInstall();","    }","    let built = builder.build();","    child_process.spawnSync(","      built.command,","      built.args,","      { stdio: built.stdio }","    );","    console.info('\\n');","  }","}",""],"l":{"3":1,"7":1,"11":1,"12":0,"13":0,"14":0,"15":0,"36":1,"37":0,"39":0,"40":0,"43":0,"45":0,"46":0,"47":0,"49":0,"51":0,"52":0,"54":0,"55":0,"57":0,"58":0,"60":0,"61":0,"63":0,"64":0,"66":0,"67":0,"70":0,"71":0,"73":0,"74":0,"79":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/utils/jhipster_command_builder.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/utils/jhipster_command_builder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":1,"30":0,"31":1,"32":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":13},"end":{"line":9,"column":16}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":11},"end":{"line":15,"column":33}}},"3":{"name":"(anonymous_3)","line":22,"loc":{"start":{"line":22,"column":7},"end":{"line":22,"column":10}}},"4":{"name":"(anonymous_4)","line":26,"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":15}}},"5":{"name":"(anonymous_5)","line":30,"loc":{"start":{"line":30,"column":12},"end":{"line":30,"column":15}}},"6":{"name":"(anonymous_6)","line":34,"loc":{"start":{"line":34,"column":17},"end":{"line":34,"column":20}}},"7":{"name":"(anonymous_7)","line":38,"loc":{"start":{"line":38,"column":15},"end":{"line":38,"column":31}}},"8":{"name":"(anonymous_8)","line":43,"loc":{"start":{"line":43,"column":20},"end":{"line":43,"column":23}}},"9":{"name":"(anonymous_9)","line":47,"loc":{"start":{"line":47,"column":13},"end":{"line":47,"column":16}}},"10":{"name":"(anonymous_10)","line":51,"loc":{"start":{"line":51,"column":7},"end":{"line":51,"column":10}}},"11":{"name":"getCommand","line":65,"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":22}}},"12":{"name":"getFirstArgs","line":69,"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":71}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":50}},"3":{"start":{"line":10,"column":4},"end":{"line":10,"column":19}},"4":{"start":{"line":11,"column":4},"end":{"line":11,"column":67}},"5":{"start":{"line":12,"column":4},"end":{"line":12,"column":36}},"6":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"7":{"start":{"line":17,"column":6},"end":{"line":17,"column":92}},"8":{"start":{"line":19,"column":4},"end":{"line":19,"column":51}},"9":{"start":{"line":20,"column":4},"end":{"line":20,"column":16}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":30}},"11":{"start":{"line":24,"column":4},"end":{"line":24,"column":16}},"12":{"start":{"line":27,"column":4},"end":{"line":27,"column":36}},"13":{"start":{"line":28,"column":4},"end":{"line":28,"column":16}},"14":{"start":{"line":31,"column":4},"end":{"line":31,"column":36}},"15":{"start":{"line":32,"column":4},"end":{"line":32,"column":16}},"16":{"start":{"line":35,"column":4},"end":{"line":35,"column":42}},"17":{"start":{"line":36,"column":4},"end":{"line":36,"column":16}},"18":{"start":{"line":39,"column":4},"end":{"line":39,"column":39}},"19":{"start":{"line":40,"column":4},"end":{"line":40,"column":34}},"20":{"start":{"line":41,"column":4},"end":{"line":41,"column":16}},"21":{"start":{"line":44,"column":4},"end":{"line":44,"column":45}},"22":{"start":{"line":45,"column":4},"end":{"line":45,"column":16}},"23":{"start":{"line":48,"column":4},"end":{"line":48,"column":37}},"24":{"start":{"line":49,"column":4},"end":{"line":49,"column":16}},"25":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"26":{"start":{"line":53,"column":6},"end":{"line":53,"column":116}},"27":{"start":{"line":55,"column":4},"end":{"line":59,"column":6}},"28":{"start":{"line":63,"column":0},"end":{"line":63,"column":40}},"29":{"start":{"line":65,"column":0},"end":{"line":67,"column":1}},"30":{"start":{"line":66,"column":2},"end":{"line":66,"column":66}},"31":{"start":{"line":69,"column":0},"end":{"line":72,"column":1}},"32":{"start":{"line":70,"column":2},"end":{"line":71,"column":33}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":8},"end":{"line":16,"column":28}},{"start":{"line":16,"column":32},"end":{"line":16,"column":64}}]},"3":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"4":{"line":66,"type":"cond-expr","locations":[{"start":{"line":66,"column":25},"end":{"line":66,"column":57}},{"start":{"line":66,"column":61},"end":{"line":66,"column":65}}]},"5":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":25},"end":{"line":66,"column":44}},{"start":{"line":66,"column":48},"end":{"line":66,"column":57}}]},"6":{"line":70,"type":"cond-expr","locations":[{"start":{"line":70,"column":25},"end":{"line":70,"column":61}},{"start":{"line":70,"column":64},"end":{"line":70,"column":85}}]}},"code":["'use strict';","","const buildException = require('../exceptions/exception_factory').buildException,","    exceptions = require('../exceptions/exception_factory').exceptions;","","const WIN_PLATFORM = process.platform === 'win32';","","class JHipsterCommandBuilder {","  constructor() {","    this.args = [];","    this.stdio = [ process.stdin, process.stdout, process.stderr ];","    this.classNameToGenerate = null;","  }","","  className(classNameToGenerate) {","    if (!classNameToGenerate || classNameToGenerate.length === 0) {","      throw new buildException(exceptions.IllegalArgument, 'The class name must be valid.');","    }","    this.classNameToGenerate = classNameToGenerate;","    return this;","  };","  force() {","    this.args.push('--force');","    return this;","  };","  skipClient() {","    this.args.push('--skip-client');","    return this;","  };","  skipServer() {","    this.args.push('--skip-server');","    return this;","  }","  noFluentMethods() {","    this.args.push('--no-fluent-methods');","    return this;","  };","  angularSuffix(angularSuffix) {","    this.args.push('--angular-suffix');","    this.args.push(angularSuffix);","    return this;","  };","  skipUserManagement() {","    this.args.push('--skip-user-management');","    return this;","  }","  skipInstall() {","    this.args.push('--skip-install');","    return this;","  }","  build() {","    if (!this.classNameToGenerate) {","      throw new buildException(exceptions.IllegalState, 'A class name must be passed in order to build a command.');","    }","    return {","      command: getCommand(),","      args: getFirstArgs(this.classNameToGenerate).concat(this.args).concat('--regenerate'),","      stdio: this.stdio","    };","  }","}","","module.exports = JHipsterCommandBuilder;","","function getCommand() {","  return WIN_PLATFORM ? (process.env.comspec || 'cmd.exe') : 'yo';","}","","function getFirstArgs(classNameToGenerate) {","  return (WIN_PLATFORM ? [ '/s', '/c', 'yo jhipster:entity' ] : [ 'jhipster:entity' ])","    .concat(classNameToGenerate);","}",""],"l":{"3":1,"6":1,"10":0,"11":0,"12":0,"16":0,"17":0,"19":0,"20":0,"23":0,"24":0,"27":0,"28":0,"31":0,"32":0,"35":0,"36":0,"39":0,"40":0,"41":0,"44":0,"45":0,"48":0,"49":0,"52":0,"53":0,"55":0,"63":1,"65":1,"66":0,"69":1,"70":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/entitiescreator.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/entitiescreator.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":1,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":1,"146":0,"147":0,"148":0,"149":1,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":1,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"createEntities","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":60}}},"2":{"name":"init","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":59}}},"3":{"name":"checkNoSQLModeling","line":69,"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":30}}},"4":{"name":"initializeEntities","line":76,"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":30}}},"5":{"name":"getChangelogDate","line":103,"loc":{"start":{"line":103,"column":0},"end":{"line":103,"column":46}}},"6":{"name":"dateFormatForLiquibase","line":110,"loc":{"start":{"line":110,"column":0},"end":{"line":110,"column":43}}},"7":{"name":"setOptions","line":143,"loc":{"start":{"line":143,"column":0},"end":{"line":143,"column":40}}},"8":{"name":"defaults","line":162,"loc":{"start":{"line":162,"column":0},"end":{"line":162,"column":20}}},"9":{"name":"fillEntities","line":172,"loc":{"start":{"line":172,"column":0},"end":{"line":172,"column":24}}},"10":{"name":"setFieldsOfEntity","line":196,"loc":{"start":{"line":196,"column":0},"end":{"line":196,"column":36}}},"11":{"name":"setValidationsOfField","line":236,"loc":{"start":{"line":236,"column":0},"end":{"line":236,"column":47}}},"12":{"name":"getRelatedAssociations","line":251,"loc":{"start":{"line":251,"column":0},"end":{"line":251,"column":55}}},"13":{"name":"extractField","line":274,"loc":{"start":{"line":274,"column":0},"end":{"line":274,"column":29}}},"14":{"name":"setRelationshipOfEntity","line":289,"loc":{"start":{"line":289,"column":0},"end":{"line":289,"column":42}}},"15":{"name":"setSourceAssociationsForClass","line":297,"loc":{"start":{"line":297,"column":0},"end":{"line":297,"column":69}}},"16":{"name":"setDestinationAssociationsForClass","line":366,"loc":{"start":{"line":366,"column":0},"end":{"line":366,"column":74}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":12,"column":70}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":20}},"3":{"start":{"line":16,"column":0},"end":{"line":16,"column":23}},"4":{"start":{"line":17,"column":0},"end":{"line":17,"column":12}},"5":{"start":{"line":18,"column":0},"end":{"line":18,"column":19}},"6":{"start":{"line":19,"column":0},"end":{"line":19,"column":16}},"7":{"start":{"line":20,"column":0},"end":{"line":20,"column":22}},"8":{"start":{"line":21,"column":0},"end":{"line":21,"column":13}},"9":{"start":{"line":22,"column":0},"end":{"line":22,"column":19}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":18}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":18}},"12":{"start":{"line":25,"column":0},"end":{"line":25,"column":15}},"13":{"start":{"line":26,"column":0},"end":{"line":26,"column":21}},"14":{"start":{"line":28,"column":0},"end":{"line":38,"column":2}},"15":{"start":{"line":40,"column":0},"end":{"line":53,"column":1}},"16":{"start":{"line":41,"column":2},"end":{"line":41,"column":42}},"17":{"start":{"line":42,"column":2},"end":{"line":46,"column":3}},"18":{"start":{"line":43,"column":4},"end":{"line":45,"column":61}},"19":{"start":{"line":47,"column":2},"end":{"line":47,"column":42}},"20":{"start":{"line":48,"column":2},"end":{"line":48,"column":23}},"21":{"start":{"line":49,"column":2},"end":{"line":49,"column":56}},"22":{"start":{"line":50,"column":2},"end":{"line":50,"column":23}},"23":{"start":{"line":51,"column":2},"end":{"line":51,"column":17}},"24":{"start":{"line":52,"column":2},"end":{"line":52,"column":18}},"25":{"start":{"line":55,"column":0},"end":{"line":67,"column":1}},"26":{"start":{"line":56,"column":2},"end":{"line":56,"column":26}},"27":{"start":{"line":57,"column":2},"end":{"line":57,"column":25}},"28":{"start":{"line":58,"column":2},"end":{"line":58,"column":39}},"29":{"start":{"line":59,"column":2},"end":{"line":59,"column":33}},"30":{"start":{"line":60,"column":2},"end":{"line":60,"column":45}},"31":{"start":{"line":61,"column":2},"end":{"line":61,"column":37}},"32":{"start":{"line":62,"column":2},"end":{"line":62,"column":38}},"33":{"start":{"line":63,"column":2},"end":{"line":63,"column":32}},"34":{"start":{"line":64,"column":2},"end":{"line":64,"column":16}},"35":{"start":{"line":65,"column":2},"end":{"line":65,"column":22}},"36":{"start":{"line":66,"column":2},"end":{"line":66,"column":43}},"37":{"start":{"line":69,"column":0},"end":{"line":74,"column":1}},"38":{"start":{"line":70,"column":2},"end":{"line":73,"column":3}},"39":{"start":{"line":71,"column":4},"end":{"line":72,"column":78}},"40":{"start":{"line":76,"column":0},"end":{"line":101,"column":1}},"41":{"start":{"line":77,"column":2},"end":{"line":77,"column":16}},"42":{"start":{"line":78,"column":2},"end":{"line":100,"column":3}},"43":{"start":{"line":79,"column":4},"end":{"line":99,"column":5}},"44":{"start":{"line":80,"column":6},"end":{"line":92,"column":8}},"45":{"start":{"line":94,"column":6},"end":{"line":95,"column":75}},"46":{"start":{"line":97,"column":6},"end":{"line":97,"column":44}},"47":{"start":{"line":98,"column":6},"end":{"line":98,"column":14}},"48":{"start":{"line":103,"column":0},"end":{"line":108,"column":1}},"49":{"start":{"line":104,"column":2},"end":{"line":106,"column":3}},"50":{"start":{"line":105,"column":4},"end":{"line":105,"column":75}},"51":{"start":{"line":107,"column":2},"end":{"line":107,"column":43}},"52":{"start":{"line":110,"column":0},"end":{"line":141,"column":1}},"53":{"start":{"line":111,"column":2},"end":{"line":111,"column":23}},"54":{"start":{"line":112,"column":2},"end":{"line":118,"column":27}},"55":{"start":{"line":119,"column":2},"end":{"line":119,"column":40}},"56":{"start":{"line":120,"column":2},"end":{"line":120,"column":44}},"57":{"start":{"line":121,"column":2},"end":{"line":123,"column":3}},"58":{"start":{"line":122,"column":4},"end":{"line":122,"column":24}},"59":{"start":{"line":124,"column":2},"end":{"line":124,"column":35}},"60":{"start":{"line":125,"column":2},"end":{"line":127,"column":3}},"61":{"start":{"line":126,"column":4},"end":{"line":126,"column":20}},"62":{"start":{"line":128,"column":2},"end":{"line":128,"column":37}},"63":{"start":{"line":129,"column":2},"end":{"line":131,"column":3}},"64":{"start":{"line":130,"column":4},"end":{"line":130,"column":22}},"65":{"start":{"line":132,"column":2},"end":{"line":132,"column":41}},"66":{"start":{"line":133,"column":2},"end":{"line":135,"column":3}},"67":{"start":{"line":134,"column":4},"end":{"line":134,"column":26}},"68":{"start":{"line":136,"column":2},"end":{"line":136,"column":60}},"69":{"start":{"line":137,"column":2},"end":{"line":139,"column":3}},"70":{"start":{"line":138,"column":4},"end":{"line":138,"column":26}},"71":{"start":{"line":140,"column":2},"end":{"line":140,"column":58}},"72":{"start":{"line":143,"column":0},"end":{"line":160,"column":1}},"73":{"start":{"line":144,"column":2},"end":{"line":146,"column":3}},"74":{"start":{"line":145,"column":4},"end":{"line":145,"column":37}},"75":{"start":{"line":147,"column":2},"end":{"line":149,"column":3}},"76":{"start":{"line":148,"column":4},"end":{"line":148,"column":51}},"77":{"start":{"line":150,"column":2},"end":{"line":152,"column":3}},"78":{"start":{"line":151,"column":4},"end":{"line":151,"column":45}},"79":{"start":{"line":153,"column":2},"end":{"line":155,"column":3}},"80":{"start":{"line":154,"column":4},"end":{"line":154,"column":60}},"81":{"start":{"line":156,"column":2},"end":{"line":158,"column":3}},"82":{"start":{"line":157,"column":4},"end":{"line":157,"column":52}},"83":{"start":{"line":159,"column":2},"end":{"line":159,"column":16}},"84":{"start":{"line":162,"column":0},"end":{"line":170,"column":1}},"85":{"start":{"line":163,"column":2},"end":{"line":169,"column":4}},"86":{"start":{"line":172,"column":0},"end":{"line":194,"column":1}},"87":{"start":{"line":173,"column":2},"end":{"line":190,"column":3}},"88":{"start":{"line":179,"column":4},"end":{"line":187,"column":5}},"89":{"start":{"line":180,"column":6},"end":{"line":185,"column":40}},"90":{"start":{"line":186,"column":6},"end":{"line":186,"column":39}},"91":{"start":{"line":188,"column":4},"end":{"line":188,"column":31}},"92":{"start":{"line":189,"column":4},"end":{"line":189,"column":37}},"93":{"start":{"line":191,"column":2},"end":{"line":193,"column":3}},"94":{"start":{"line":192,"column":4},"end":{"line":192,"column":28}},"95":{"start":{"line":196,"column":0},"end":{"line":234,"column":1}},"96":{"start":{"line":197,"column":2},"end":{"line":233,"column":3}},"97":{"start":{"line":198,"column":4},"end":{"line":198,"column":56}},"98":{"start":{"line":199,"column":4},"end":{"line":201,"column":6}},"99":{"start":{"line":202,"column":4},"end":{"line":202,"column":70}},"100":{"start":{"line":203,"column":4},"end":{"line":205,"column":5}},"101":{"start":{"line":204,"column":6},"end":{"line":204,"column":34}},"102":{"start":{"line":207,"column":4},"end":{"line":212,"column":5}},"103":{"start":{"line":208,"column":6},"end":{"line":208,"column":87}},"104":{"start":{"line":209,"column":11},"end":{"line":212,"column":5}},"105":{"start":{"line":210,"column":6},"end":{"line":210,"column":87}},"106":{"start":{"line":211,"column":6},"end":{"line":211,"column":101}},"107":{"start":{"line":214,"column":4},"end":{"line":229,"column":5}},"108":{"start":{"line":217,"column":6},"end":{"line":217,"column":37}},"109":{"start":{"line":218,"column":6},"end":{"line":218,"column":45}},"110":{"start":{"line":219,"column":6},"end":{"line":219,"column":12}},"111":{"start":{"line":221,"column":6},"end":{"line":221,"column":37}},"112":{"start":{"line":222,"column":6},"end":{"line":222,"column":47}},"113":{"start":{"line":223,"column":6},"end":{"line":223,"column":12}},"114":{"start":{"line":225,"column":6},"end":{"line":225,"column":37}},"115":{"start":{"line":226,"column":6},"end":{"line":226,"column":46}},"116":{"start":{"line":227,"column":6},"end":{"line":227,"column":12}},"117":{"start":{"line":231,"column":4},"end":{"line":231,"column":46}},"118":{"start":{"line":232,"column":4},"end":{"line":232,"column":45}},"119":{"start":{"line":236,"column":0},"end":{"line":249,"column":1}},"120":{"start":{"line":237,"column":2},"end":{"line":239,"column":3}},"121":{"start":{"line":238,"column":4},"end":{"line":238,"column":11}},"122":{"start":{"line":240,"column":2},"end":{"line":240,"column":32}},"123":{"start":{"line":241,"column":2},"end":{"line":248,"column":3}},"124":{"start":{"line":242,"column":4},"end":{"line":242,"column":91}},"125":{"start":{"line":243,"column":4},"end":{"line":243,"column":51}},"126":{"start":{"line":244,"column":4},"end":{"line":247,"column":5}},"127":{"start":{"line":245,"column":6},"end":{"line":246,"column":27}},"128":{"start":{"line":251,"column":0},"end":{"line":266,"column":1}},"129":{"start":{"line":252,"column":2},"end":{"line":255,"column":4}},"130":{"start":{"line":256,"column":2},"end":{"line":264,"column":3}},"131":{"start":{"line":257,"column":4},"end":{"line":257,"column":50}},"132":{"start":{"line":258,"column":4},"end":{"line":260,"column":5}},"133":{"start":{"line":259,"column":6},"end":{"line":259,"column":45}},"134":{"start":{"line":261,"column":4},"end":{"line":263,"column":5}},"135":{"start":{"line":262,"column":6},"end":{"line":262,"column":43}},"136":{"start":{"line":265,"column":2},"end":{"line":265,"column":23}},"137":{"start":{"line":274,"column":0},"end":{"line":287,"column":1}},"138":{"start":{"line":275,"column":2},"end":{"line":278,"column":4}},"139":{"start":{"line":279,"column":2},"end":{"line":285,"column":3}},"140":{"start":{"line":280,"column":4},"end":{"line":280,"column":69}},"141":{"start":{"line":281,"column":4},"end":{"line":281,"column":44}},"142":{"start":{"line":282,"column":4},"end":{"line":284,"column":5}},"143":{"start":{"line":283,"column":6},"end":{"line":283,"column":46}},"144":{"start":{"line":286,"column":2},"end":{"line":286,"column":20}},"145":{"start":{"line":289,"column":0},"end":{"line":295,"column":1}},"146":{"start":{"line":290,"column":2},"end":{"line":292,"column":31}},"147":{"start":{"line":293,"column":2},"end":{"line":293,"column":62}},"148":{"start":{"line":294,"column":2},"end":{"line":294,"column":67}},"149":{"start":{"line":297,"column":0},"end":{"line":364,"column":1}},"150":{"start":{"line":298,"column":2},"end":{"line":363,"column":3}},"151":{"start":{"line":299,"column":4},"end":{"line":299,"column":24}},"152":{"start":{"line":300,"column":4},"end":{"line":300,"column":19}},"153":{"start":{"line":301,"column":4},"end":{"line":301,"column":77}},"154":{"start":{"line":302,"column":4},"end":{"line":305,"column":50}},"155":{"start":{"line":306,"column":4},"end":{"line":308,"column":6}},"156":{"start":{"line":309,"column":4},"end":{"line":314,"column":5}},"157":{"start":{"line":310,"column":6},"end":{"line":312,"column":199}},"158":{"start":{"line":313,"column":6},"end":{"line":313,"column":54}},"159":{"start":{"line":315,"column":4},"end":{"line":320,"column":5}},"160":{"start":{"line":316,"column":6},"end":{"line":318,"column":199}},"161":{"start":{"line":319,"column":6},"end":{"line":319,"column":56}},"162":{"start":{"line":321,"column":4},"end":{"line":323,"column":5}},"163":{"start":{"line":322,"column":6},"end":{"line":322,"column":58}},"164":{"start":{"line":324,"column":4},"end":{"line":361,"column":5}},"165":{"start":{"line":325,"column":6},"end":{"line":325,"column":65}},"166":{"start":{"line":326,"column":6},"end":{"line":326,"column":79}},"167":{"start":{"line":327,"column":6},"end":{"line":327,"column":105}},"168":{"start":{"line":328,"column":6},"end":{"line":328,"column":80}},"169":{"start":{"line":329,"column":6},"end":{"line":329,"column":36}},"170":{"start":{"line":330,"column":6},"end":{"line":330,"column":139}},"171":{"start":{"line":331,"column":11},"end":{"line":361,"column":5}},"172":{"start":{"line":332,"column":6},"end":{"line":332,"column":65}},"173":{"start":{"line":333,"column":6},"end":{"line":333,"column":68}},"174":{"start":{"line":334,"column":6},"end":{"line":334,"column":137}},"175":{"start":{"line":335,"column":6},"end":{"line":335,"column":105}},"176":{"start":{"line":336,"column":6},"end":{"line":336,"column":96}},"177":{"start":{"line":337,"column":6},"end":{"line":348,"column":7}},"178":{"start":{"line":338,"column":8},"end":{"line":338,"column":108}},"179":{"start":{"line":339,"column":8},"end":{"line":339,"column":70}},"180":{"start":{"line":340,"column":8},"end":{"line":345,"column":10}},"181":{"start":{"line":346,"column":8},"end":{"line":346,"column":53}},"182":{"start":{"line":347,"column":8},"end":{"line":347,"column":75}},"183":{"start":{"line":349,"column":11},"end":{"line":361,"column":5}},"184":{"start":{"line":350,"column":6},"end":{"line":350,"column":65}},"185":{"start":{"line":351,"column":6},"end":{"line":351,"column":79}},"186":{"start":{"line":352,"column":6},"end":{"line":352,"column":105}},"187":{"start":{"line":353,"column":6},"end":{"line":353,"column":80}},"188":{"start":{"line":354,"column":11},"end":{"line":361,"column":5}},"189":{"start":{"line":355,"column":6},"end":{"line":355,"column":65}},"190":{"start":{"line":356,"column":6},"end":{"line":356,"column":124}},"191":{"start":{"line":357,"column":6},"end":{"line":357,"column":79}},"192":{"start":{"line":358,"column":6},"end":{"line":358,"column":105}},"193":{"start":{"line":359,"column":6},"end":{"line":359,"column":80}},"194":{"start":{"line":360,"column":6},"end":{"line":360,"column":36}},"195":{"start":{"line":362,"column":4},"end":{"line":362,"column":55}},"196":{"start":{"line":366,"column":0},"end":{"line":404,"column":1}},"197":{"start":{"line":367,"column":2},"end":{"line":403,"column":3}},"198":{"start":{"line":368,"column":4},"end":{"line":368,"column":19}},"199":{"start":{"line":369,"column":4},"end":{"line":369,"column":24}},"200":{"start":{"line":370,"column":4},"end":{"line":370,"column":75}},"201":{"start":{"line":371,"column":4},"end":{"line":373,"column":6}},"202":{"start":{"line":374,"column":4},"end":{"line":376,"column":5}},"203":{"start":{"line":375,"column":6},"end":{"line":375,"column":58}},"204":{"start":{"line":377,"column":4},"end":{"line":401,"column":5}},"205":{"start":{"line":378,"column":6},"end":{"line":378,"column":63}},"206":{"start":{"line":379,"column":6},"end":{"line":379,"column":70}},"207":{"start":{"line":380,"column":6},"end":{"line":380,"column":79}},"208":{"start":{"line":381,"column":6},"end":{"line":381,"column":107}},"209":{"start":{"line":382,"column":6},"end":{"line":382,"column":37}},"210":{"start":{"line":383,"column":6},"end":{"line":383,"column":96}},"211":{"start":{"line":384,"column":11},"end":{"line":401,"column":5}},"212":{"start":{"line":385,"column":6},"end":{"line":385,"column":102}},"213":{"start":{"line":386,"column":6},"end":{"line":386,"column":63}},"214":{"start":{"line":387,"column":6},"end":{"line":387,"column":139}},"215":{"start":{"line":388,"column":6},"end":{"line":388,"column":107}},"216":{"start":{"line":389,"column":6},"end":{"line":389,"column":80}},"217":{"start":{"line":390,"column":11},"end":{"line":401,"column":5}},"218":{"start":{"line":391,"column":6},"end":{"line":391,"column":63}},"219":{"start":{"line":392,"column":6},"end":{"line":392,"column":79}},"220":{"start":{"line":393,"column":6},"end":{"line":393,"column":107}},"221":{"start":{"line":394,"column":6},"end":{"line":394,"column":80}},"222":{"start":{"line":395,"column":11},"end":{"line":401,"column":5}},"223":{"start":{"line":396,"column":6},"end":{"line":396,"column":63}},"224":{"start":{"line":397,"column":6},"end":{"line":397,"column":79}},"225":{"start":{"line":398,"column":6},"end":{"line":398,"column":107}},"226":{"start":{"line":399,"column":6},"end":{"line":399,"column":37}},"227":{"start":{"line":400,"column":6},"end":{"line":400,"column":126}},"228":{"start":{"line":402,"column":4},"end":{"line":402,"column":55}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"2":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":17}},{"start":{"line":42,"column":21},"end":{"line":42,"column":35}}]},"3":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]},"4":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":6},"end":{"line":70,"column":28}},{"start":{"line":70,"column":32},"end":{"line":70,"column":81}}]},"5":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"6":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":2},"end":{"line":104,"column":2}},{"start":{"line":104,"column":2},"end":{"line":104,"column":2}}]},"7":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":2},"end":{"line":121,"column":2}},{"start":{"line":121,"column":2},"end":{"line":121,"column":2}}]},"8":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":2},"end":{"line":125,"column":2}},{"start":{"line":125,"column":2},"end":{"line":125,"column":2}}]},"9":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"10":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":2},"end":{"line":133,"column":2}},{"start":{"line":133,"column":2},"end":{"line":133,"column":2}}]},"11":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":2},"end":{"line":137,"column":2}},{"start":{"line":137,"column":2},"end":{"line":137,"column":2}}]},"12":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":2},"end":{"line":144,"column":2}},{"start":{"line":144,"column":2},"end":{"line":144,"column":2}}]},"13":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":2},"end":{"line":147,"column":2}},{"start":{"line":147,"column":2},"end":{"line":147,"column":2}}]},"14":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":2},"end":{"line":150,"column":2}},{"start":{"line":150,"column":2},"end":{"line":150,"column":2}}]},"15":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":2},"end":{"line":153,"column":2}},{"start":{"line":153,"column":2},"end":{"line":153,"column":2}}]},"16":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":2},"end":{"line":156,"column":2}},{"start":{"line":156,"column":2},"end":{"line":156,"column":2}}]},"17":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":179,"column":4}},{"start":{"line":179,"column":4},"end":{"line":179,"column":4}}]},"18":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":8},"end":{"line":179,"column":64}},{"start":{"line":179,"column":68},"end":{"line":179,"column":85}}]},"19":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":4},"end":{"line":203,"column":4}},{"start":{"line":203,"column":4},"end":{"line":203,"column":4}}]},"20":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":4},"end":{"line":207,"column":4}},{"start":{"line":207,"column":4},"end":{"line":207,"column":4}}]},"21":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":11},"end":{"line":209,"column":11}},{"start":{"line":209,"column":11},"end":{"line":209,"column":11}}]},"22":{"line":214,"type":"switch","locations":[{"start":{"line":215,"column":4},"end":{"line":215,"column":16}},{"start":{"line":216,"column":4},"end":{"line":219,"column":12}},{"start":{"line":220,"column":4},"end":{"line":223,"column":12}},{"start":{"line":224,"column":4},"end":{"line":227,"column":12}},{"start":{"line":228,"column":4},"end":{"line":228,"column":12}}]},"23":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":2},"end":{"line":237,"column":2}},{"start":{"line":237,"column":2},"end":{"line":237,"column":2}}]},"24":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":4},"end":{"line":244,"column":4}},{"start":{"line":244,"column":4},"end":{"line":244,"column":4}}]},"25":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":4},"end":{"line":258,"column":4}},{"start":{"line":258,"column":4},"end":{"line":258,"column":4}}]},"26":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":4},"end":{"line":261,"column":4}},{"start":{"line":261,"column":4},"end":{"line":261,"column":4}}]},"27":{"line":261,"type":"binary-expr","locations":[{"start":{"line":261,"column":8},"end":{"line":261,"column":34}},{"start":{"line":261,"column":38},"end":{"line":261,"column":67}}]},"28":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":2},"end":{"line":279,"column":2}},{"start":{"line":279,"column":2},"end":{"line":279,"column":2}}]},"29":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":4},"end":{"line":282,"column":4}},{"start":{"line":282,"column":4},"end":{"line":282,"column":4}}]},"30":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":4},"end":{"line":309,"column":4}},{"start":{"line":309,"column":4},"end":{"line":309,"column":4}}]},"31":{"line":309,"type":"binary-expr","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":47}},{"start":{"line":309,"column":51},"end":{"line":309,"column":97}}]},"32":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":4},"end":{"line":315,"column":4}},{"start":{"line":315,"column":4},"end":{"line":315,"column":4}}]},"33":{"line":315,"type":"binary-expr","locations":[{"start":{"line":315,"column":8},"end":{"line":315,"column":49}},{"start":{"line":315,"column":53},"end":{"line":315,"column":99}}]},"34":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":4},"end":{"line":321,"column":4}},{"start":{"line":321,"column":4},"end":{"line":321,"column":4}}]},"35":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":4},"end":{"line":324,"column":4}},{"start":{"line":324,"column":4},"end":{"line":324,"column":4}}]},"36":{"line":330,"type":"binary-expr","locations":[{"start":{"line":330,"column":62},"end":{"line":330,"column":91}},{"start":{"line":330,"column":95},"end":{"line":330,"column":137}}]},"37":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":11},"end":{"line":331,"column":11}},{"start":{"line":331,"column":11},"end":{"line":331,"column":11}}]},"38":{"line":334,"type":"binary-expr","locations":[{"start":{"line":334,"column":63},"end":{"line":334,"column":90}},{"start":{"line":334,"column":94},"end":{"line":334,"column":134}}]},"39":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":6},"end":{"line":337,"column":6}},{"start":{"line":337,"column":6},"end":{"line":337,"column":6}}]},"40":{"line":349,"type":"if","locations":[{"start":{"line":349,"column":11},"end":{"line":349,"column":11}},{"start":{"line":349,"column":11},"end":{"line":349,"column":11}}]},"41":{"line":349,"type":"binary-expr","locations":[{"start":{"line":349,"column":15},"end":{"line":349,"column":61}},{"start":{"line":349,"column":65},"end":{"line":349,"column":96}}]},"42":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":11},"end":{"line":354,"column":11}},{"start":{"line":354,"column":11},"end":{"line":354,"column":11}}]},"43":{"line":372,"type":"cond-expr","locations":[{"start":{"line":372,"column":74},"end":{"line":372,"column":99}},{"start":{"line":372,"column":102},"end":{"line":372,"column":118}}]},"44":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":4},"end":{"line":374,"column":4}},{"start":{"line":374,"column":4},"end":{"line":374,"column":4}}]},"45":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":4},"end":{"line":377,"column":4}},{"start":{"line":377,"column":4},"end":{"line":377,"column":4}}]},"46":{"line":384,"type":"if","locations":[{"start":{"line":384,"column":11},"end":{"line":384,"column":11}},{"start":{"line":384,"column":11},"end":{"line":384,"column":11}}]},"47":{"line":385,"type":"binary-expr","locations":[{"start":{"line":385,"column":38},"end":{"line":385,"column":67}},{"start":{"line":385,"column":71},"end":{"line":385,"column":101}}]},"48":{"line":387,"type":"binary-expr","locations":[{"start":{"line":387,"column":63},"end":{"line":387,"column":90}},{"start":{"line":387,"column":94},"end":{"line":387,"column":136}}]},"49":{"line":390,"type":"if","locations":[{"start":{"line":390,"column":11},"end":{"line":390,"column":11}},{"start":{"line":390,"column":11},"end":{"line":390,"column":11}}]},"50":{"line":390,"type":"binary-expr","locations":[{"start":{"line":390,"column":15},"end":{"line":390,"column":61}},{"start":{"line":390,"column":65},"end":{"line":390,"column":94}}]},"51":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":11},"end":{"line":395,"column":11}},{"start":{"line":395,"column":11},"end":{"line":395,"column":11}}]}},"code":["'use strict';","","const chalk = require('chalk'),","    _ = require('lodash'),","    merge = require('./utils/object_utils').merge,","    isNoSQL = require('./types/types_helper').isNoSQL,","    checkValidityOfAssociation = require('./helpers/association_helper').checkValidityOfAssociation,","    cardinalities = require('./cardinalities'),","    formatComment = require('./helpers/comment_helper').formatComment,","    readJSONFiles = require('./utils/jhipster_utils').readJSONFiles,","    buildException = require('./exceptions/exception_factory').buildException,","    exceptions = require('./exceptions/exception_factory').exceptions;","","const USER = 'user';","","var entitiesToSuppress;","var listDTO;","var listPagination;","var listService;","var microserviceNames;","var entities;","var onDiskEntities;","var searchEngines;","var databaseTypes;","var parsedData;","var noUserManagement;","","module.exports = {","  /**","   * Keys of args:","   *   - listDTO,","   *   - listPagination,","   *   - listService,","   *   - microserviceNames,","   *   - searchEngines.","   */","  createEntities: createEntities","};","","function createEntities(parsedData, databaseTypes, options) {","  var merged = merge(defaults(), options);","  if (!parsedData || !databaseTypes) {","    throw new buildException(","        exceptions.NullPointer,","        'The parsed data and database types are mandatory.');","  }","  init(merged, parsedData, databaseTypes);","  checkNoSQLModeling();","  onDiskEntities = readJSONFiles(parsedData.classNames);","  initializeEntities();","  fillEntities();","  return entities;","}","","function init(args, passedParsedData, passedDatabaseTypes) {","  entitiesToSuppress = [];","  listDTO = args.listDTO;","  listPagination = args.listPagination;","  listService = args.listService;","  microserviceNames = args.microserviceNames;","  searchEngines = args.searchEngines;","  databaseTypes = passedDatabaseTypes;","  parsedData = passedParsedData;","  entities = {};","  onDiskEntities = {};","  noUserManagement = args.noUserManagement;","}","","function checkNoSQLModeling() {","  if (isNoSQL(databaseTypes) && Object.keys(parsedData.associations).length !== 0) {","    throw new buildException(","        exceptions.NoSQLModeling, \"NoSQL entities don't have relationships.\");","  }","}","","function initializeEntities() {","  var index = 0;","  for (let classId in parsedData.classes) {","    if (parsedData.classes.hasOwnProperty(classId)) {","      let initializedEntity = {","        fluentMethods: true,","        relationships: [],","        fields: [],","        changelogDate: getChangelogDate(classId, index),","        dto: parsedData.getClass(classId).dto,","        pagination: parsedData.getClass(classId).pagination,","        service: parsedData.getClass(classId).service,","        microserviceName: parsedData.getClass(classId).microserviceName,","        searchEngine: parsedData.getClass(classId).searchEngine,","        javadoc: formatComment(parsedData.getClass(classId).comment),","        entityTableName: _.snakeCase(parsedData.getClass(classId).tableName)","      };","","      initializedEntity =","          setOptions(initializedEntity, parsedData.getClass(classId).name);","","      entities[classId] = initializedEntity;","      index++;","    }","  }","}","","function getChangelogDate(classId, increment) {","  if (onDiskEntities[parsedData.getClass(classId).name]) {","    return onDiskEntities[parsedData.getClass(classId).name].changelogDate;","  }","  return dateFormatForLiquibase(increment);","}","","function dateFormatForLiquibase(increment) {","  var now = new Date();","  var now_utc = new Date(","      now.getUTCFullYear(),","      now.getUTCMonth(),","      now.getUTCDate(),","      now.getUTCHours(),","      now.getUTCMinutes(),","      now.getUTCSeconds());","  var year = '' + now_utc.getFullYear();","  var month = '' + (now_utc.getMonth() + 1);","  if (month.length === 1) {","    month = `0${month}`;","  }","  var day = '' + now_utc.getDate();","  if (day.length === 1) {","    day = `0${day}`;","  }","  var hour = '' + now_utc.getHours();","  if (hour.length === 1) {","    hour = `0${hour}`;","  }","  var minute = '' + now_utc.getMinutes();","  if (minute.length === 1) {","    minute = `0${minute}`;","  }","  var second = '' + (now_utc.getSeconds() + increment) % 60;","  if (second.length === 1) {","    second = `0${second}`;","  }","  return `${year}${month}${day}${hour}${minute}${second}`;","}","","function setOptions(entity, entityName) {","  if (listDTO.hasOwnProperty(entityName)) {","    entity.dto = listDTO[entityName];","  }","  if (listPagination.hasOwnProperty(entityName)) {","    entity.pagination = listPagination[entityName];","  }","  if (listService.hasOwnProperty(entityName)) {","    entity.service = listService[entityName];","  }","  if (microserviceNames.hasOwnProperty(entityName)) {","    entity.microserviceName = microserviceNames[entityName];","  }","  if (searchEngines.hasOwnProperty(entityName)) {","    entity.searchEngine = searchEngines[entityName];","  }","  return entity;","}","","function defaults() {","  return {","    listDTO: [],","    listPagination: {},","    listService: {},","    microserviceNames: {},","    searchEngines: []","  };","}","","function fillEntities() {","  for (let classId in parsedData.classes) {","    /*","     * If the user adds a 'User' entity we consider it as the already","     * created JHipster User entity and none of its fields and ownerside","     * relationships will be considered.","     */","    if (parsedData.getClass(classId).name.toLowerCase() === USER && !noUserManagement) {","      console.warn(","          chalk.yellow(","              \"Warning:  An Entity called 'User' was defined: 'User' is an\" +","              ' entity created by default by JHipster. All relationships toward' +","              ' it will be kept but all attributes and relationships from it' +","              ' will be disregarded.'));","      entitiesToSuppress.push(classId);","    }","    setFieldsOfEntity(classId);","    setRelationshipOfEntity(classId);","  }","  for (let entity in entitiesToSuppress) {","    delete entities[entity];","  }","}","","function setFieldsOfEntity(classId) {","  for (let i = 0; i < parsedData.classes[classId].fields.length; i++) {","    let fieldId = parsedData.classes[classId].fields[i];","    let fieldData = {","      fieldName: _.camelCase(parsedData.getField(fieldId).name)","    };","    let comment = formatComment(parsedData.getField(fieldId).comment);","    if (comment) {","      fieldData.comment = comment;","    }","","    if (parsedData.types[parsedData.getField(fieldId).type]) {","      fieldData.fieldType = parsedData.getType(parsedData.getField(fieldId).type).name;","    } else if (parsedData.getEnum(parsedData.getField(fieldId).type)) {","      fieldData.fieldType = parsedData.getEnum(parsedData.getField(fieldId).type).name;","      fieldData.fieldValues = parsedData.getEnum(parsedData.getField(fieldId).type).values.join(',');","    }","","    switch (fieldData.fieldType) {","    case 'Blob':","    case 'AnyBlob':","      fieldData.fieldType = 'byte[]';","      fieldData.fieldTypeBlobContent = 'any';","      break;","    case 'ImageBlob':","      fieldData.fieldType = 'byte[]';","      fieldData.fieldTypeBlobContent = 'image';","      break;","    case 'TextBlob':","      fieldData.fieldType = 'byte[]';","      fieldData.fieldTypeBlobContent = 'text';","      break;","    default:","    }","","    setValidationsOfField(fieldData, fieldId);","    entities[classId].fields.push(fieldData);","  }","}","","function setValidationsOfField(field, fieldId) {","  if (parsedData.getField(fieldId).validations.length === 0) {","    return;","  }","  field.fieldValidateRules = [];","  for (let i = 0; i < parsedData.getField(fieldId).validations.length; i++) {","    let validation = parsedData.getValidation(parsedData.getField(fieldId).validations[i]);","    field.fieldValidateRules.push(validation.name);","    if (validation.name !== 'required') {","      field['fieldValidateRules' + _.capitalize(validation.name)] =","          validation.value;","    }","  }","}","","function getRelatedAssociations(classId, associations) {","  var relationships = {","    from: [],","    to: []","  };","  for (let associationId in associations) {","    let association = associations[associationId];","    if (association.from === classId) {","      relationships.from.push(associationId);","    }","    if (association.to === classId && association.injectedFieldInTo) {","      relationships.to.push(associationId);","    }","  }","  return relationships;","}","","/**"," * Parses the string \"<relationshipName>(<otherEntityField>)\""," * @param{String} field"," * @return{Object} where 'relationshipName' is the relationship name and"," *                'otherEntityField' is the other entity field name"," */","function extractField(field) {","  var splitField = {","    otherEntityField: 'id', // id by default","    relationshipName: ''","  };","  if (field) {","    var chunks = field.replace('(', '/').replace(')', '').split('/');","    splitField.relationshipName = chunks[0];","    if (chunks.length > 1) {","      splitField.otherEntityField = chunks[1];","    }","  }","  return splitField;","}","","function setRelationshipOfEntity(classId) {","  var relatedAssociations = getRelatedAssociations(","      classId,","      parsedData.associations);","  setSourceAssociationsForClass(relatedAssociations, classId);","  setDestinationAssociationsForClass(relatedAssociations, classId);","}","","function setSourceAssociationsForClass(relatedAssociations, classId) {","  for (let i = 0; i < relatedAssociations.from.length; i++) {","    let otherSplitField;","    let splitField;","    let association = parsedData.getAssociation(relatedAssociations.from[i]);","    checkValidityOfAssociation(","        association,","        parsedData.getClass(association.from).name,","        parsedData.getClass(association.to).name);","    let relationship = {","      relationshipType: association.type","    };","    if (association.isInjectedFieldInToRequired && association.type === cardinalities.ONE_TO_MANY) {","      console.warn(","        chalk.yellow(","          `From ${parsedData.getClass(association.from).name} to ${parsedData.getClass(association.to).name}, a One-to-Many exists and the Many side can't be required. Removing the required flag.`));","      association.isInjectedFieldInToRequired = false;","    }","    if (association.isInjectedFieldInFromRequired && association.type === cardinalities.MANY_TO_ONE) {","      console.warn(","        chalk.yellow(","          `From ${parsedData.getClass(association.from).name} to ${parsedData.getClass(association.to).name}, a Many-to-One exists and the Many side can't be required. Removing the required flag.`));","      association.isInjectedFieldInFromRequired = false;","    }","    if (association.isInjectedFieldInFromRequired) {","      relationship.relationshipValidateRules = 'required';","    }","    if (association.type === cardinalities.ONE_TO_ONE) {","      splitField = extractField(association.injectedFieldInFrom);","      relationship.relationshipName = _.camelCase(splitField.relationshipName);","      relationship.otherEntityName = _.lowerFirst(_.camelCase(parsedData.getClass(association.to).name));","      relationship.otherEntityField = _.lowerFirst(splitField.otherEntityField);","      relationship.ownerSide = true;","      relationship.otherEntityRelationshipName = _.lowerFirst(association.injectedFieldInTo || parsedData.getClass(association.from).name);","    } else if (association.type === cardinalities.ONE_TO_MANY) {","      splitField = extractField(association.injectedFieldInFrom);","      otherSplitField = extractField(association.injectedFieldInTo);","      relationship.relationshipName = _.lowerFirst(_.camelCase(splitField.relationshipName || parsedData.getClass(association.to).name));","      relationship.otherEntityName = _.lowerFirst(_.camelCase(parsedData.getClass(association.to).name));","      relationship.otherEntityRelationshipName = _.lowerFirst(otherSplitField.relationshipName);","      if (!association.injectedFieldInTo) {","        relationship.otherEntityRelationshipName = _.lowerFirst(parsedData.getClass(association.from).name);","        otherSplitField = extractField(association.injectedFieldInTo);","        let otherSideRelationship = {","          relationshipName: _.camelCase(_.lowerFirst(parsedData.getClass(association.from).name)),","          otherEntityName: _.lowerFirst(_.camelCase(parsedData.getClass(association.from).name)),","          relationshipType: cardinalities.MANY_TO_ONE,","          otherEntityField: _.lowerFirst(otherSplitField.otherEntityField)","        };","        association.type = cardinalities.MANY_TO_ONE;","        entities[association.to].relationships.push(otherSideRelationship);","      }","    } else if (association.type === cardinalities.MANY_TO_ONE && association.injectedFieldInFrom) {","      splitField = extractField(association.injectedFieldInFrom);","      relationship.relationshipName = _.camelCase(splitField.relationshipName);","      relationship.otherEntityName = _.lowerFirst(_.camelCase(parsedData.getClass(association.to).name));","      relationship.otherEntityField = _.lowerFirst(splitField.otherEntityField);","    } else if (association.type === cardinalities.MANY_TO_MANY) {","      splitField = extractField(association.injectedFieldInFrom);","      relationship.otherEntityRelationshipName = _.lowerFirst(extractField(association.injectedFieldInTo).relationshipName);","      relationship.relationshipName = _.camelCase(splitField.relationshipName);","      relationship.otherEntityName = _.lowerFirst(_.camelCase(parsedData.getClass(association.to).name));","      relationship.otherEntityField = _.lowerFirst(splitField.otherEntityField);","      relationship.ownerSide = true;","    }","    entities[classId].relationships.push(relationship);","  }","}","","function setDestinationAssociationsForClass(relatedAssociations, classId) {","  for (let i = 0; i < relatedAssociations.to.length; i++) {","    let splitField;","    let otherSplitField;","    let association = parsedData.getAssociation(relatedAssociations.to[i]);","    let relationship = {","      relationshipType: (association.type === cardinalities.ONE_TO_MANY ? cardinalities.MANY_TO_ONE : association.type)","    };","    if (association.isInjectedFieldInToRequired) {","      relationship.relationshipValidateRules = 'required';","    }","    if (association.type === cardinalities.ONE_TO_ONE) {","      splitField = extractField(association.injectedFieldInTo);","      otherSplitField = extractField(association.injectedFieldInFrom);","      relationship.relationshipName = _.camelCase(splitField.relationshipName);","      relationship.otherEntityName = _.lowerFirst(_.camelCase(parsedData.getClass(association.from).name));","      relationship.ownerSide = false;","      relationship.otherEntityRelationshipName = _.lowerFirst(otherSplitField.relationshipName);","    } else if (association.type === cardinalities.ONE_TO_MANY) {","      association.injectedFieldInTo = association.injectedFieldInTo || _.lowerFirst(association.from);","      splitField = extractField(association.injectedFieldInTo);","      relationship.relationshipName = _.lowerFirst(_.camelCase(splitField.relationshipName || parsedData.getClass(association.from).name));","      relationship.otherEntityName = _.lowerFirst(_.camelCase(parsedData.getClass(association.from).name));","      relationship.otherEntityField = _.lowerFirst(splitField.otherEntityField);","    } else if (association.type === cardinalities.MANY_TO_ONE && association.injectedFieldInTo) {","      splitField = extractField(association.injectedFieldInTo);","      relationship.relationshipName = _.camelCase(splitField.relationshipName);","      relationship.otherEntityName = _.lowerFirst(_.camelCase(parsedData.getClass(association.from).name));","      relationship.otherEntityField = _.lowerFirst(splitField.otherEntityField);","    } else if (association.type === cardinalities.MANY_TO_MANY) {","      splitField = extractField(association.injectedFieldInTo);","      relationship.relationshipName = _.camelCase(splitField.relationshipName);","      relationship.otherEntityName = _.lowerFirst(_.camelCase(parsedData.getClass(association.from).name));","      relationship.ownerSide = false;","      relationship.otherEntityRelationshipName = _.lowerFirst(extractField(association.injectedFieldInFrom).relationshipName);","    }","    entities[classId].relationships.push(relationship);","  }","}",""],"l":{"3":1,"14":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"28":1,"40":1,"41":0,"42":0,"43":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"69":1,"70":0,"71":0,"76":1,"77":0,"78":0,"79":0,"80":0,"94":0,"97":0,"98":0,"103":1,"104":0,"105":0,"107":0,"110":1,"111":0,"112":0,"119":0,"120":0,"121":0,"122":0,"124":0,"125":0,"126":0,"128":0,"129":0,"130":0,"132":0,"133":0,"134":0,"136":0,"137":0,"138":0,"140":0,"143":1,"144":0,"145":0,"147":0,"148":0,"150":0,"151":0,"153":0,"154":0,"156":0,"157":0,"159":0,"162":1,"163":0,"172":1,"173":0,"179":0,"180":0,"186":0,"188":0,"189":0,"191":0,"192":0,"196":1,"197":0,"198":0,"199":0,"202":0,"203":0,"204":0,"207":0,"208":0,"209":0,"210":0,"211":0,"214":0,"217":0,"218":0,"219":0,"221":0,"222":0,"223":0,"225":0,"226":0,"227":0,"231":0,"232":0,"236":1,"237":0,"238":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"251":1,"252":0,"256":0,"257":0,"258":0,"259":0,"261":0,"262":0,"265":0,"274":1,"275":0,"279":0,"280":0,"281":0,"282":0,"283":0,"286":0,"289":1,"290":0,"293":0,"294":0,"297":1,"298":0,"299":0,"300":0,"301":0,"302":0,"306":0,"309":0,"310":0,"313":0,"315":0,"316":0,"319":0,"321":0,"322":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"346":0,"347":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"362":0,"366":1,"367":0,"368":0,"369":0,"370":0,"371":0,"374":0,"375":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"402":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/types/types_helper.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/types/types_helper.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"isNoSQL","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":2}},"3":{"start":{"line":14,"column":0},"end":{"line":16,"column":1}},"4":{"start":{"line":15,"column":2},"end":{"line":15,"column":49}}},"branchMap":{},"code":["'use strict';","","const SQLTypes = require('./sql_types');","","module.exports = {","  isNoSQL: isNoSQL","};","","/**"," * Returns true if type is an instance of a NoSQL database type."," * @param {type} the type to check."," * @return {boolean} whether the passed type is of a NoSQL type."," */","function isNoSQL(type) {","  return !SQLTypes.prototype.isPrototypeOf(type);","}",""],"l":{"3":1,"5":1,"14":1,"15":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/helpers/association_helper.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/helpers/association_helper.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":1,"20":0,"21":0,"22":1,"23":0,"24":0,"25":1,"26":0,"27":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"checkValidityOfAssociation","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":79}}},"2":{"name":"checkOneToOne","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":65}}},"3":{"name":"checkOneToMany","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":66}}},"4":{"name":"checkManyToOne","line":66,"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":66}}},"5":{"name":"checkManyToMany","line":76,"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":67}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":71}},"2":{"start":{"line":9,"column":0},"end":{"line":11,"column":2}},"3":{"start":{"line":21,"column":0},"end":{"line":44,"column":1}},"4":{"start":{"line":22,"column":2},"end":{"line":25,"column":3}},"5":{"start":{"line":23,"column":4},"end":{"line":24,"column":68}},"6":{"start":{"line":26,"column":2},"end":{"line":43,"column":3}},"7":{"start":{"line":28,"column":4},"end":{"line":28,"column":60}},"8":{"start":{"line":29,"column":4},"end":{"line":29,"column":10}},"9":{"start":{"line":31,"column":4},"end":{"line":31,"column":61}},"10":{"start":{"line":32,"column":4},"end":{"line":32,"column":10}},"11":{"start":{"line":34,"column":4},"end":{"line":34,"column":61}},"12":{"start":{"line":35,"column":4},"end":{"line":35,"column":10}},"13":{"start":{"line":37,"column":4},"end":{"line":37,"column":62}},"14":{"start":{"line":38,"column":4},"end":{"line":38,"column":10}},"15":{"start":{"line":40,"column":4},"end":{"line":42,"column":69}},"16":{"start":{"line":46,"column":0},"end":{"line":54,"column":1}},"17":{"start":{"line":47,"column":2},"end":{"line":53,"column":3}},"18":{"start":{"line":48,"column":4},"end":{"line":52,"column":82}},"19":{"start":{"line":56,"column":0},"end":{"line":64,"column":1}},"20":{"start":{"line":57,"column":2},"end":{"line":63,"column":3}},"21":{"start":{"line":58,"column":4},"end":{"line":62,"column":62}},"22":{"start":{"line":66,"column":0},"end":{"line":74,"column":1}},"23":{"start":{"line":67,"column":2},"end":{"line":73,"column":3}},"24":{"start":{"line":68,"column":4},"end":{"line":72,"column":81}},"25":{"start":{"line":76,"column":0},"end":{"line":83,"column":1}},"26":{"start":{"line":77,"column":2},"end":{"line":82,"column":3}},"27":{"start":{"line":78,"column":4},"end":{"line":81,"column":81}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"2":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":18}},{"start":{"line":22,"column":22},"end":{"line":22,"column":39}}]},"3":{"line":26,"type":"switch","locations":[{"start":{"line":27,"column":2},"end":{"line":29,"column":10}},{"start":{"line":30,"column":2},"end":{"line":32,"column":10}},{"start":{"line":33,"column":2},"end":{"line":35,"column":10}},{"start":{"line":36,"column":2},"end":{"line":38,"column":10}},{"start":{"line":39,"column":2},"end":{"line":42,"column":69}}]},"4":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]},"5":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]},"6":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":38}},{"start":{"line":57,"column":42},"end":{"line":57,"column":72}}]},"7":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]},"8":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":6},"end":{"line":67,"column":37}},{"start":{"line":67,"column":41},"end":{"line":67,"column":70}}]},"9":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"10":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":6},"end":{"line":77,"column":38}},{"start":{"line":77,"column":42},"end":{"line":77,"column":72}}]}},"code":["'use strict';","","const chalk = require('chalk'),","    cardinalities = require('../cardinalities'),","    buildException = require('../exceptions/exception_factory').buildException,","    exceptions = require('../exceptions/exception_factory').exceptions;","","","module.exports = {","  checkValidityOfAssociation: checkValidityOfAssociation","};","","/**"," * Checks the validity of the association."," * @param {AssociationData} association the association to check."," * @param {String} sourceName the source's name."," * @param {String} destinationName the destination's name."," * @throws NullPointerException if the association is nil."," * @throws AssociationException if the association is invalid."," */","function checkValidityOfAssociation (association, sourceName, destinationName) {","  if (!association || !association.type) {","    throw new buildException(","        exceptions.NullPointer, 'The association must not be nil.');","  }","  switch (association.type) {","  case cardinalities.ONE_TO_ONE:","    checkOneToOne(association, sourceName, destinationName);","    break;","  case cardinalities.ONE_TO_MANY:","    checkOneToMany(association, sourceName, destinationName);","    break;","  case cardinalities.MANY_TO_ONE:","    checkManyToOne(association, sourceName, destinationName);","    break;","  case cardinalities.MANY_TO_MANY:","    checkManyToMany(association, sourceName, destinationName);","    break;","  default:","    throw new buildException(","        exceptions.WrongAssociation,","        `The association type ${association.type} isn't supported.`);","  }","}","","function checkOneToOne(association, sourceName, destinationName) {","  if (!association.injectedFieldInFrom) {","    throw new buildException(","        exceptions.MalformedAssociation,","        `In the One-to-One relationship from ${sourceName} to ${destinationName}, `","        + 'the source entity must possess the destination in a One-to-One '","        + ' relationship, or you must invert the direction of the relationship.');","  }","}","","function checkOneToMany(association, sourceName, destinationName) {","  if (!association.injectedFieldInFrom || !association.injectedFieldInTo) {","    console.warn(","        chalk.yellow(","            `In the One-to-Many relationship from ${sourceName} to  ${destinationName}, `","            + 'only bidirectionality is supported for a One-to-Many association. '","            + 'The other side will be automatically added.'));","  }","}","","function checkManyToOne(association, sourceName, destinationName) {","  if (association.injectedFieldInFrom && association.injectedFieldInTo) {","    throw new buildException(","        exceptions.MalformedAssociation,","        `In the Many-to-One relationship from ${sourceName} to ${destinationName}, `","        + 'only unidirectionality is supported for a Many-to-One relationship, '","        + 'you should create a bidirectional One-to-Many relationship instead.');","  }","}","","function checkManyToMany(association, sourceName, destinationName) {","  if (!association.injectedFieldInFrom || !association.injectedFieldInTo) {","    throw new buildException(","        exceptions.MalformedAssociation,","        `In the Many-to-Many relationship from ${sourceName} to ${destinationName}, `","        + 'only bidirectionality is supported for a Many-to-Many relationship.');","  }","}",""],"l":{"3":1,"9":1,"21":1,"22":0,"23":0,"26":0,"28":0,"29":0,"31":0,"32":0,"34":0,"35":0,"37":0,"38":0,"40":0,"46":1,"47":0,"48":0,"56":1,"57":0,"58":0,"66":1,"67":0,"68":0,"76":1,"77":0,"78":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/helpers/comment_helper.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/helpers/comment_helper.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"formatComment","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":22},"end":{"line":15,"column":60}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":2}},"2":{"start":{"line":7,"column":0},"end":{"line":18,"column":1}},"3":{"start":{"line":8,"column":2},"end":{"line":10,"column":3}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":11}},"5":{"start":{"line":11,"column":2},"end":{"line":11,"column":41}},"6":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"7":{"start":{"line":13,"column":4},"end":{"line":13,"column":20}},"8":{"start":{"line":15,"column":2},"end":{"line":17,"column":9}},"9":{"start":{"line":16,"column":4},"end":{"line":16,"column":76}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":2}},{"start":{"line":8,"column":2},"end":{"line":8,"column":2}}]},"2":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"3":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":6},"end":{"line":12,"column":24}},{"start":{"line":12,"column":28},"end":{"line":12,"column":55}}]}},"code":["'use strict';","","module.exports = {","  formatComment: formatComment","};","","function formatComment(comment) {","  if (!comment) {","    return;","  }","  var parts = comment.trim().split('\\n');","  if (parts.length === 1 && parts[0].indexOf('*') !== 0) {","    return parts[0];","  }","  return parts.reduce(function(previousValue, currentValue) {","    return previousValue.concat(currentValue.trim().replace(/[*]*\\s*/, ''));","  }, '');","}",""],"l":{"3":1,"7":1,"8":0,"9":0,"11":0,"12":0,"13":0,"15":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/export/jdl_exporter.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/export/jdl_exporter.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":1,"113":0,"114":0,"115":0,"116":1,"117":0,"118":0,"119":0,"120":1,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":1,"131":0,"132":0,"133":1,"134":0,"135":0,"136":1,"137":0,"138":0,"139":1,"140":0,"141":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"toJDLString","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":42}}},"2":{"name":"toJDL","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":36}}},"3":{"name":"convertClasses","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":36}}},"4":{"name":"addFieldsToEntity","line":76,"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":53}}},"5":{"name":"convertFields","line":82,"loc":{"start":{"line":82,"column":0},"end":{"line":82,"column":82}}},"6":{"name":"addValidationsToField","line":103,"loc":{"start":{"line":103,"column":0},"end":{"line":103,"column":61}}},"7":{"name":"convertValidations","line":109,"loc":{"start":{"line":109,"column":0},"end":{"line":109,"column":66}}},"8":{"name":"convertAssociations","line":121,"loc":{"start":{"line":121,"column":0},"end":{"line":121,"column":71}}},"9":{"name":"(anonymous_9)","line":128,"loc":{"start":{"line":128,"column":48},"end":{"line":128,"column":67}}},"10":{"name":"convertEnums","line":140,"loc":{"start":{"line":140,"column":0},"end":{"line":140,"column":29}}},"11":{"name":"convertOptions","line":152,"loc":{"start":{"line":152,"column":0},"end":{"line":152,"column":50}}},"12":{"name":"addDTOOptions","line":165,"loc":{"start":{"line":165,"column":0},"end":{"line":165,"column":62}}},"13":{"name":"addPaginationOptions","line":175,"loc":{"start":{"line":175,"column":0},"end":{"line":175,"column":69}}},"14":{"name":"addServiceOptions","line":194,"loc":{"start":{"line":194,"column":0},"end":{"line":194,"column":66}}},"15":{"name":"addMicroserviceOption","line":214,"loc":{"start":{"line":214,"column":0},"end":{"line":214,"column":70}}},"16":{"name":"addSearchEngineOptions","line":234,"loc":{"start":{"line":234,"column":0},"end":{"line":234,"column":71}}},"17":{"name":"addSkipClientOption","line":245,"loc":{"start":{"line":245,"column":0},"end":{"line":245,"column":68}}},"18":{"name":"addSkipServerOption","line":255,"loc":{"start":{"line":255,"column":0},"end":{"line":255,"column":68}}},"19":{"name":"addAngularSuffixOption","line":265,"loc":{"start":{"line":265,"column":0},"end":{"line":265,"column":71}}},"20":{"name":"addOptionsToJDLObject","line":285,"loc":{"start":{"line":285,"column":0},"end":{"line":285,"column":58}}},"21":{"name":"addEntitiesToJDLObject","line":291,"loc":{"start":{"line":291,"column":0},"end":{"line":291,"column":60}}},"22":{"name":"addRelationshipsToJDLObject","line":297,"loc":{"start":{"line":297,"column":0},"end":{"line":297,"column":70}}},"23":{"name":"addEnumsToJDLObject","line":303,"loc":{"start":{"line":303,"column":0},"end":{"line":303,"column":54}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":17,"column":71}},"2":{"start":{"line":19,"column":0},"end":{"line":22,"column":2}},"3":{"start":{"line":24,"column":0},"end":{"line":26,"column":1}},"4":{"start":{"line":25,"column":2},"end":{"line":25,"column":47}},"5":{"start":{"line":41,"column":0},"end":{"line":59,"column":1}},"6":{"start":{"line":42,"column":2},"end":{"line":46,"column":3}},"7":{"start":{"line":43,"column":4},"end":{"line":45,"column":42}},"8":{"start":{"line":47,"column":2},"end":{"line":47,"column":34}},"9":{"start":{"line":48,"column":2},"end":{"line":48,"column":51}},"10":{"start":{"line":49,"column":2},"end":{"line":49,"column":53}},"11":{"start":{"line":50,"column":2},"end":{"line":50,"column":114}},"12":{"start":{"line":51,"column":2},"end":{"line":51,"column":63}},"13":{"start":{"line":52,"column":2},"end":{"line":52,"column":52}},"14":{"start":{"line":53,"column":2},"end":{"line":53,"column":47}},"15":{"start":{"line":54,"column":2},"end":{"line":57,"column":3}},"16":{"start":{"line":55,"column":4},"end":{"line":55,"column":79}},"17":{"start":{"line":56,"column":4},"end":{"line":56,"column":53}},"18":{"start":{"line":58,"column":2},"end":{"line":58,"column":19}},"19":{"start":{"line":61,"column":0},"end":{"line":74,"column":1}},"20":{"start":{"line":62,"column":2},"end":{"line":62,"column":23}},"21":{"start":{"line":63,"column":2},"end":{"line":72,"column":3}},"22":{"start":{"line":64,"column":4},"end":{"line":64,"column":52}},"23":{"start":{"line":65,"column":4},"end":{"line":69,"column":7}},"24":{"start":{"line":70,"column":4},"end":{"line":70,"column":127}},"25":{"start":{"line":71,"column":4},"end":{"line":71,"column":44}},"26":{"start":{"line":73,"column":2},"end":{"line":73,"column":21}},"27":{"start":{"line":76,"column":0},"end":{"line":80,"column":1}},"28":{"start":{"line":77,"column":2},"end":{"line":79,"column":3}},"29":{"start":{"line":78,"column":4},"end":{"line":78,"column":41}},"30":{"start":{"line":82,"column":0},"end":{"line":101,"column":1}},"31":{"start":{"line":83,"column":2},"end":{"line":83,"column":25}},"32":{"start":{"line":84,"column":2},"end":{"line":99,"column":3}},"33":{"start":{"line":85,"column":4},"end":{"line":85,"column":49}},"34":{"start":{"line":86,"column":4},"end":{"line":86,"column":35}},"35":{"start":{"line":87,"column":4},"end":{"line":91,"column":5}},"36":{"start":{"line":90,"column":6},"end":{"line":90,"column":46}},"37":{"start":{"line":92,"column":4},"end":{"line":96,"column":7}},"38":{"start":{"line":97,"column":4},"end":{"line":97,"column":98}},"39":{"start":{"line":98,"column":4},"end":{"line":98,"column":33}},"40":{"start":{"line":100,"column":2},"end":{"line":100,"column":23}},"41":{"start":{"line":103,"column":0},"end":{"line":107,"column":1}},"42":{"start":{"line":104,"column":2},"end":{"line":106,"column":3}},"43":{"start":{"line":105,"column":4},"end":{"line":105,"column":50}},"44":{"start":{"line":109,"column":0},"end":{"line":119,"column":1}},"45":{"start":{"line":110,"column":2},"end":{"line":110,"column":30}},"46":{"start":{"line":111,"column":2},"end":{"line":117,"column":3}},"47":{"start":{"line":112,"column":4},"end":{"line":112,"column":65}},"48":{"start":{"line":113,"column":4},"end":{"line":116,"column":8}},"49":{"start":{"line":118,"column":2},"end":{"line":118,"column":28}},"50":{"start":{"line":121,"column":0},"end":{"line":138,"column":1}},"51":{"start":{"line":122,"column":2},"end":{"line":122,"column":32}},"52":{"start":{"line":123,"column":2},"end":{"line":136,"column":3}},"53":{"start":{"line":124,"column":4},"end":{"line":124,"column":58}},"54":{"start":{"line":125,"column":4},"end":{"line":135,"column":8}},"55":{"start":{"line":129,"column":8},"end":{"line":129,"column":37}},"56":{"start":{"line":137,"column":2},"end":{"line":137,"column":30}},"57":{"start":{"line":140,"column":0},"end":{"line":150,"column":1}},"58":{"start":{"line":141,"column":2},"end":{"line":141,"column":21}},"59":{"start":{"line":142,"column":2},"end":{"line":148,"column":3}},"60":{"start":{"line":143,"column":4},"end":{"line":143,"column":37}},"61":{"start":{"line":144,"column":4},"end":{"line":147,"column":8}},"62":{"start":{"line":149,"column":2},"end":{"line":149,"column":19}},"63":{"start":{"line":152,"column":0},"end":{"line":163,"column":1}},"64":{"start":{"line":153,"column":2},"end":{"line":153,"column":23}},"65":{"start":{"line":154,"column":2},"end":{"line":154,"column":55}},"66":{"start":{"line":155,"column":2},"end":{"line":155,"column":62}},"67":{"start":{"line":156,"column":2},"end":{"line":156,"column":59}},"68":{"start":{"line":157,"column":2},"end":{"line":157,"column":61}},"69":{"start":{"line":158,"column":2},"end":{"line":158,"column":61}},"70":{"start":{"line":159,"column":2},"end":{"line":159,"column":63}},"71":{"start":{"line":160,"column":2},"end":{"line":160,"column":64}},"72":{"start":{"line":161,"column":2},"end":{"line":161,"column":64}},"73":{"start":{"line":162,"column":2},"end":{"line":162,"column":21}},"74":{"start":{"line":165,"column":0},"end":{"line":174,"column":1}},"75":{"start":{"line":166,"column":2},"end":{"line":168,"column":3}},"76":{"start":{"line":167,"column":4},"end":{"line":167,"column":11}},"77":{"start":{"line":169,"column":2},"end":{"line":173,"column":6}},"78":{"start":{"line":175,"column":0},"end":{"line":193,"column":1}},"79":{"start":{"line":176,"column":2},"end":{"line":178,"column":3}},"80":{"start":{"line":177,"column":4},"end":{"line":177,"column":11}},"81":{"start":{"line":179,"column":2},"end":{"line":179,"column":36}},"82":{"start":{"line":180,"column":2},"end":{"line":185,"column":3}},"83":{"start":{"line":181,"column":4},"end":{"line":183,"column":5}},"84":{"start":{"line":182,"column":6},"end":{"line":182,"column":76}},"85":{"start":{"line":184,"column":4},"end":{"line":184,"column":90}},"86":{"start":{"line":186,"column":2},"end":{"line":192,"column":3}},"87":{"start":{"line":187,"column":4},"end":{"line":191,"column":8}},"88":{"start":{"line":194,"column":0},"end":{"line":212,"column":1}},"89":{"start":{"line":195,"column":2},"end":{"line":197,"column":3}},"90":{"start":{"line":196,"column":4},"end":{"line":196,"column":11}},"91":{"start":{"line":198,"column":2},"end":{"line":198,"column":33}},"92":{"start":{"line":199,"column":2},"end":{"line":204,"column":3}},"93":{"start":{"line":200,"column":4},"end":{"line":202,"column":5}},"94":{"start":{"line":201,"column":6},"end":{"line":201,"column":70}},"95":{"start":{"line":203,"column":4},"end":{"line":203,"column":84}},"96":{"start":{"line":205,"column":2},"end":{"line":211,"column":3}},"97":{"start":{"line":206,"column":4},"end":{"line":210,"column":8}},"98":{"start":{"line":214,"column":0},"end":{"line":232,"column":1}},"99":{"start":{"line":215,"column":2},"end":{"line":217,"column":3}},"100":{"start":{"line":216,"column":4},"end":{"line":216,"column":11}},"101":{"start":{"line":218,"column":2},"end":{"line":218,"column":34}},"102":{"start":{"line":219,"column":2},"end":{"line":224,"column":3}},"103":{"start":{"line":220,"column":4},"end":{"line":222,"column":5}},"104":{"start":{"line":221,"column":6},"end":{"line":221,"column":77}},"105":{"start":{"line":223,"column":4},"end":{"line":223,"column":91}},"106":{"start":{"line":225,"column":2},"end":{"line":231,"column":3}},"107":{"start":{"line":226,"column":4},"end":{"line":230,"column":8}},"108":{"start":{"line":234,"column":0},"end":{"line":243,"column":1}},"109":{"start":{"line":235,"column":2},"end":{"line":237,"column":3}},"110":{"start":{"line":236,"column":4},"end":{"line":236,"column":11}},"111":{"start":{"line":238,"column":2},"end":{"line":242,"column":6}},"112":{"start":{"line":245,"column":0},"end":{"line":253,"column":1}},"113":{"start":{"line":246,"column":2},"end":{"line":248,"column":3}},"114":{"start":{"line":247,"column":4},"end":{"line":247,"column":11}},"115":{"start":{"line":249,"column":2},"end":{"line":252,"column":6}},"116":{"start":{"line":255,"column":0},"end":{"line":263,"column":1}},"117":{"start":{"line":256,"column":2},"end":{"line":258,"column":3}},"118":{"start":{"line":257,"column":4},"end":{"line":257,"column":11}},"119":{"start":{"line":259,"column":2},"end":{"line":262,"column":6}},"120":{"start":{"line":265,"column":0},"end":{"line":283,"column":1}},"121":{"start":{"line":266,"column":2},"end":{"line":268,"column":3}},"122":{"start":{"line":267,"column":4},"end":{"line":267,"column":11}},"123":{"start":{"line":269,"column":2},"end":{"line":269,"column":28}},"124":{"start":{"line":270,"column":2},"end":{"line":275,"column":3}},"125":{"start":{"line":271,"column":4},"end":{"line":273,"column":5}},"126":{"start":{"line":272,"column":6},"end":{"line":272,"column":69}},"127":{"start":{"line":274,"column":4},"end":{"line":274,"column":83}},"128":{"start":{"line":276,"column":2},"end":{"line":282,"column":3}},"129":{"start":{"line":277,"column":4},"end":{"line":281,"column":8}},"130":{"start":{"line":285,"column":0},"end":{"line":289,"column":1}},"131":{"start":{"line":286,"column":2},"end":{"line":288,"column":3}},"132":{"start":{"line":287,"column":4},"end":{"line":287,"column":43}},"133":{"start":{"line":291,"column":0},"end":{"line":295,"column":1}},"134":{"start":{"line":292,"column":2},"end":{"line":294,"column":3}},"135":{"start":{"line":293,"column":4},"end":{"line":293,"column":57}},"136":{"start":{"line":297,"column":0},"end":{"line":301,"column":1}},"137":{"start":{"line":298,"column":2},"end":{"line":300,"column":3}},"138":{"start":{"line":299,"column":4},"end":{"line":299,"column":55}},"139":{"start":{"line":303,"column":0},"end":{"line":307,"column":1}},"140":{"start":{"line":304,"column":2},"end":{"line":306,"column":3}},"141":{"start":{"line":305,"column":4},"end":{"line":305,"column":39}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"2":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"3":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"4":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":48}},{"start":{"line":88,"column":11},"end":{"line":88,"column":57}},{"start":{"line":89,"column":11},"end":{"line":89,"column":55}}]},"5":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":2},"end":{"line":166,"column":2}},{"start":{"line":166,"column":2},"end":{"line":166,"column":2}}]},"6":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":6},"end":{"line":166,"column":22}},{"start":{"line":166,"column":26},"end":{"line":166,"column":67}}]},"7":{"line":171,"type":"cond-expr","locations":[{"start":{"line":171,"column":62},"end":{"line":171,"column":67}},{"start":{"line":171,"column":70},"end":{"line":171,"column":85}}]},"8":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":2},"end":{"line":176,"column":2}},{"start":{"line":176,"column":2},"end":{"line":176,"column":2}}]},"9":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":6},"end":{"line":176,"column":29}},{"start":{"line":176,"column":33},"end":{"line":176,"column":82}}]},"10":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"11":{"line":189,"type":"cond-expr","locations":[{"start":{"line":189,"column":93},"end":{"line":189,"column":98}},{"start":{"line":189,"column":101},"end":{"line":189,"column":145}}]},"12":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":2},"end":{"line":195,"column":2}},{"start":{"line":195,"column":2},"end":{"line":195,"column":2}}]},"13":{"line":195,"type":"binary-expr","locations":[{"start":{"line":195,"column":6},"end":{"line":195,"column":26}},{"start":{"line":195,"column":30},"end":{"line":195,"column":76}}]},"14":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":4},"end":{"line":200,"column":4}},{"start":{"line":200,"column":4},"end":{"line":200,"column":4}}]},"15":{"line":208,"type":"cond-expr","locations":[{"start":{"line":208,"column":87},"end":{"line":208,"column":92}},{"start":{"line":208,"column":95},"end":{"line":208,"column":133}}]},"16":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":2},"end":{"line":215,"column":2}},{"start":{"line":215,"column":2},"end":{"line":215,"column":2}}]},"17":{"line":215,"type":"binary-expr","locations":[{"start":{"line":215,"column":6},"end":{"line":215,"column":32}},{"start":{"line":215,"column":36},"end":{"line":215,"column":87}}]},"18":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":4},"end":{"line":220,"column":4}},{"start":{"line":220,"column":4},"end":{"line":220,"column":4}}]},"19":{"line":228,"type":"cond-expr","locations":[{"start":{"line":228,"column":89},"end":{"line":228,"column":94}},{"start":{"line":228,"column":97},"end":{"line":228,"column":137}}]},"20":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":2},"end":{"line":235,"column":2}},{"start":{"line":235,"column":2},"end":{"line":235,"column":2}}]},"21":{"line":235,"type":"binary-expr","locations":[{"start":{"line":235,"column":6},"end":{"line":235,"column":28}},{"start":{"line":235,"column":32},"end":{"line":235,"column":79}}]},"22":{"line":240,"type":"cond-expr","locations":[{"start":{"line":240,"column":68},"end":{"line":240,"column":73}},{"start":{"line":240,"column":76},"end":{"line":240,"column":97}}]},"23":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":2},"end":{"line":246,"column":2}},{"start":{"line":246,"column":2},"end":{"line":246,"column":2}}]},"24":{"line":246,"type":"binary-expr","locations":[{"start":{"line":246,"column":6},"end":{"line":246,"column":29}},{"start":{"line":246,"column":33},"end":{"line":246,"column":68}}]},"25":{"line":251,"type":"cond-expr","locations":[{"start":{"line":251,"column":69},"end":{"line":251,"column":74}},{"start":{"line":251,"column":77},"end":{"line":251,"column":99}}]},"26":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":2},"end":{"line":256,"column":2}},{"start":{"line":256,"column":2},"end":{"line":256,"column":2}}]},"27":{"line":256,"type":"binary-expr","locations":[{"start":{"line":256,"column":6},"end":{"line":256,"column":29}},{"start":{"line":256,"column":33},"end":{"line":256,"column":68}}]},"28":{"line":261,"type":"cond-expr","locations":[{"start":{"line":261,"column":69},"end":{"line":261,"column":74}},{"start":{"line":261,"column":77},"end":{"line":261,"column":99}}]},"29":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":2},"end":{"line":266,"column":2}},{"start":{"line":266,"column":2},"end":{"line":266,"column":2}}]},"30":{"line":266,"type":"binary-expr","locations":[{"start":{"line":266,"column":6},"end":{"line":266,"column":30}},{"start":{"line":266,"column":34},"end":{"line":266,"column":83}}]},"31":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":4},"end":{"line":271,"column":4}},{"start":{"line":271,"column":4},"end":{"line":271,"column":4}}]},"32":{"line":279,"type":"cond-expr","locations":[{"start":{"line":279,"column":78},"end":{"line":279,"column":83}},{"start":{"line":279,"column":86},"end":{"line":279,"column":115}}]}},"code":["'use strict';","","const _ = require('lodash'),","    JHipsterFieldTypes = require('jhipster-core').JHipsterFieldTypes,","    JDLObject = require('jhipster-core').JDLObject,","    JDLEntity = require('jhipster-core').JDLEntity,","    JDLEnum = require('jhipster-core').JDLEnum,","    JDLField = require('jhipster-core').JDLField,","    JDLRelationship = require('jhipster-core').JDLRelationship,","    JDLValidation = require('jhipster-core').JDLValidation,","    JDLUnaryOption = require('jhipster-core').JDLUnaryOption,","    JDLBinaryOption = require('jhipster-core').JDLBinaryOption,","    UnaryOptions = require('jhipster-core').JHipsterUnaryOptions.UNARY_OPTIONS,","    BinaryOptions = require('jhipster-core').JHipsterBinaryOptions.BINARY_OPTIONS,","    BinaryOptionValues = require('jhipster-core').JHipsterBinaryOptions.BINARY_OPTION_VALUES,","    buildException = require('../exceptions/exception_factory').buildException,","    exceptions = require('../exceptions/exception_factory').exceptions;","","module.exports = {","  toJDL: toJDL,","  toJDLString: toJDLString","};","","function toJDLString(parsedData, options) {","  return toJDL(parsedData, options).toString();","}","","/**"," * Converts the parsed data from any XMI file to a JDLObject."," * @param parsedData the parsed data."," * @param options an object having as keys:"," *                - listDTO,"," *                - listPagination,"," *                - listService,"," *                - listOfNoClient,"," *                - listOfNoServer,"," *                - angularSuffixes,"," *                - microserviceNames,"," *                - searchEngines"," */","function toJDL(parsedData, options) {","  if (!parsedData) {","    throw new buildException(","        exceptions.NullPointer,","        'The parsed data must be passed');","  }","  var jdlObject = new JDLObject();","  var jdlEntityObject = convertClasses(parsedData);","  addEntitiesToJDLObject(jdlObject, jdlEntityObject);","  var jdlRelationshipArray = convertAssociations(parsedData.associations, jdlObject.entities, parsedData.classes);","  addRelationshipsToJDLObject(jdlObject, jdlRelationshipArray);","  var jdlEnumArray = convertEnums(parsedData.enums);","  addEnumsToJDLObject(jdlObject, jdlEnumArray);","  if (options) {","    var jdlOptionArray = convertOptions(options, parsedData.classNames.length);","    addOptionsToJDLObject(jdlObject, jdlOptionArray);","  }","  return jdlObject;","}","","function convertClasses(parsedData) {","  var jdlEntities = {};","  for (let i = 0, classIds = Object.keys(parsedData.classes); i < classIds.length; i++) {","    let classData = parsedData.classes[classIds[i]];","    let jdlEntity = new JDLEntity({","      name: classData.name,","      tableName: classData.tableName,","      comment: classData.comment","    });","    addFieldsToEntity(jdlEntity, convertFields(classData.fields, parsedData.fields, parsedData.types, parsedData.validations));","    jdlEntities[jdlEntity.name] = jdlEntity;","  }","  return jdlEntities;","}","","function addFieldsToEntity(jdlEntity, jdlFieldArray) {","  for (let i = 0; i < jdlFieldArray.length; i++) {","    jdlEntity.addField(jdlFieldArray[i]);","  }","}","","function convertFields(classFields, parsedFields, parsedTypes, parsedValidations) {","  var jdlFieldArray = [];","  for (let i = 0; i < classFields.length; i++) {","    let fieldData = parsedFields[classFields[i]];","    let fieldType = fieldData.type;","    if (!JHipsterFieldTypes.isSQLType(fieldType)","        && !JHipsterFieldTypes.isCassandraType(fieldType)","        && !JHipsterFieldTypes.isMongoDBType(fieldType)) {","      fieldType = parsedTypes[fieldType].name;","    }","    let jdlField = new JDLField({","      name: fieldData.name,","      type: fieldType,","      comment: fieldData.comment","    });","    addValidationsToField(jdlField, convertValidations(fieldData.validations, parsedValidations));","    jdlFieldArray.push(jdlField);","  }","  return jdlFieldArray;","}","","function addValidationsToField(jdlField, jdlValidationArray) {","  for (let i = 0; i < jdlValidationArray.length; i++) {","    jdlField.addValidation(jdlValidationArray[i]);","  }","}","","function convertValidations(fieldsValidations, parsedValidations) {","  var jdlValidationArray = [];","  for (let i = 0; i < fieldsValidations.length; i++) {","    let validationData = parsedValidations[fieldsValidations[i]];","    jdlValidationArray.push(new JDLValidation({","      name: validationData.name,","      value: validationData.value","    }));","  }","  return jdlValidationArray;","}","","function convertAssociations(associations, jdlEntities, parsedClasses) {","  var jdlRelationshipArray = [];","  for (let i = 0, associationIds = Object.keys(associations); i < associationIds.length; i++) {","    let associationData = associations[associationIds[i]];","    jdlRelationshipArray.push(new JDLRelationship({","      from: jdlEntities[parsedClasses[associationData.from].name],","      to: jdlEntities[parsedClasses[associationData.to].name],","      type: associationData.type.split('-').map(function (element) {","        return _.capitalize(element);","      }).join(''),","      injectedFieldInFrom: associationData.injectedFieldInFrom,","      injectedFieldInTo: associationData.injectedFieldInTo,","      commentInFrom: associationData.commentInFrom,","      commentInTo: associationData.commentInTo","    }));","  }","  return jdlRelationshipArray;","}","","function convertEnums(enums) {","  var enumArray = [];","  for (let i = 0, enumIds = Object.keys(enums); i < enumIds.length; i++) {","    let enumData = enums[enumIds[i]];","    enumArray.push(new JDLEnum({","      name: enumData.name,","      values: enumData.values","    }));","  }","  return enumArray;","}","","function convertOptions(options, numberOfClasses) {","  var optionArray = [];","  addDTOOptions(optionArray, options, numberOfClasses);","  addPaginationOptions(optionArray, options, numberOfClasses);","  addServiceOptions(optionArray, options, numberOfClasses);","  addSkipClientOption(optionArray, options, numberOfClasses);","  addSkipServerOption(optionArray, options, numberOfClasses);","  addMicroserviceOption(optionArray, options, numberOfClasses);","  addSearchEngineOptions(optionArray, options, numberOfClasses);","  addAngularSuffixOption(optionArray, options, numberOfClasses);","  return optionArray;","}","","function addDTOOptions(optionArray, options, numberOfClasses) {","  if (!options.listDTO || Object.keys(options.listDTO).length === 0) {","    return;","  }","  optionArray.push(new JDLBinaryOption({","    name: BinaryOptions.DTO,","    entityNames: options.listDTO.length === numberOfClasses ? ['*'] : options.listDTO,","    value: BinaryOptionValues.dto.MAPSTRUCT","  }));","}","function addPaginationOptions(optionArray, options, numberOfClasses) {","  if (!options.listPagination || Object.keys(options.listPagination ).length === 0) {","    return;","  }","  var entitiesByPaginationType = {};","  for (let i = 0, entityNames = Object.keys(options.listPagination); i < entityNames.length; i++) {","    if (!entitiesByPaginationType[options.listPagination[entityNames[i]]]) {","      entitiesByPaginationType[options.listPagination[entityNames[i]]] = [];","    }","    entitiesByPaginationType[options.listPagination[entityNames[i]]].push(entityNames[i]);","  }","  for (let i = 0, paginationTypes = Object.keys(entitiesByPaginationType); i < paginationTypes.length; i++) {","    optionArray.push(new JDLBinaryOption({","      name: BinaryOptions.PAGINATION,","      entityNames: entitiesByPaginationType[paginationTypes[i]].length === numberOfClasses ? ['*'] : entitiesByPaginationType[paginationTypes[i]],","      value: paginationTypes[i]","    }));","  }","}","function addServiceOptions(optionArray, options, numberOfClasses) {","  if (!options.listService || Object.keys(options.listService ).length === 0) {","    return;","  }","  var entitiesByServiceType = {};","  for (let i = 0, entityNames = Object.keys(options.listService); i < entityNames.length; i++) {","    if (!entitiesByServiceType[options.listService[entityNames[i]]]) {","      entitiesByServiceType[options.listService[entityNames[i]]] = [];","    }","    entitiesByServiceType[options.listService[entityNames[i]]].push(entityNames[i]);","  }","  for (let i = 0, serviceTypes = Object.keys(entitiesByServiceType); i < serviceTypes.length; i++) {","    optionArray.push(new JDLBinaryOption({","      name: BinaryOptions.SERVICE,","      entityNames: entitiesByServiceType[serviceTypes[i]].length === numberOfClasses ? ['*'] : entitiesByServiceType[serviceTypes[i]],","      value: serviceTypes[i]","    }));","  }","}","","function addMicroserviceOption(optionArray, options, numberOfClasses) {","  if (!options.microserviceNames || Object.keys(options.microserviceNames).length === 0) {","    return;","  }","  var entitiesByMicroservice = {};","  for (let i = 0, entityNames = Object.keys(options.microserviceNames); i < entityNames.length; i++) {","    if (!entitiesByMicroservice[options.microserviceNames[entityNames[i]]]) {","      entitiesByMicroservice[options.microserviceNames[entityNames[i]]] = [];","    }","    entitiesByMicroservice[options.microserviceNames[entityNames[i]]].push(entityNames[i]);","  }","  for (let i = 0, microservices = Object.keys(entitiesByMicroservice); i < microservices.length; i++) {","    optionArray.push(new JDLBinaryOption({","      name: BinaryOptions.MICROSERVICE,","      entityNames: entitiesByMicroservice[microservices[i]].length === numberOfClasses ? ['*'] : entitiesByMicroservice[microservices[i]],","      value: microservices[i]","    }));","  }","}","","function addSearchEngineOptions(optionArray, options, numberOfClasses) {","  if (!options.searchEngines || Object.keys(options.searchEngines).length === 0) {","    return;","  }","  optionArray.push(new JDLBinaryOption({","    name: BinaryOptions.SEARCH_ENGINE,","    entityNames: options.searchEngines.length === numberOfClasses ? ['*'] : options.searchEngines,","    value: BinaryOptionValues.searchEngine.ELASTIC_SEARCH","  }));","}","","function addSkipClientOption(optionArray, options, numberOfClasses) {","  if (!options.listOfNoClient || options.listOfNoClient.length === 0) {","    return;","  }","  optionArray.push(new JDLUnaryOption({","    name: UnaryOptions.SKIP_CLIENT,","    entityNames: options.listOfNoClient.length === numberOfClasses ? ['*'] : options.listOfNoClient","  }));","}","","function addSkipServerOption(optionArray, options, numberOfClasses) {","  if (!options.listOfNoServer || options.listOfNoServer.length === 0) {","    return;","  }","  optionArray.push(new JDLUnaryOption({","    name: UnaryOptions.SKIP_SERVER,","    entityNames: options.listOfNoServer.length === numberOfClasses ? ['*'] : options.listOfNoServer","  }));","}","","function addAngularSuffixOption(optionArray, options, numberOfClasses) {","  if (!options.angularSuffixes || Object.keys(options.angularSuffixes).length === 0) {","    return;","  }","  var entitiesBySuffix = {};","  for (let i = 0, entityNames = Object.keys(options.angularSuffixes); i < entityNames.length; i++) {","    if (!entitiesBySuffix[options.angularSuffixes[entityNames[i]]]) {","      entitiesBySuffix[options.angularSuffixes[entityNames[i]]] = [];","    }","    entitiesBySuffix[options.angularSuffixes[entityNames[i]]].push(entityNames[i]);","  }","  for (let i = 0, suffixes = Object.keys(entitiesBySuffix); i < suffixes.length; i++) {","    optionArray.push(new JDLBinaryOption({","      name: BinaryOptions.ANGULAR_SUFFIX,","      entityNames: entitiesBySuffix[suffixes[i]].length === numberOfClasses ? ['*'] : entitiesBySuffix[suffixes[i]],","      value: suffixes[i]","    }));","  }","}","","function addOptionsToJDLObject(jdlObject, jdlOptionArray) {","  for (let i = 0; i < jdlOptionArray.length; i++) {","    jdlObject.addOption(jdlOptionArray[i]);","  }","}","","function addEntitiesToJDLObject(jdlObject, jdlEntityObject) {","  for (let i = 0, entityNames = Object.keys(jdlEntityObject); i < entityNames.length; i++) {","    jdlObject.addEntity(jdlEntityObject[entityNames[i]]);","  }","}","","function addRelationshipsToJDLObject(jdlObject, jdlRelationshipArray) {","  for (let i = 0; i < jdlRelationshipArray.length; i++) {","    jdlObject.addRelationship(jdlRelationshipArray[i]);","  }","}","","function addEnumsToJDLObject(jdlObject, jdlEnumArray) {","  for (let i = 0; i < jdlEnumArray.length; i++) {","    jdlObject.addEnum(jdlEnumArray[i]);","  }","}",""],"l":{"3":1,"19":1,"24":1,"25":0,"41":1,"42":0,"43":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"58":0,"61":1,"62":0,"63":0,"64":0,"65":0,"70":0,"71":0,"73":0,"76":1,"77":0,"78":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"90":0,"92":0,"97":0,"98":0,"100":0,"103":1,"104":0,"105":0,"109":1,"110":0,"111":0,"112":0,"113":0,"118":0,"121":1,"122":0,"123":0,"124":0,"125":0,"129":0,"137":0,"140":1,"141":0,"142":0,"143":0,"144":0,"149":0,"152":1,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"165":1,"166":0,"167":0,"169":0,"175":1,"176":0,"177":0,"179":0,"180":0,"181":0,"182":0,"184":0,"186":0,"187":0,"194":1,"195":0,"196":0,"198":0,"199":0,"200":0,"201":0,"203":0,"205":0,"206":0,"214":1,"215":0,"216":0,"218":0,"219":0,"220":0,"221":0,"223":0,"225":0,"226":0,"234":1,"235":0,"236":0,"238":0,"245":1,"246":0,"247":0,"249":0,"255":1,"256":0,"257":0,"259":0,"265":1,"266":0,"267":0,"269":0,"270":0,"271":0,"272":0,"274":0,"276":0,"277":0,"285":1,"286":0,"287":0,"291":1,"292":0,"293":0,"297":1,"298":0,"299":0,"303":1,"304":0,"305":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/jhipster-uml.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/jhipster-uml.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0},"b":{"1":[0,1]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"2":{"start":{"line":6,"column":0},"end":{"line":14,"column":1}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":31}},"4":{"start":{"line":9,"column":2},"end":{"line":9,"column":75}},"5":{"start":{"line":10,"column":2},"end":{"line":10,"column":70}},"6":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":66}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]}},"code":["//#!/usr/bin/env node","'use strict';","","const chalk = require('chalk');","","try {","  require('./lib/jhipsteruml');","} catch (error) {","  console.error(`${chalk.red('An error has occurred:\\n\\t')}${error.name}`);","  console.error(`${chalk.red('Error message:\\n\\t')}${error.message}`);","  if (error.stack) {","    console.error(`${chalk.red('Stack trace:\\n')}${error.stack}`);","  }","}",""],"l":{"4":1,"6":1,"7":1,"9":1,"10":1,"11":1,"12":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/jhipsteruml.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/jhipsteruml.js","s":{"1":3,"2":3,"3":0,"4":3,"5":3,"6":3,"7":3,"8":3,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0},"b":{"1":[0,3],"2":[3,0],"3":[3,0],"4":[3,3],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"initParserFactoryArgs","line":98,"loc":{"start":{"line":98,"column":0},"end":{"line":98,"column":33}}},"2":{"name":"filterOutUnchangedEntities","line":111,"loc":{"start":{"line":111,"column":0},"end":{"line":111,"column":58}}},"3":{"name":"(anonymous_3)","line":113,"loc":{"start":{"line":113,"column":38},"end":{"line":113,"column":54}}},"4":{"name":"writeJdlFile","line":122,"loc":{"start":{"line":122,"column":0},"end":{"line":122,"column":53}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":70}},"2":{"start":{"line":7,"column":0},"end":{"line":13,"column":1}},"3":{"start":{"line":8,"column":2},"end":{"line":12,"column":79}},"4":{"start":{"line":15,"column":0},"end":{"line":29,"column":58}},"5":{"start":{"line":31,"column":0},"end":{"line":36,"column":1}},"6":{"start":{"line":32,"column":2},"end":{"line":35,"column":61}},"7":{"start":{"line":38,"column":0},"end":{"line":49,"column":1}},"8":{"start":{"line":39,"column":2},"end":{"line":44,"column":4}},"9":{"start":{"line":46,"column":2},"end":{"line":48,"column":43}},"10":{"start":{"line":51,"column":0},"end":{"line":51,"column":60}},"11":{"start":{"line":52,"column":0},"end":{"line":52,"column":69}},"12":{"start":{"line":53,"column":0},"end":{"line":53,"column":31}},"13":{"start":{"line":54,"column":0},"end":{"line":54,"column":47}},"14":{"start":{"line":56,"column":0},"end":{"line":67,"column":2}},"15":{"start":{"line":70,"column":0},"end":{"line":73,"column":1}},"16":{"start":{"line":71,"column":2},"end":{"line":71,"column":52}},"17":{"start":{"line":72,"column":2},"end":{"line":72,"column":18}},"18":{"start":{"line":75,"column":0},"end":{"line":75,"column":82}},"19":{"start":{"line":77,"column":0},"end":{"line":77,"column":25}},"20":{"start":{"line":78,"column":0},"end":{"line":80,"column":1}},"21":{"start":{"line":79,"column":2},"end":{"line":79,"column":73}},"22":{"start":{"line":81,"column":0},"end":{"line":81,"column":77}},"23":{"start":{"line":83,"column":0},"end":{"line":93,"column":1}},"24":{"start":{"line":84,"column":2},"end":{"line":86,"column":3}},"25":{"start":{"line":85,"column":4},"end":{"line":85,"column":73}},"26":{"start":{"line":88,"column":2},"end":{"line":88,"column":23}},"27":{"start":{"line":89,"column":2},"end":{"line":92,"column":5}},"28":{"start":{"line":95,"column":0},"end":{"line":95,"column":83}},"29":{"start":{"line":96,"column":0},"end":{"line":96,"column":94}},"30":{"start":{"line":98,"column":0},"end":{"line":110,"column":1}},"31":{"start":{"line":99,"column":2},"end":{"line":102,"column":4}},"32":{"start":{"line":103,"column":2},"end":{"line":108,"column":3}},"33":{"start":{"line":104,"column":4},"end":{"line":104,"column":42}},"34":{"start":{"line":106,"column":4},"end":{"line":106,"column":64}},"35":{"start":{"line":107,"column":4},"end":{"line":107,"column":20}},"36":{"start":{"line":109,"column":2},"end":{"line":109,"column":27}},"37":{"start":{"line":111,"column":0},"end":{"line":121,"column":1}},"38":{"start":{"line":112,"column":2},"end":{"line":112,"column":60}},"39":{"start":{"line":113,"column":2},"end":{"line":120,"column":5}},"40":{"start":{"line":114,"column":4},"end":{"line":114,"column":42}},"41":{"start":{"line":115,"column":4},"end":{"line":115,"column":52}},"42":{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},"43":{"start":{"line":117,"column":6},"end":{"line":117,"column":18}},"44":{"start":{"line":119,"column":4},"end":{"line":119,"column":60}},"45":{"start":{"line":122,"column":0},"end":{"line":128,"column":1}},"46":{"start":{"line":123,"column":2},"end":{"line":126,"column":5}},"47":{"start":{"line":127,"column":2},"end":{"line":127,"column":59}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":0},"end":{"line":7,"column":0}},{"start":{"line":7,"column":0},"end":{"line":7,"column":0}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":0},"end":{"line":31,"column":0}},{"start":{"line":31,"column":0},"end":{"line":31,"column":0}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":0},"end":{"line":38,"column":0}},{"start":{"line":38,"column":0},"end":{"line":38,"column":0}}]},"4":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":12}},{"start":{"line":38,"column":16},"end":{"line":38,"column":36}}]},"5":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":12},"end":{"line":46,"column":19}},{"start":{"line":46,"column":23},"end":{"line":48,"column":42}}]},"6":{"line":58,"type":"cond-expr","locations":[{"start":{"line":58,"column":24},"end":{"line":58,"column":84}},{"start":{"line":58,"column":87},"end":{"line":58,"column":89}}]},"7":{"line":59,"type":"cond-expr","locations":[{"start":{"line":59,"column":36},"end":{"line":59,"column":108}},{"start":{"line":59,"column":111},"end":{"line":59,"column":113}}]},"8":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":32},"end":{"line":60,"column":100}},{"start":{"line":60,"column":103},"end":{"line":60,"column":105}}]},"9":{"line":61,"type":"cond-expr","locations":[{"start":{"line":61,"column":42},"end":{"line":61,"column":112}},{"start":{"line":61,"column":115},"end":{"line":61,"column":117}}]},"10":{"line":62,"type":"cond-expr","locations":[{"start":{"line":62,"column":42},"end":{"line":62,"column":112}},{"start":{"line":62,"column":115},"end":{"line":62,"column":117}}]},"11":{"line":63,"type":"cond-expr","locations":[{"start":{"line":63,"column":46},"end":{"line":63,"column":132}},{"start":{"line":63,"column":135},"end":{"line":63,"column":137}}]},"12":{"line":64,"type":"cond-expr","locations":[{"start":{"line":64,"column":51},"end":{"line":64,"column":142}},{"start":{"line":64,"column":145},"end":{"line":64,"column":147}}]},"13":{"line":65,"type":"cond-expr","locations":[{"start":{"line":65,"column":43},"end":{"line":65,"column":126}},{"start":{"line":65,"column":129},"end":{"line":65,"column":131}}]},"14":{"line":66,"type":"cond-expr","locations":[{"start":{"line":66,"column":49},"end":{"line":66,"column":122}},{"start":{"line":66,"column":125},"end":{"line":66,"column":127}}]},"15":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":0},"end":{"line":70,"column":0}},{"start":{"line":70,"column":0},"end":{"line":70,"column":0}}]},"16":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":0},"end":{"line":83,"column":0}},{"start":{"line":83,"column":0},"end":{"line":83,"column":0}}]},"17":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]},"18":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":2},"end":{"line":103,"column":2}},{"start":{"line":103,"column":2},"end":{"line":103,"column":2}}]},"19":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":116,"column":4}},{"start":{"line":116,"column":4},"end":{"line":116,"column":4}}]}},"code":["'use strict';","","const argv = require('./jhipsteruml/command_line_handler').argv,","    buildException = require('./exceptions/exception_factory').buildException,","    exceptions = require('./exceptions/exception_factory').exceptions;","","if (Object.keys(argv).length < 3) {","  throw new buildException(","      exceptions.WrongCall,","      'Wrong argument number specified, an input file and (optionally) '","      + \"the database type ('sql', 'mongodb' or 'cassandra') must be supplied.\\n\"","      + \"Use the command 'jhipster-uml -help' to see the available commands.\");","}","","const fs = require('fs'),","    chalk = require('chalk'),","    createEntities = require('./entitiescreator').createEntities,","    ParserFactory = require('./editors/parser_factory'),","    jhipsterOptionHelper = require('./helpers/jhipster_option_helper'),","    generateEntities = require('./entity_generator').generateEntities,","    isYoRcFilePresent = require('./utils/jhipster_utils').isYoRcFilePresent,","    isJumlFilePresent = require('./utils/jhipster-uml_utils').isJumlFilePresent,","    readJSONFiles = require('./utils/jhipster_utils').readJSONFiles,","    areJHipsterEntitiesEqual = require('./helpers/object_helper').areJHipsterEntitiesEqual,","    values = require('./utils/object_utils').values,","    exportToJSON = require('./export/json_exporter').exportToJSON,","    toJDLString = require('./export/jdl_exporter').toJDLString,","    getEntitiesToGenerate = require('./jhipsteruml/entities_to_generate_handler').getEntitiesToGenerate,","    writeFile = require('./export/file_writer').writeFile;","","if (!isYoRcFilePresent()) {","  console.info(","      chalk.yellow(","          'Warning: you are using JHipster UML outside a JHipster project and '","          + 'some files might not be correctly generated.'));","}","","if (!argv.db && !isYoRcFilePresent()) {","  throw new buildException(","      exceptions.WrongCall,","      'The database type must either be supplied with the -db option, '","      + 'or a .yo-rc.json file must exist in the current directory.\\n'","      + \"Use the command 'jhipster-uml -help' to see the available options.\"","  );","} else {","  argv.db = argv.db || JSON.parse(","          fs.readFileSync('./.yo-rc.json')","      )['generator-jhipster'].databaseType;","}","","var noUserManagement = argv['skip-user-management'] != null;","var parserData = ParserFactory.createParser(initParserFactoryArgs());","var parser = parserData.parser;","var parsedData = parser.parse(parserData.data);","","var options = {","  force: argv.f,","  listDTO: (argv.dto) ? jhipsterOptionHelper.askForDTO(parsedData.classes, argv.dto) : {},","  listPagination: (argv.paginate) ? jhipsterOptionHelper.askForPagination(parsedData.classes, argv.paginate) : {},","  listService: (argv.service) ? jhipsterOptionHelper.askForService(parsedData.classes, argv.service) : {},","  listOfNoClient: (argv['skip-client']) ? jhipsterOptionHelper.askForClassesToSkipClientCode(parsedData.classes) : [],","  listOfNoServer: (argv['skip-server']) ? jhipsterOptionHelper.askForClassesToSkipServerCode(parsedData.classes) : [],","  angularSuffixes: (argv['angular-suffix']) ? jhipsterOptionHelper.askForAngularSuffixes(parsedData.classes, argv['angular-suffix']) : {},","  microserviceNames: (argv['microservice-name']) ? jhipsterOptionHelper.askForMicroserviceNames(parsedData.classes, argv['microservice-name']) : {},","  searchEngines: (argv['search-engine']) ? jhipsterOptionHelper.askForSearchEngines(parsedData.classes, argv['search-engine']) : {},","  noFluentMethods: (argv['no-fluent-methods']) ? jhipsterOptionHelper.askForClassesWithNoFluentMethods(parsedData.classes) : []","};","","","if (argv['to-jdl']) {","  writeJdlFile(argv['to-jdl'], parsedData, options);","  process.exit(0);","}","","var entities = createEntities(parsedData, parserData.data.databaseTypes, options);","","var entityIdsByName = {};","for (let i = 0, entityIds = Object.keys(parsedData.classes); i < parsedData.classNames.length; i++) {","  entityIdsByName[parsedData.getClass(entityIds[i]).name] = entityIds[i];","}","var entityNamesToGenerate = filterOutUnchangedEntities(entities, parsedData);","","if (isJumlFilePresent()) {","  if (entityNamesToGenerate.length !== 0) {","    entityNamesToGenerate = getEntitiesToGenerate(entityNamesToGenerate);","  }","} else {","  options.force = true;","  writeFile({","    fileName: '.juml',","    content: ''","  });","}","","exportToJSON(entities, values(entityIdsByName), parsedData, entityNamesToGenerate);","generateEntities(values(entityIdsByName), parsedData.classes, entityNamesToGenerate, options);","","function initParserFactoryArgs() {","  var parserFactoryArgs = {","    databaseType: argv.db,","    noUserManagement: noUserManagement","  };","  if (argv['_'].length >= 1) {","    parserFactoryArgs.file = argv['_'][0];","  } else {","    console.error('At least one file to parse must be passed.');","    process.exit(1);","  }","  return parserFactoryArgs;","}","function filterOutUnchangedEntities(entities, parsedData) {","  var onDiskEntities = readJSONFiles(parsedData.classNames);","  return parsedData.classNames.filter(function (name) {","    var currEntity = onDiskEntities[name];","    var newEntity = entities[entityIdsByName[name]];","    if (!currEntity) {","      return true;","    }","    return !areJHipsterEntitiesEqual(currEntity, newEntity);","  });","}","function writeJdlFile(fileName, parsedData, options) {","  writeFile({","    fileName: fileName,","    content: toJDLString(parsedData, options)","  });","  console.info(`The file '${fileName}' has been written.`);","}",""],"l":{"3":3,"7":3,"8":0,"15":3,"31":3,"32":3,"38":3,"39":3,"46":0,"51":0,"52":0,"53":0,"54":0,"56":0,"70":0,"71":0,"72":0,"75":0,"77":0,"78":0,"79":0,"81":0,"83":0,"84":0,"85":0,"88":0,"89":0,"95":0,"96":0,"98":1,"99":0,"103":0,"104":0,"106":0,"107":0,"109":0,"111":1,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"119":0,"122":1,"123":0,"127":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/jhipsteruml/command_line_handler.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/jhipsteruml/command_line_handler.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"handle","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":18}}},"2":{"name":"(anonymous_2)","line":72,"loc":{"start":{"line":72,"column":15},"end":{"line":72,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":53}},"2":{"start":{"line":8,"column":0},"end":{"line":10,"column":2}},"3":{"start":{"line":12,"column":0},"end":{"line":77,"column":1}},"4":{"start":{"line":13,"column":2},"end":{"line":76,"column":18}},"5":{"start":{"line":73,"column":8},"end":{"line":73,"column":97}}},"branchMap":{},"code":["'use strict';","","const yargs = require('yargs'),","    DatabaseTypes = require('jhipster-core').JHipsterDatabaseTypes.Types,","    JHipsterBinaryOptionsValues = require('jhipster-core').JHipsterBinaryOptions.BINARY_OPTION_VALUES,","    values = require('../utils/object_utils').values;","","module.exports = {","  argv: handle().argv","};","","function handle() {","  return yargs","      .usage('Usage: jhipster-uml <xmi file> [-options]')","      .option({","        db: {","          describe: 'Defines which database type your app uses',","          choices: [DatabaseTypes.sql, DatabaseTypes.mongodb, DatabaseTypes.cassandra]","        },","        dto: {","          describe: 'Generates DTO',","          choices: values(JHipsterBinaryOptionsValues.dto)","        },","        paginate: {","          describe: 'Generates pagination',","          choices: values(JHipsterBinaryOptionsValues.pagination)","        },","        service: {","          describe: 'Generates services',","          choices: values(JHipsterBinaryOptionsValues.service)","        },","        'skip-client': {","          describe: 'Skips client code generation',","          nargs: 0","        },","        'skip-server': {","          describe: 'Skips server code generation',","          nargs: 0","        },","        'angular-suffix': {","          describe: 'Adds a suffix to angular files'","        },","        'microservice-name': {","          describe: 'Adds the microservice/s possessing the entity/ies'","        },","        'search-engine': {","          describe: 'Specifies the search engine',","          choices: values(JHipsterBinaryOptionsValues.searchEngine)","        },","        'skip-user-management': {","          describe: 'Tells JHipster not to manage the User entity',","          nargs: 0","        },","        'no-fluent-methods': {","          describe: 'Disables the fluent method generation',","          nargs: 0","        },","        'to-jdl': {","          describe: 'Converts the parsed XMI to a JDL file'","        },","        f: {","          alias: 'force',","          describe: 'Overrides entities',","          nargs: 0","        }","      })","      .help('h')","      .alias('h', 'help')","      .showHelpOnFail(false, 'See  -h/--help for available options')","      .detectLocale(false)","      .strict()","      .version(function() {","        return `The current version of JHipster UML is ${require('../../package.json').version}`;","      })","      .alias('version', 'v')","      .wrap(null);","}",""],"l":{"3":1,"8":1,"12":1,"13":1,"73":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/helpers/jhipster_option_helper.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/helpers/jhipster_option_helper.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":1,"45":0,"46":1,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":1,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"askForClassesToPaginate","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":49}}},"2":{"name":"askForPagination","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":43}}},"3":{"name":"askForClassesToService","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":48}}},"4":{"name":"askForService","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":40}}},"5":{"name":"askForClassesToDto","line":65,"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":44}}},"6":{"name":"askForDTO","line":72,"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":36}}},"7":{"name":"askForClassesToSkipClientCode","line":89,"loc":{"start":{"line":89,"column":0},"end":{"line":89,"column":48}}},"8":{"name":"askForClassesWithNoFluentMethods","line":96,"loc":{"start":{"line":96,"column":0},"end":{"line":96,"column":51}}},"9":{"name":"askForClassesToSkipServerCode","line":103,"loc":{"start":{"line":103,"column":0},"end":{"line":103,"column":48}}},"10":{"name":"askForAngularSuffixes","line":110,"loc":{"start":{"line":110,"column":0},"end":{"line":110,"column":48}}},"11":{"name":"askForAngularSuffixesClasses","line":127,"loc":{"start":{"line":127,"column":0},"end":{"line":127,"column":54}}},"12":{"name":"askForMicroserviceNames","line":134,"loc":{"start":{"line":134,"column":0},"end":{"line":134,"column":50}}},"13":{"name":"askForMicroserviceNamesClasses","line":151,"loc":{"start":{"line":151,"column":0},"end":{"line":151,"column":56}}},"14":{"name":"askForClassesToBeSearched","line":158,"loc":{"start":{"line":158,"column":0},"end":{"line":158,"column":51}}},"15":{"name":"askForSearchEngines","line":165,"loc":{"start":{"line":165,"column":0},"end":{"line":165,"column":46}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":50}},"2":{"start":{"line":5,"column":0},"end":{"line":15,"column":2}},"3":{"start":{"line":17,"column":0},"end":{"line":22,"column":1}},"4":{"start":{"line":18,"column":2},"end":{"line":21,"column":5}},"5":{"start":{"line":24,"column":0},"end":{"line":39,"column":1}},"6":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"7":{"start":{"line":26,"column":4},"end":{"line":26,"column":22}},"8":{"start":{"line":28,"column":2},"end":{"line":28,"column":26}},"9":{"start":{"line":29,"column":2},"end":{"line":37,"column":3}},"10":{"start":{"line":30,"column":4},"end":{"line":30,"column":72}},"11":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"12":{"start":{"line":32,"column":6},"end":{"line":32,"column":15}},"13":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"14":{"start":{"line":35,"column":6},"end":{"line":35,"column":55}},"15":{"start":{"line":38,"column":2},"end":{"line":38,"column":24}},"16":{"start":{"line":41,"column":0},"end":{"line":46,"column":1}},"17":{"start":{"line":42,"column":2},"end":{"line":45,"column":5}},"18":{"start":{"line":48,"column":0},"end":{"line":63,"column":1}},"19":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"20":{"start":{"line":50,"column":4},"end":{"line":50,"column":22}},"21":{"start":{"line":52,"column":2},"end":{"line":52,"column":23}},"22":{"start":{"line":53,"column":2},"end":{"line":61,"column":3}},"23":{"start":{"line":54,"column":4},"end":{"line":54,"column":70}},"24":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"25":{"start":{"line":56,"column":6},"end":{"line":56,"column":15}},"26":{"start":{"line":58,"column":4},"end":{"line":60,"column":5}},"27":{"start":{"line":59,"column":6},"end":{"line":59,"column":51}},"28":{"start":{"line":62,"column":2},"end":{"line":62,"column":21}},"29":{"start":{"line":65,"column":0},"end":{"line":70,"column":1}},"30":{"start":{"line":66,"column":2},"end":{"line":69,"column":5}},"31":{"start":{"line":72,"column":0},"end":{"line":87,"column":1}},"32":{"start":{"line":73,"column":2},"end":{"line":75,"column":3}},"33":{"start":{"line":74,"column":4},"end":{"line":74,"column":22}},"34":{"start":{"line":76,"column":2},"end":{"line":76,"column":19}},"35":{"start":{"line":77,"column":2},"end":{"line":85,"column":3}},"36":{"start":{"line":78,"column":4},"end":{"line":78,"column":62}},"37":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"38":{"start":{"line":80,"column":6},"end":{"line":80,"column":15}},"39":{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},"40":{"start":{"line":83,"column":6},"end":{"line":83,"column":43}},"41":{"start":{"line":86,"column":2},"end":{"line":86,"column":17}},"42":{"start":{"line":89,"column":0},"end":{"line":94,"column":1}},"43":{"start":{"line":90,"column":2},"end":{"line":93,"column":5}},"44":{"start":{"line":96,"column":0},"end":{"line":101,"column":1}},"45":{"start":{"line":97,"column":2},"end":{"line":100,"column":5}},"46":{"start":{"line":103,"column":0},"end":{"line":108,"column":1}},"47":{"start":{"line":104,"column":2},"end":{"line":107,"column":5}},"48":{"start":{"line":110,"column":0},"end":{"line":125,"column":1}},"49":{"start":{"line":111,"column":2},"end":{"line":113,"column":3}},"50":{"start":{"line":112,"column":4},"end":{"line":112,"column":22}},"51":{"start":{"line":114,"column":2},"end":{"line":114,"column":27}},"52":{"start":{"line":115,"column":2},"end":{"line":123,"column":3}},"53":{"start":{"line":116,"column":4},"end":{"line":116,"column":75}},"54":{"start":{"line":117,"column":4},"end":{"line":119,"column":5}},"55":{"start":{"line":118,"column":6},"end":{"line":118,"column":15}},"56":{"start":{"line":120,"column":4},"end":{"line":122,"column":5}},"57":{"start":{"line":121,"column":6},"end":{"line":121,"column":54}},"58":{"start":{"line":124,"column":2},"end":{"line":124,"column":25}},"59":{"start":{"line":127,"column":0},"end":{"line":132,"column":1}},"60":{"start":{"line":128,"column":2},"end":{"line":131,"column":5}},"61":{"start":{"line":134,"column":0},"end":{"line":149,"column":1}},"62":{"start":{"line":135,"column":2},"end":{"line":137,"column":3}},"63":{"start":{"line":136,"column":4},"end":{"line":136,"column":22}},"64":{"start":{"line":138,"column":2},"end":{"line":138,"column":29}},"65":{"start":{"line":139,"column":2},"end":{"line":147,"column":3}},"66":{"start":{"line":140,"column":4},"end":{"line":140,"column":76}},"67":{"start":{"line":141,"column":4},"end":{"line":143,"column":5}},"68":{"start":{"line":142,"column":6},"end":{"line":142,"column":15}},"69":{"start":{"line":144,"column":4},"end":{"line":146,"column":5}},"70":{"start":{"line":145,"column":6},"end":{"line":145,"column":55}},"71":{"start":{"line":148,"column":2},"end":{"line":148,"column":27}},"72":{"start":{"line":151,"column":0},"end":{"line":156,"column":1}},"73":{"start":{"line":152,"column":2},"end":{"line":155,"column":5}},"74":{"start":{"line":158,"column":0},"end":{"line":163,"column":1}},"75":{"start":{"line":159,"column":2},"end":{"line":162,"column":5}},"76":{"start":{"line":165,"column":0},"end":{"line":180,"column":1}},"77":{"start":{"line":166,"column":2},"end":{"line":168,"column":3}},"78":{"start":{"line":167,"column":4},"end":{"line":167,"column":22}},"79":{"start":{"line":169,"column":2},"end":{"line":169,"column":28}},"80":{"start":{"line":170,"column":2},"end":{"line":178,"column":3}},"81":{"start":{"line":171,"column":4},"end":{"line":171,"column":72}},"82":{"start":{"line":172,"column":4},"end":{"line":174,"column":5}},"83":{"start":{"line":173,"column":6},"end":{"line":173,"column":15}},"84":{"start":{"line":175,"column":4},"end":{"line":177,"column":5}},"85":{"start":{"line":176,"column":6},"end":{"line":176,"column":55}},"86":{"start":{"line":179,"column":2},"end":{"line":179,"column":26}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"3":{"line":44,"type":"cond-expr","locations":[{"start":{"line":44,"column":78},"end":{"line":44,"column":93}},{"start":{"line":44,"column":96},"end":{"line":44,"column":98}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"5":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"6":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]},"7":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"8":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":2},"end":{"line":111,"column":2}},{"start":{"line":111,"column":2},"end":{"line":111,"column":2}}]},"9":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":4},"end":{"line":117,"column":4}},{"start":{"line":117,"column":4},"end":{"line":117,"column":4}}]},"10":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":2},"end":{"line":135,"column":2}},{"start":{"line":135,"column":2},"end":{"line":135,"column":2}}]},"11":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":4}},{"start":{"line":141,"column":4},"end":{"line":141,"column":4}}]},"12":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":2},"end":{"line":166,"column":2}},{"start":{"line":166,"column":2},"end":{"line":166,"column":2}}]},"13":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":172,"column":4}},{"start":{"line":172,"column":4},"end":{"line":172,"column":4}}]}},"code":["'use strict';","","const QuestionAsker = require('./question_asker');","","module.exports = {","  askForPagination: askForPagination,","  askForService: askForService,","  askForDTO: askForDTO,","  askForClassesToSkipClientCode: askForClassesToSkipClientCode,","  askForClassesToSkipServerCode: askForClassesToSkipServerCode,","  askForAngularSuffixes: askForAngularSuffixes,","  askForMicroserviceNames: askForMicroserviceNames,","  askForSearchEngines: askForSearchEngines,","  askForClassesWithNoFluentMethods: askForClassesWithNoFluentMethods","};","","function askForClassesToPaginate(classes, value) {","  return QuestionAsker.selectMultipleChoices({","    classes: classes,","    question: `Please choose the entities you want to paginate with ${value}:`","  });","}","","function askForPagination(classes, values) {","  if (!(values instanceof Array)) {","    values = [values];","  }","  var listPagination = {};","  for (let i = 0; i < values.length; i++) {","    let classesToPaginate = askForClassesToPaginate(classes, values[i]);","    if (classesToPaginate.length === 0) {","      continue;","    }","    for (let j = 0; j < classesToPaginate.length; j++) {","      listPagination[classesToPaginate[j]] = values[i];","    }","  }","  return listPagination;","}","","function askForClassesToService(classes, value) {","  return QuestionAsker.selectMultipleChoices({","    classes: classes,","    question: `Please choose the entities you want to add a service ${value ? `with ${value}` : ''}:`","  });","}","","function askForService(classes, values) {","  if (!(values instanceof Array)) {","    values = [values];","  }","  var listService = {};","  for (let i = 0; i < values.length; i++) {","    let classesToService = askForClassesToService(classes, values[i]);","    if (classesToService.length === 0) {","      continue;","    }","    for (let j = 0; j < classesToService.length; j++) {","      listService[classesToService[j]] = values[i];","    }","  }","  return listService;","}","","function askForClassesToDto(classes, value) {","  return QuestionAsker.selectMultipleChoices({","    classes: classes,","    question: `Please choose the entities you want to generate the DTO with ${value}:`","  });","}","","function askForDTO(classes, values) {","  if (!(values instanceof Array)) {","    values = [values];","  }","  var listDto = {};","  for (let i = 0; i < values.length; i++) {","    let classesToDto = askForClassesToDto(classes, values[i]);","    if (classesToDto.length === 0) {","      continue;","    }","    for (let j = 0; j < classesToDto.length; j++) {","      listDto[classesToDto[j]] = values[i];","    }","  }","  return listDto;","}","","function askForClassesToSkipClientCode(classes) {","  return QuestionAsker.selectMultipleChoices({","    classes: classes,","    question: \"Please choose the entities that won't have any client code:\"","  });","}","","function askForClassesWithNoFluentMethods(classes) {","  return QuestionAsker.selectMultipleChoices({","    classes: classes,","    question: \"Please choose the entities that won't have any fluent methods:\"","  });","}","","function askForClassesToSkipServerCode(classes) {","  return QuestionAsker.selectMultipleChoices({","    classes: classes,","    question: \"Please choose the entities that won't have any server code:\"","  });","}","","function askForAngularSuffixes(classes, values) {","  if (!(values instanceof Array)) {","    values = [values];","  }","  var angularSuffixes = {};","  for (let i = 0; i < values.length; i++) {","    let classesToSuffix = askForAngularSuffixesClasses(classes, values[i]);","    if (classesToSuffix.length === 0) {","      continue;","    }","    for (let j = 0; j < classesToSuffix.length; j++) {","      angularSuffixes[classesToSuffix[j]] = values[i];","    }","  }","  return angularSuffixes;","}","","function askForAngularSuffixesClasses(classes, value) {","  return QuestionAsker.selectMultipleChoices({","    classes: classes,","    question: `Please choose the entities you want to add an angular suffix with ${value}:`","  });","}","","function askForMicroserviceNames(classes, values) {","  if (!(values instanceof Array)) {","    values = [values];","  }","  var microserviceNames = {};","  for (let i = 0; i < values.length; i++) {","    let classesToTreat = askForMicroserviceNamesClasses(classes, values[i]);","    if (classesToTreat.length === 0) {","      continue;","    }","    for (let j = 0; j < classesToTreat.length; j++) {","      microserviceNames[classesToTreat[j]] = values[i];","    }","  }","  return microserviceNames;","}","","function askForMicroserviceNamesClasses(classes, value) {","  return QuestionAsker.selectMultipleChoices({","    classes: classes,","    question: `Please choose the entities included in microservice ${value}:`","  });","}","","function askForClassesToBeSearched(classes, value) {","  return QuestionAsker.selectMultipleChoices({","    classes: classes,","    question: `Please choose the entities that can be searched with ${value}:`","  });","}","","function askForSearchEngines(classes, values) {","  if (!(values instanceof Array)) {","    values = [values];","  }","  var listSearchEngine = {};","  for (let i = 0; i < values.length; i++) {","    let classesToSearch = askForClassesToBeSearched(classes, values[i]);","    if (classesToSearch.length === 0) {","      continue;","    }","    for (let j = 0; j < classesToSearch.length; j++) {","      listSearchEngine[classesToSearch[j]] = values[i];","    }","  }","  return listSearchEngine;","}",""],"l":{"3":1,"5":1,"17":1,"18":0,"24":1,"25":0,"26":0,"28":0,"29":0,"30":0,"31":0,"32":0,"34":0,"35":0,"38":0,"41":1,"42":0,"48":1,"49":0,"50":0,"52":0,"53":0,"54":0,"55":0,"56":0,"58":0,"59":0,"62":0,"65":1,"66":0,"72":1,"73":0,"74":0,"76":0,"77":0,"78":0,"79":0,"80":0,"82":0,"83":0,"86":0,"89":1,"90":0,"96":1,"97":0,"103":1,"104":0,"110":1,"111":0,"112":0,"114":0,"115":0,"116":0,"117":0,"118":0,"120":0,"121":0,"124":0,"127":1,"128":0,"134":1,"135":0,"136":0,"138":0,"139":0,"140":0,"141":0,"142":0,"144":0,"145":0,"148":0,"151":1,"152":0,"158":1,"159":0,"165":1,"166":0,"167":0,"169":0,"170":0,"171":0,"172":0,"173":0,"175":0,"176":0,"179":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/utils/jhipster-uml_utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/utils/jhipster-uml_utils.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"isJumlFilePresent","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":29}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":2}},"3":{"start":{"line":9,"column":0},"end":{"line":16,"column":1}},"4":{"start":{"line":10,"column":2},"end":{"line":15,"column":3}},"5":{"start":{"line":11,"column":4},"end":{"line":11,"column":34}},"6":{"start":{"line":12,"column":4},"end":{"line":12,"column":16}},"7":{"start":{"line":14,"column":4},"end":{"line":14,"column":17}}},"branchMap":{},"code":["'use strict';","","const fs = require('fs');","","module.exports = {","  isJumlFilePresent: isJumlFilePresent","};","","function isJumlFilePresent() {","  try {","    fs.statSync('.juml').isFile();","    return true;","  } catch (error) {","    return false;","  }","}",""],"l":{"3":1,"5":1,"9":1,"10":0,"11":0,"12":0,"14":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/helpers/object_helper.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/helpers/object_helper.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":1,"16":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0,0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"areJHipsterEntitiesEqual","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":61}}},"2":{"name":"areFieldsEqual","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":51}}},"3":{"name":"areRelationshipsEqual","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":72}}},"4":{"name":"areOptionsEqual","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":52}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":71}},"2":{"start":{"line":7,"column":0},"end":{"line":9,"column":2}},"3":{"start":{"line":11,"column":0},"end":{"line":18,"column":1}},"4":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":93}},"6":{"start":{"line":15,"column":2},"end":{"line":17,"column":52}},"7":{"start":{"line":20,"column":0},"end":{"line":25,"column":1}},"8":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":17}},"10":{"start":{"line":24,"column":2},"end":{"line":24,"column":46}},"11":{"start":{"line":27,"column":0},"end":{"line":32,"column":1}},"12":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"13":{"start":{"line":29,"column":4},"end":{"line":29,"column":17}},"14":{"start":{"line":31,"column":2},"end":{"line":31,"column":60}},"15":{"start":{"line":34,"column":0},"end":{"line":42,"column":1}},"16":{"start":{"line":35,"column":2},"end":{"line":41,"column":66}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":6},"end":{"line":12,"column":18}},{"start":{"line":12,"column":22},"end":{"line":12,"column":35}}]},"3":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":9},"end":{"line":15,"column":64}},{"start":{"line":16,"column":9},"end":{"line":16,"column":85}},{"start":{"line":17,"column":9},"end":{"line":17,"column":51}}]},"4":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"5":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"6":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":9},"end":{"line":35,"column":69}},{"start":{"line":36,"column":9},"end":{"line":36,"column":45}},{"start":{"line":37,"column":9},"end":{"line":37,"column":59}},{"start":{"line":38,"column":9},"end":{"line":38,"column":53}},{"start":{"line":39,"column":9},"end":{"line":39,"column":71}},{"start":{"line":40,"column":9},"end":{"line":40,"column":63}},{"start":{"line":41,"column":9},"end":{"line":41,"column":65}}]}},"code":["'use strict';","","const _ = require('lodash'),","    buildException = require('../exceptions/exception_factory').buildException,","    exceptions = require('../exceptions/exception_factory').exceptions;","","module.exports = {","  areJHipsterEntitiesEqual: areJHipsterEntitiesEqual","};","","function areJHipsterEntitiesEqual(firstEntity, secondEntity) {","  if (!firstEntity || !secondEntity) {","    throw new buildException(exceptions.NullPointer, \"The objects to compare can't be nil.\");","  }","  return areFieldsEqual(firstEntity.fields, secondEntity.fields)","      && areRelationshipsEqual(firstEntity.relationships, secondEntity.relationships)","      && areOptionsEqual(firstEntity, secondEntity);","}","","function areFieldsEqual(firstFields, secondFields) {","  if (firstFields.length !== secondFields.length) {","    return false;","  }","  return _.isEqual(firstFields, secondFields);","}","","function areRelationshipsEqual(firstRelationships, secondRelationships) {","  if (firstRelationships.length !== secondRelationships.length) {","    return false;","  }","  return _.isEqual(firstRelationships, secondRelationships);","}","","function areOptionsEqual(firstEntity, secondEntity) {","  return firstEntity.entityTableName === secondEntity.entityTableName","      && firstEntity.dto === secondEntity.dto","      && firstEntity.pagination === secondEntity.pagination","      && firstEntity.service === secondEntity.service","      && firstEntity.microserviceName === secondEntity.microserviceName","      && firstEntity.searchEngine === secondEntity.searchEngine","      && firstEntity.fluentMethods === secondEntity.fluentMethods;","}",""],"l":{"3":1,"7":1,"11":1,"12":0,"13":0,"15":0,"20":1,"21":0,"22":0,"24":0,"27":1,"28":0,"29":0,"31":0,"34":1,"35":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/export/json_exporter.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/export/json_exporter.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"exportToJSON","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":88}}},"2":{"name":"createJHipsterJSONFolder","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":36}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":71}},"2":{"start":{"line":7,"column":0},"end":{"line":9,"column":2}},"3":{"start":{"line":11,"column":0},"end":{"line":25,"column":1}},"4":{"start":{"line":12,"column":2},"end":{"line":16,"column":3}},"5":{"start":{"line":13,"column":4},"end":{"line":15,"column":54}},"6":{"start":{"line":17,"column":2},"end":{"line":17,"column":29}},"7":{"start":{"line":18,"column":2},"end":{"line":24,"column":3}},"8":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"9":{"start":{"line":20,"column":6},"end":{"line":20,"column":15}},"10":{"start":{"line":22,"column":4},"end":{"line":22,"column":74}},"11":{"start":{"line":23,"column":4},"end":{"line":23,"column":79}},"12":{"start":{"line":27,"column":0},"end":{"line":35,"column":1}},"13":{"start":{"line":28,"column":2},"end":{"line":34,"column":3}},"14":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"15":{"start":{"line":30,"column":6},"end":{"line":30,"column":32}},"16":{"start":{"line":33,"column":4},"end":{"line":33,"column":30}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":6},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":40}},{"start":{"line":12,"column":44},"end":{"line":12,"column":55}}]},"3":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"4":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]}},"code":["'use strict';","","const fs = require('fs'),","    buildException = require('../exceptions/exception_factory').buildException,","    exceptions = require('../exceptions/exception_factory').exceptions;","","module.exports = {","  exportToJSON: exportToJSON","};","","function exportToJSON(entities, entityIdsToGenerate, parsedData, entityNamesToGenerate) {","  if (!entities || ! entityIdsToGenerate || !parsedData) {","    throw new buildException(","        exceptions.NullPointer,","        'Entities have to be passed to be exported.');","  }","  createJHipsterJSONFolder();","  for (let i = 0, entityIds = Object.keys(entities); i < entityIds.length; i++) {","    if (entityNamesToGenerate.indexOf(parsedData.getClass(entityIds[i]).name) === -1) {","      continue;","    }","    let file = `.jhipster/${parsedData.getClass(entityIds[i]).name}.json`;","    fs.writeFileSync(file, JSON.stringify(entities[entityIds[i]], null, '  '));","  }","}","","function createJHipsterJSONFolder() {","  try {","    if (!fs.statSync('./.jhipster').isDirectory()) {","      fs.mkdirSync('.jhipster');","    }","  } catch (error) {","    fs.mkdirSync('.jhipster');","  }","}",""],"l":{"3":1,"7":1,"11":1,"12":0,"13":0,"17":0,"18":0,"19":0,"20":0,"22":0,"23":0,"27":1,"28":0,"29":0,"30":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/jhipsteruml/entities_to_generate_handler.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/jhipsteruml/entities_to_generate_handler.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"getEntitiesToGenerate","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":44}}},"2":{"name":"getChoices","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":75}},"2":{"start":{"line":6,"column":0},"end":{"line":8,"column":2}},"3":{"start":{"line":10,"column":0},"end":{"line":22,"column":1}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":126}},"5":{"start":{"line":12,"column":2},"end":{"line":16,"column":3}},"6":{"start":{"line":13,"column":4},"end":{"line":15,"column":11}},"7":{"start":{"line":17,"column":2},"end":{"line":17,"column":40}},"8":{"start":{"line":18,"column":2},"end":{"line":21,"column":5}},"9":{"start":{"line":24,"column":0},"end":{"line":33,"column":1}},"10":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"11":{"start":{"line":26,"column":4},"end":{"line":26,"column":23}},"12":{"start":{"line":28,"column":2},"end":{"line":28,"column":23}},"13":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"14":{"start":{"line":30,"column":4},"end":{"line":30,"column":37}},"15":{"start":{"line":32,"column":2},"end":{"line":32,"column":21}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":58},"end":{"line":11,"column":69}},{"start":{"line":11,"column":72},"end":{"line":11,"column":86}}]},"2":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"3":{"line":13,"type":"cond-expr","locations":[{"start":{"line":14,"column":8},"end":{"line":14,"column":19}},{"start":{"line":15,"column":8},"end":{"line":15,"column":10}}]},"4":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]}},"code":["'use strict';","","const selectMultipleChoices = require('../helpers/question_asker').selectMultipleChoices,","    askConfirmation = require('../helpers/question_asker').askConfirmation;","","module.exports = {","  getEntitiesToGenerate: getEntitiesToGenerate","};","","function getEntitiesToGenerate(entityNames) {","  console.log(`The following ${entityNames.length === 1 ? 'class has' : 'classes have'} changed: ${entityNames.join(', ')}.`);","  if (entityNames.length === 1) {","    return askConfirmation({question: `Generate ${entityNames[0]}?`, defaultValue: true})","      ? entityNames","      : [];","  }","  var choices = getChoices(entityNames);","  return selectMultipleChoices({","    choices: choices,","    question: 'Select the entities to override.'","  });","}","","function getChoices(entityNames) {","  if (entityNames.length === 1) {","    return entityNames;","  }","  var choiceArray = [];","  for (let i = 0; i < entityNames.length; i++) {","    choiceArray.push(entityNames[i]);","  }","  return choiceArray;","}",""],"l":{"3":1,"6":1,"10":1,"11":0,"12":0,"13":0,"17":0,"18":0,"24":1,"25":0,"26":0,"28":0,"29":0,"30":0,"32":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/export/file_writer.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/export/file_writer.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"writeFile","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":5,"column":0},"end":{"line":13,"column":2}},"3":{"start":{"line":15,"column":0},"end":{"line":17,"column":1}},"4":{"start":{"line":16,"column":2},"end":{"line":16,"column":60}}},"branchMap":{},"code":["'use strict';","","const fs = require('fs');","","module.exports = {","  /**","   * args: {","   *   fileName: string,","   *   content: string","   * }","   */","  writeFile: writeFile","};","","function writeFile(args) {","  fs.writeFileSync(args.fileName, args.content, null, '  ');","}",""],"l":{"3":1,"5":1,"15":1,"16":0}},"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/helpers/class_helper.js":{"path":"/home/travis/build/npmtest/node-npmtest-jhipster-uml/node_modules/jhipster-uml/lib/helpers/class_helper.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"getClassNames","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":33}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":31},"end":{"line":22,"column":50}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":71}},"2":{"start":{"line":6,"column":0},"end":{"line":8,"column":2}},"3":{"start":{"line":16,"column":0},"end":{"line":26,"column":1}},"4":{"start":{"line":17,"column":2},"end":{"line":20,"column":3}},"5":{"start":{"line":18,"column":4},"end":{"line":19,"column":69}},"6":{"start":{"line":21,"column":2},"end":{"line":21,"column":18}},"7":{"start":{"line":22,"column":2},"end":{"line":24,"column":5}},"8":{"start":{"line":23,"column":4},"end":{"line":23,"column":44}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":16}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]}},"code":["'use strict';","","const buildException = require('../exceptions/exception_factory').buildException,","    exceptions = require('../exceptions/exception_factory').exceptions;","","module.exports = {","  getClassNames: getClassNames","};","","/**"," * Gets the class' names."," * @param classes the classes"," * @returns {Object} an object containing all the class' names by their id."," * @throws {NullPointerException} if the passed object is nil."," */","function getClassNames (classes) {","  if (!classes) {","    throw new buildException(","        exceptions.NullPointer, 'The classes object cannot be nil.');","  }","  var object = {};","  Object.keys(classes).forEach(function (classId) {","    object[classId] = classes[classId].name;","  });","  return object;","}",""],"l":{"3":1,"6":1,"16":1,"17":0,"18":0,"21":0,"22":0,"23":0,"25":0}}}